"957e2dda26abf5f24659e2df4374bf14dacca9df"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((212 . 217)) nil (24167 37108 938164 0) 0 nil]) ((211 . 213) (#("\"" 0 1 (fontified nil)) . -211) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (208 . 212)) nil (24167 37108 938186 0) 0 nil]) ((nil rear-nonsticky nil 207 . 208) (nil fontified nil 183 . 208) (183 . 208)) nil (24167 37108 938190 0) 0 nil]) ((182 . 183) (t 24167 14348 116973 346000)) nil (24167 37108 938192 0) 0 nil]) ((190 . 195)) nil (24167 14348 102696 0) 0 nil]) ((189 . 191) (#("\"" 0 1 (fontified nil)) . -189) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (183 . 190)) nil (24167 14348 102719 0) 0 nil]) ((182 . 183) (t 24167 13521 842151 705000)) nil (24167 14348 102722 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -182) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("
" 0 1 (fontified t rear-nonsticky t)) . -183) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 184) nil (24167 13521 836206 0) 0 nil]) ((nil rear-nonsticky nil 183 . 184) (nil fontified nil 153 . 184) (153 . 184)) nil (24167 13521 836211 0) 0 nil]) ((#("c" 0 1 (fontified t)) . -153) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("u" 0 1 (fontified t)) . -154) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (#("s" 0 1 (fontified t)) . -155) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("t" 0 1 (fontified t)) . -156) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("o" 0 1 (fontified t)) . -157) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (#("m" 0 1 (fontified t)) . -158) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("_" 0 1 (fontified t)) . -159) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (#("d" 0 1 (fontified t)) . -160) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("e" 0 1 (fontified t)) . -161) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("b" 0 1 (fontified t)) . -162) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("u" 0 1 (fontified t)) . -163) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (#("g" 0 1 (fontified t)) . -164) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#("_" 0 1 (fontified t)) . -165) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (#("d" 0 1 (fontified t)) . -166) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("e" 0 1 (fontified t)) . -167) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("r" 0 1 (fontified t)) . -168) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (#("i" 0 1 (fontified t)) . -169) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (#("v" 0 1 (fontified t)) . -170) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (#("e" 0 1 (rear-nonsticky t fontified t)) . -171) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) 172) nil (24167 13521 836666 0) 0 nil]) ((nil fontified nil 171 . 172) (nil fontified nil 153 . 171) (153 . 172)) nil (24167 13521 836682 0) 0 nil]) ((#("net-parser-rs=\"~0.1\"" 0 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 20 (fontified t face font-lock-string-face)) . 153) (undo-tree-id524 . -20) (undo-tree-id525 . -20) (undo-tree-id526 . -20) (undo-tree-id527 . -20) (undo-tree-id528 . -20) (undo-tree-id529 . -20) (undo-tree-id530 . -20) (undo-tree-id531 . -20) (undo-tree-id532 . -20) (undo-tree-id533 . -20) (undo-tree-id534 . -20) (undo-tree-id535 . -20) (undo-tree-id536 . -20) (undo-tree-id537 . -20) (undo-tree-id538 . -20) (undo-tree-id539 . -20) (undo-tree-id540 . -20) (undo-tree-id541 . -20) (undo-tree-id542 . -20) (undo-tree-id543 . -20) (undo-tree-id544 . -20) (undo-tree-id545 . -20) (undo-tree-id546 . -20) (undo-tree-id547 . -20) (undo-tree-id548 . -20) (undo-tree-id549 . -20) (undo-tree-id550 . -20) (undo-tree-id551 . -20) (undo-tree-id552 . -19) (undo-tree-id553 . -20) (undo-tree-id554 . -20) (undo-tree-id555 . -20) (undo-tree-id556 . -20) (undo-tree-id557 . -20) (undo-tree-id558 . -20) (undo-tree-id559 . -20) (undo-tree-id560 . -20) (undo-tree-id561 . -20) (undo-tree-id562 . -20) (undo-tree-id563 . -20) (undo-tree-id564 . -20) (undo-tree-id565 . -20) (undo-tree-id566 . -20) (undo-tree-id567 . -20) (undo-tree-id568 . -20) (undo-tree-id569 . -20) (undo-tree-id570 . -20) (undo-tree-id571 . -20) (undo-tree-id572 . -20) (undo-tree-id573 . -20) (undo-tree-id574 . -20) (undo-tree-id575 . -20) (undo-tree-id576 . -20) (undo-tree-id577 . -20) (undo-tree-id578 . -20) (undo-tree-id579 . -20) (undo-tree-id580 . -20) (undo-tree-id581 . -20) (undo-tree-id582 . -20) (undo-tree-id583 . -20) (t 24167 7484 410953 162000)) nil (24167 13521 836748 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . -173) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 174 (t 24167 7483 419508 801000)) nil (24167 7484 398291 0) 0 nil]) ((nil rear-nonsticky nil 173 . 174) (nil fontified nil 153 . 174) (153 . 174)) nil (24167 7483 406336 0) 0 nil]) ((#("etherparse = \"0.9.0\"" 0 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t) 13 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face)) . 153) (undo-tree-id40 . -20) (undo-tree-id41 . -19) (undo-tree-id42 . -19) (undo-tree-id43 . -19) (undo-tree-id44 . -19) (undo-tree-id45 . -19) (undo-tree-id46 . -19) (undo-tree-id47 . -19) (undo-tree-id48 . -19) (undo-tree-id49 . -19) (undo-tree-id50 . -19) (undo-tree-id51 . -19) (undo-tree-id52 . -19) (undo-tree-id53 . -19) (undo-tree-id54 . -19) (undo-tree-id55 . -19) (undo-tree-id56 . -19) (undo-tree-id57 . -19) (undo-tree-id58 . -19) (undo-tree-id59 . -19) (undo-tree-id60 . -19) (undo-tree-id61 . -19) (undo-tree-id62 . -19) (undo-tree-id63 . -19) (undo-tree-id64 . -19) (undo-tree-id65 . -19) (undo-tree-id66 . -20) (undo-tree-id67 . -20) (undo-tree-id68 . -20) (undo-tree-id69 . -20) (undo-tree-id70 . -20) (undo-tree-id71 . -20) (undo-tree-id72 . -20) (undo-tree-id73 . -20) (undo-tree-id74 . -20) (undo-tree-id75 . -20) (undo-tree-id76 . -20) (undo-tree-id77 . -20) (undo-tree-id78 . -20) (undo-tree-id79 . -20) (undo-tree-id80 . -20) (undo-tree-id81 . -20) (undo-tree-id82 . -20) (undo-tree-id83 . -20) (undo-tree-id84 . -20) (undo-tree-id85 . -20) (undo-tree-id86 . -19) (undo-tree-id87 . -20) (undo-tree-id88 . -20) (undo-tree-id89 . -20) (undo-tree-id90 . -20) (undo-tree-id91 . -20) (undo-tree-id92 . -20) (undo-tree-id93 . -20) (t 24166 21743 816228 606000)) nil (24167 7483 406409 0) 0 nil]) ((167 . 172) (166 . 168) (#("\"" 0 1 (fontified nil)) . -166) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (153 . 167)) nil (24166 21743 803109 0) 0 nil]) ((152 . 153) (t 24166 17567 430688 394000)) nil (24166 21743 803115 0) 0 nil]) ((146 . 151) (145 . 147) (#("\"" 0 1 (fontified nil)) . -145) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (141 . 146)) nil (24166 17567 417704 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -141) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 142) nil (24166 17567 417713 0) 0 nil]) ((138 . 142)) nil (24166 17567 417716 0) 0 nil]) ((#("mio = { version = \"0.7\", features = [\"udp\", \"os-poll\"] }
pnet = { version = \"0.25.0\"}" 0 3 (fontified t face font-lock-variable-name-face) 3 18 (fontified t) 18 23 (fontified t face font-lock-string-face) 23 37 (fontified t) 37 42 (fontified t face font-lock-string-face) 42 44 (fontified t) 44 53 (fontified t face font-lock-string-face) 53 57 (fontified t) 57 61 (fontified t face font-lock-variable-name-face) 61 76 (fontified t) 76 84 (fontified t face font-lock-string-face) 84 85 (fontified t)) . 138) (undo-tree-id5 . -18) (undo-tree-id6 . -19) (undo-tree-id7 . -57) (undo-tree-id8 . -85) (undo-tree-id9 . -84) (undo-tree-id10 . -85) (undo-tree-id11 . -84) (undo-tree-id12 . -85) (undo-tree-id13 . -84) (undo-tree-id14 . -85) (undo-tree-id15 . -84) (undo-tree-id16 . -85) (undo-tree-id17 . -83) (undo-tree-id18 . -84) (undo-tree-id19 . -83) (undo-tree-id20 . -84) (undo-tree-id21 . -84) (undo-tree-id22 . -85) (undo-tree-id23 . -84) (undo-tree-id24 . -85) (undo-tree-id25 . -64) (undo-tree-id26 . -65) (undo-tree-id27 . -85) (undo-tree-id28 . -85) (undo-tree-id29 . -85) (undo-tree-id30 . -85) (undo-tree-id31 . -85) (undo-tree-id32 . -85) (undo-tree-id33 . -85) (undo-tree-id34 . -57) (undo-tree-id35 . -57) (undo-tree-id36 . -18) (undo-tree-id37 . -19) (t 24165 65373 561107 984000)) nil (24166 17567 417753 0) 0 nil]) ((217 . 221)) nil (24165 65373 548219 0) 0 nil]) ((215 . 217) (214 . 216) (#("\"" 0 1 (fontified nil)) . -214) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (203 . 215) (202 . 204) (#("{" 0 1 (fontified nil)) . -202) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (202 . 203)) nil (24165 65373 548241 0) 0 nil]) ((#("{" 0 1 (fontified nil)) . -202) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (#("}" 0 1 (fontified t)) . 203) (#(" " 0 1 (fontified t)) . -203) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (#("v" 0 1 (fontified t)) . -204) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (#("e" 0 1 (fontified t)) . -205) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("r" 0 1 (fontified t)) . -206) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 207) nil (24165 65373 548444 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -207) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#("s" 0 1 (fontified t)) . -208) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("o" 0 1 (fontified t)) . -209) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (#("n" 0 1 (fontified t)) . -210) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (#(" " 0 1 (fontified t)) . -211) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (#("=" 0 1 (fontified t)) . -212) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) 213) nil (24165 65373 548534 0) 0 nil]) ((203 . 213) (202 . 204) (#("{" 0 1 (fontified nil)) . -202) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (195 . 203)) nil (24165 65373 548541 0) 0 nil] [nil nil ((nil rear-nonsticky nil 213 . 214) (nil fontified nil 195 . 214) (195 . 214)) ((#("version = \"0.25.0\"
" 0 7 (face font-lock-variable-name-face fontified nil) 7 10 (fontified nil) 10 18 (face font-lock-string-face fontified nil) 18 19 (rear-nonsticky nil fontified nil)) . 195) (undo-tree-id356 . -19) (undo-tree-id357 . -19) (undo-tree-id358 . -19) (undo-tree-id359 . -19) (undo-tree-id360 . -19) (undo-tree-id361 . -19) (undo-tree-id362 . -19) (undo-tree-id363 . -19) (undo-tree-id364 . -19) (undo-tree-id365 . -19) (undo-tree-id366 . -19) (undo-tree-id367 . -19) (undo-tree-id368 . -19) (undo-tree-id369 . -19) (undo-tree-id370 . -19) (undo-tree-id371 . -19) (undo-tree-id372 . -19) (undo-tree-id373 . -19) (undo-tree-id374 . -19) (nil rear-nonsticky t 213 . 214) (t 24165 65352 169808 55000)) (24165 65352 157712 0) 0 nil]) ((194 . 195) (t 24165 63173 763706 852000)) nil (24165 65352 731260 0) 0 nil]) ((183 . 190) (182 . 184) (#("\"" 0 1 (fontified nil)) . -182) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (180 . 183)) nil (24165 63173 751590 0) 0 nil]) ((#("," 0 1 (face font-lock-string-face fontified t)) . -179) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -180) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) 181) nil (24165 63173 751615 0) 0 nil]) ((179 . 181) (t 24165 63052 579290 590000)) nil (24165 63173 751618 0) 0 nil]) ((159 . 160)) nil (24165 63052 567041 0) 0 nil]) ((#("2" 0 1 (face font-lock-string-face fontified t)) . -159) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) 160 (t 24165 63049 726603 392000)) nil (24165 63052 567062 0) 0 nil]) ((138 . 141)) nil (24165 63049 714520 0) 0 nil]) ((#("tokio" 0 5 (face font-lock-variable-name-face fontified t)) . -138) (undo-tree-id324 . -5) (undo-tree-id325 . -1) (undo-tree-id326 . -5) (undo-tree-id327 . -5) 143) nil (24165 63049 714541 0) 0 nil]) ((178 . 181)) nil (24165 63049 714544 0) 0 nil]) ((#("full" 0 4 (face font-lock-string-face fontified t)) . -178) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . 4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) 182 (t 24165 62849 600985 148000)) nil (24165 63049 714559 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . -186) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -187) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (undo-tree-id106 . 1) (undo-tree-id107 . -1) (undo-tree-id108 . 1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 188) nil (24165 62849 588340 0) 0 nil]) ((nil rear-nonsticky nil 186 . 187) (nil fontified nil 138 . 187) (138 . 187)) nil (24165 62849 588346 0) 0 nil]) ((#("tokio = \"" 0 5 (face font-lock-variable-name-face fontified t) 5 8 (fontified t) 8 9 (face font-lock-string-face fontified t)) . 138) (undo-tree-id114 . -9) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -5) (undo-tree-id124 . -5) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -9) (undo-tree-id137 . -9) (undo-tree-id138 . -9) (undo-tree-id139 . -9) (undo-tree-id140 . -9) (undo-tree-id141 . -9) (undo-tree-id142 . -9) (undo-tree-id143 . -9)) nil (24165 62849 588386 0) 0 nil]) ((146 . 148) (#("\"" 0 1 (fontified nil)) . -146) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (146 . 147)) nil (24165 62849 588391 0) 0 nil]) ((138 . 146)) nil (24165 62849 588392 0) 0 nil]) ((#("mio = \"" 0 3 (face font-lock-variable-name-face fontified t) 3 6 (fontified t) 6 7 (face font-lock-string-face fontified t)) . -138) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -7) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -6) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -7) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -6) (undo-tree-id193 . -7) (undo-tree-id194 . 1) (undo-tree-id195 . -7) (undo-tree-id196 . 1) (undo-tree-id197 . -7) (undo-tree-id198 . 1) (undo-tree-id199 . -7) (undo-tree-id200 . -7) 145) nil (24165 62849 588460 0) 0 nil]) ((#("0" 0 1 (face font-lock-string-face fontified t)) . -145) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 146) nil (24165 62849 588516 0) 0 nil]) ((#("." 0 1 (face font-lock-string-face fontified t)) . -146) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -147) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . 1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) 148) nil (24165 62849 588606 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 122) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1)) nil (24165 62849 588613 0) 0 nil]) ((#("features = [\"os-poll\", \"tcp\"]" 0 8 (face font-lock-variable-name-face fontified t) 8 12 (fontified t) 12 21 (face font-lock-string-face fontified t) 21 23 (fontified t) 23 28 (face font-lock-string-face fontified t) 28 29 (fontified t rear-nonsticky t)) . 122) (undo-tree-id321 . -9) (undo-tree-id322 . -9) (undo-tree-id323 . -29)) nil (24165 62849 588618 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((138 . 139)) ((#("/" 0 1 (fontified t)) . 138) (undo-tree-id77 . -1) (undo-tree-id78 . -1)) (24165 62810 955021 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -138) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 139) ((138 . 139)) (24165 62810 955121 0) 0 nil]) ((138 . 139)) ((#("t" 0 1 (fontified t)) . 138) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1)) (24165 62811 158363 0) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -138) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . 1) (undo-tree-id68 . -1) (undo-tree-id69 . 1) (undo-tree-id70 . -1) (undo-tree-id71 . 1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) 139 (t 24165 62798 581910 802000)) ((138 . 139)) (24165 62811 462656 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 122) (undo-tree-id32 . -1)) ((122 . 123) (t 24165 62798 581910 802000)) (24165 62811 751352 0) 0 nil]) ((#("features = [\"os-poll\", \"tcp\"]" 0 8 (face font-lock-variable-name-face fontified t) 8 12 (fontified t) 12 21 (face font-lock-string-face fontified t) 21 23 (fontified t) 23 28 (face font-lock-string-face fontified t) 28 29 (fontified t rear-nonsticky t)) . 122)) ((122 . 151)) (24165 62812 126994 0) 0 nil]) ((#("mio = \"0.6" 0 3 (face font-lock-variable-name-face fontified t) 3 6 (fontified t) 6 10 (face font-lock-string-face fontified t)) . 168) (undo-tree-id34 . -10) (undo-tree-id36 . -9) (undo-tree-id38 . -10) (undo-tree-id40 . -10) (undo-tree-id42 . -10) (undo-tree-id44 . -10) (undo-tree-id46 . -10) (undo-tree-id48 . -10) (undo-tree-id50 . -10) (undo-tree-id52 . -10) (undo-tree-id54 . -10) (undo-tree-id55 . -10) (undo-tree-id56 . -10) (undo-tree-id58 . -10) (t 24165 62703 264599 810000)) ((168 . 178)) (24165 62812 638758 0) 0 nil]) ((177 . 178)) ((#("6" 0 1 (face font-lock-string-face fontified t)) . 177) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) (24165 62812 990568 0) 0 nil]) ((#("7" 0 1 (face font-lock-string-face fontified t)) . -177) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 178 (t 24165 61906 592143 222000)) nil (24165 62813 302294 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -121) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 122 (t 24165 61905 265160 625000)) nil (24165 61906 581027 0) 0 nil]) ((nil rear-nonsticky nil 151 . 152) (nil fontified nil 123 . 152) (123 . 152)) nil (24165 61905 253739 0) 0 nil]) ((122 . 124) (t 24165 61624 343813 354000)) nil (24165 61905 253748 0) 0 nil]) ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . 121) (undo-tree-id2 . 1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (120 . 121) (#(" " 0 1 (fontified nil)) . -120) (undo-tree-id5 . -1) (120 . 121) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -120) (undo-tree-id6 . -1) (119 . 121)) nil (24165 61624 333323 0) 0 nil]) ((#("9" 0 1 (face font-lock-string-face fontified t)) . -119) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 120 (t 24165 61603 597754 205000)) nil (24165 61624 333346 0) 0 nil]) ((116 . 120) (115 . 117) (#("\"" 0 1 (fontified nil)) . -115) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (115 . 116)) nil (24165 61603 585366 0) 0 nil]) ((105 . 115)) nil (24165 61603 585372 0) 0 nil]) ((105 . 106) (t 24165 61121 568863 218000)) nil (24165 61603 585374 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 105) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1)) nil (24165 61121 557816 0) 0 nil]) ((#("edition = \"2018\"" 0 7 (fontified t face font-lock-variable-name-face) 7 10 (fontified t) 10 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face)) . 105) (undo-tree-id66 . -11) (undo-tree-id67 . -10) (undo-tree-id68 . -11) (undo-tree-id69 . -11) (undo-tree-id70 . -16) (t 24165 60041 595783 554000)) nil (24165 61121 557827 0) 0 nil]) ((nil rear-nonsticky nil 148 . 149) (nil fontified nil 138 . 149) (138 . 149) (t 24165 59270 164576 88000)) nil (24165 60041 585232 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 123) (undo-tree-id48 . -1)) nil (24165 59270 153571 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 123) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (24165 59270 153591 0) 0 nil]) ((#("# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 96 (fontified t face font-lock-comment-face)) . 123) (undo-tree-id58 . -15) (undo-tree-id59 . -15) (undo-tree-id60 . -15) (undo-tree-id61 . -15) (undo-tree-id62 . -96)) nil (24165 59270 153601 0) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((121 . 122)) ((#("
" 0 1 (fontified t)) . 121) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (t 24165 59249 575235 178000)) (24165 59249 564198 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -121) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 122) ((121 . 122)) (24165 59266 522227 0) 0 nil]) ((#("
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
" 0 1 (fontified t) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 98 (fontified t face font-lock-comment-face)) . 122) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -98) (undo-tree-id32 . -98) (undo-tree-id33 . -98) (undo-tree-id34 . -98) (undo-tree-id35 . -98) (undo-tree-id36 . -98) (undo-tree-id37 . -98) (undo-tree-id38 . -98) (undo-tree-id39 . -98) (undo-tree-id40 . -1) (t 24165 59245 19260 866000)) ((122 . 220)) (24165 59266 698523 0) 0 nil]) ((118 . 120)) ((#("20" 0 2 (fontified t face font-lock-string-face)) . 118) (undo-tree-id47 . -2)) (24165 59266 882504 0) 0 nil]) ((#("1" 0 1 (fontified t face font-lock-string-face)) . -118) (undo-tree-id0 . -1) (undo-tree-id2 . -1) (undo-tree-id4 . -1) (#("8" 0 1 (fontified t face font-lock-string-face)) . -119) (undo-tree-id6 . -1) (undo-tree-id8 . -1) 120 (t 24165 59057 390067 978000)) ((118 . 120)) (24165 59267 50357 0) 0 nil]) nil nil (24165 59267 370539 0) 0 nil] #1# 12482 75 nil)