"d1a34c191b4f281686b55caf2d081d3876ef2ae9"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#30=[nil nil ((254 . 260)) nil (24166 143 751464 0) 0 nil]) ((#("sender_" 0 7 (fontified t face font-lock-variable-name-face)) . -254) (undo-tree-id6372 . -7) (undo-tree-id6373 . -7) (undo-tree-id6374 . -7) (undo-tree-id6375 . -7) (undo-tree-id6376 . -7) (undo-tree-id6377 . -7) (undo-tree-id6378 . -7) (undo-tree-id6379 . -7) (undo-tree-id6380 . -7) (undo-tree-id6381 . -7) (undo-tree-id6382 . -7) (undo-tree-id6383 . -7) (undo-tree-id6384 . -7) (undo-tree-id6385 . -7) (undo-tree-id6386 . -7) (undo-tree-id6387 . -7) (undo-tree-id6388 . -7) (undo-tree-id6389 . -7) (undo-tree-id6390 . -7) (undo-tree-id6391 . -7) (undo-tree-id6392 . -7) (undo-tree-id6393 . -7) (undo-tree-id6394 . -7) (undo-tree-id6395 . -7) (undo-tree-id6396 . -7) (undo-tree-id6397 . -7) 261) nil (24166 143 751519 0) 0 nil]) ((#("socket" 0 6 (fontified t face font-lock-variable-name-face)) . -261) (undo-tree-id6398 . -6) (undo-tree-id6399 . -6) (undo-tree-id6400 . -6) (undo-tree-id6401 . -6) 267 (t 24166 133 57920 604000)) nil (24166 143 751530 0) 0 nil]) ((80 . 83)) nil (24166 133 23914 0) 0 nil]) ((#("v" 0 1 (fontified t)) . -80) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (#("e" 0 1 (fontified t)) . -81) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (undo-tree-id6234 . -1) (undo-tree-id6235 . -1) (undo-tree-id6236 . -1) (undo-tree-id6237 . -1) (#("c" 0 1 (fontified t)) . -82) (undo-tree-id6238 . -1) (undo-tree-id6239 . -1) (undo-tree-id6240 . -1) (undo-tree-id6241 . -1) (undo-tree-id6242 . -1) (undo-tree-id6243 . -1) (undo-tree-id6244 . -1) (undo-tree-id6245 . -1) (undo-tree-id6246 . -1) (undo-tree-id6247 . -1) (undo-tree-id6248 . -1) (undo-tree-id6249 . -1) (undo-tree-id6250 . -1) (undo-tree-id6251 . -1) (undo-tree-id6252 . -1) (undo-tree-id6253 . -1) (undo-tree-id6254 . -1) (undo-tree-id6255 . -1) (undo-tree-id6256 . -1) (undo-tree-id6257 . -1) (undo-tree-id6258 . -1) (undo-tree-id6259 . -1) (undo-tree-id6260 . -1) (undo-tree-id6261 . -1) (undo-tree-id6262 . -1) (undo-tree-id6263 . -1) (undo-tree-id6264 . -1) (undo-tree-id6265 . -1) (undo-tree-id6266 . -1) (undo-tree-id6267 . -1) (undo-tree-id6268 . -1) (undo-tree-id6269 . -1) (undo-tree-id6270 . -1) (undo-tree-id6271 . -1) (undo-tree-id6272 . -1) (undo-tree-id6273 . -1) (#("!" 0 1 (fontified t)) . -83) (undo-tree-id6274 . -1) (undo-tree-id6275 . -1) (undo-tree-id6276 . -1) (undo-tree-id6277 . -1) (undo-tree-id6278 . -1) (undo-tree-id6279 . -1) (undo-tree-id6280 . -1) (undo-tree-id6281 . -1) (undo-tree-id6282 . -1) (undo-tree-id6283 . -1) (undo-tree-id6284 . -1) (undo-tree-id6285 . -1) (undo-tree-id6286 . -1) (undo-tree-id6287 . -1) (undo-tree-id6288 . -1) (undo-tree-id6289 . -1) (undo-tree-id6290 . -1) (undo-tree-id6291 . -1) (undo-tree-id6292 . -1) (undo-tree-id6293 . -1) (undo-tree-id6294 . -1) 84) nil (24166 133 24121 0) 0 nil]) ((80 . 84)) nil (24166 133 24129 0) 0 nil]) ((#("V" 0 1 (fontified t face font-lock-type-face)) . -80) (undo-tree-id6295 . -1) (undo-tree-id6296 . -1) (undo-tree-id6297 . -1) (undo-tree-id6298 . -1) (undo-tree-id6299 . -1) (undo-tree-id6300 . -1) (undo-tree-id6301 . -1) (undo-tree-id6302 . -1) (undo-tree-id6303 . -1) (undo-tree-id6304 . -1) (undo-tree-id6305 . -1) (undo-tree-id6306 . -1) (undo-tree-id6307 . -1) (undo-tree-id6308 . -1) (undo-tree-id6309 . -1) (undo-tree-id6310 . -1) (undo-tree-id6311 . -1) (undo-tree-id6312 . -1) (undo-tree-id6313 . -1) (undo-tree-id6314 . -1) (undo-tree-id6315 . -1) (undo-tree-id6316 . -1) (undo-tree-id6317 . -1) (undo-tree-id6318 . -1) (undo-tree-id6319 . -1) (undo-tree-id6320 . -1) (undo-tree-id6321 . -1) (undo-tree-id6322 . -1) (undo-tree-id6323 . -1) (undo-tree-id6324 . -1) (undo-tree-id6325 . -1) (undo-tree-id6326 . -1) (undo-tree-id6327 . -1) (undo-tree-id6328 . -1) (undo-tree-id6329 . -1) (undo-tree-id6330 . -1) (undo-tree-id6331 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -81) (undo-tree-id6332 . -1) (undo-tree-id6333 . -1) (undo-tree-id6334 . -1) (undo-tree-id6335 . -1) (undo-tree-id6336 . -1) (undo-tree-id6337 . -1) (undo-tree-id6338 . -1) (undo-tree-id6339 . -1) (undo-tree-id6340 . -1) (undo-tree-id6341 . -1) (undo-tree-id6342 . -1) (undo-tree-id6343 . -1) (undo-tree-id6344 . -1) (undo-tree-id6345 . -1) (undo-tree-id6346 . -1) (undo-tree-id6347 . -1) (undo-tree-id6348 . -1) (undo-tree-id6349 . -1) (undo-tree-id6350 . -1) (undo-tree-id6351 . -1) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -82) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) 83 (t 24166 117 637968 264000)) nil (24166 133 24218 0) 0 nil]) ((118 . 125)) nil (24166 117 604932 0) 0 nil]) ((140 . 141)) nil (24166 117 604937 0) 0 nil]) ((#("." 0 1 (fontified t)) . -140) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) 141) nil (24166 117 604952 0) 0 nil]) ((#("r" 0 1 (fontified t)) . -141) (undo-tree-id6080 . -1) (undo-tree-id6081 . -1) (#("e" 0 1 (fontified t)) . -142) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (#("d" 0 1 (fontified t)) . -143) (undo-tree-id6084 . -1) (#("u" 0 1 (fontified t)) . -144) (undo-tree-id6085 . -1) (#("c" 0 1 (fontified t)) . -145) (undo-tree-id6086 . -1) 146) nil (24166 117 604965 0) 0 nil]) ((141 . 146)) nil (24166 117 604967 0) 0 nil]) ((140 . 141)) nil (24166 117 604968 0) 0 nil]) ((#("." 0 1 (fontified t)) . -140) (undo-tree-id6087 . -1) (undo-tree-id6088 . -1) (#("i" 0 1 (fontified t)) . -141) (undo-tree-id6089 . -1) (undo-tree-id6090 . -1) (#("t" 0 1 (fontified t)) . -142) (undo-tree-id6091 . -1) (undo-tree-id6092 . -1) (#("e" 0 1 (fontified t)) . -143) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (#("r" 0 1 (fontified t)) . -144) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -145) (undo-tree-id6097 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -146) (undo-tree-id6098 . -1) (#("." 0 1 (fontified t)) . -147) (undo-tree-id6099 . -1) 148) nil (24166 117 604985 0) 0 nil]) ((147 . 148)) nil (24166 117 604988 0) 0 nil]) ((apply yas--snippet-revive 141 147 #1=#s(yas--snippet nil nil nil 19 nil nil nil nil)) (apply yas--take-care-of-redo #1#) (141 . 147) (#("iter()" 0 6 (fontified nil)) . 141) (141 . 147) (#("iter" 0 4 (fontified t)) . -141) (undo-tree-id6100 . -4) (undo-tree-id6101 . -4) 145) nil (24166 117 604993 0) 0 nil]) ((140 . 145)) nil (24166 117 604995 0) 0 nil]) ((#("." 0 1 (fontified t)) . -140) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) 141) nil (24166 117 604998 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -141) (undo-tree-id6104 . -1) 142) nil (24166 117 605000 0) 0 nil]) ((141 . 142)) nil (24166 117 605001 0) 0 nil]) ((#("c" 0 1 (fontified t)) . -141) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (#("o" 0 1 (fontified t)) . -142) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) 143) nil (24166 117 605007 0) 0 nil]) ((140 . 143)) nil (24166 117 605008 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -140) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) 141) nil (24166 117 605011 0) 0 nil]) ((140 . 141)) nil (24166 117 605012 0) 0 nil]) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -140) (undo-tree-id6111 . -1) (undo-tree-id6112 . -1) (undo-tree-id6113 . -1) (undo-tree-id6114 . -1) (undo-tree-id6115 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -141) (undo-tree-id6116 . -1) (undo-tree-id6117 . -1) (undo-tree-id6118 . -1) (undo-tree-id6119 . -1) (undo-tree-id6120 . -1) (#("." 0 1 (fontified t)) . -142) (undo-tree-id6121 . -1) (undo-tree-id6122 . -1) (undo-tree-id6123 . -1) (undo-tree-id6124 . -1) (undo-tree-id6125 . -1) (#("
" 0 1 (fontified t)) . -143) (undo-tree-id6126 . -1) (undo-tree-id6127 . -1) (undo-tree-id6128 . -1) (undo-tree-id6129 . -1) 144) nil (24166 117 605034 0) 0 nil]) ((#("    for iface in datalink::interfaces() {
        println!(\"{:?}\", iface.ips);
    }" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 25 (fontified t face font-lock-constant-face) 25 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-2-face)) 38 39 (fontified t face (rainbow-delimiters-depth-2-face)) 39 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-2-face)) 41 50 (fontified t) 50 58 (fontified t face rust-builtin-formatting-macro-face) 58 59 (fontified t face (rainbow-delimiters-depth-3-face)) 59 60 (fontified t face font-lock-string-face) 60 64 (fontified t face rust-string-interpolation-face) 64 65 (fontified t face font-lock-string-face) 65 76 (fontified t) 76 77 (fontified t face (rainbow-delimiters-depth-3-face)) 77 83 (fontified t) 83 84 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-2-face))) . 144) (undo-tree-id6130 . -84) (undo-tree-id6131 . -4) (undo-tree-id6132 . -84) (undo-tree-id6133 . -84)) nil (24166 117 605041 0) 0 nil]) ((142 . 143) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 142) (141 . 142) (140 . 142) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -140) (140 . 141)) nil (24166 117 605043 0) 0 nil]) ((apply yas--snippet-revive 128 140 #2=#s(yas--snippet nil nil nil 18 nil nil nil nil)) (apply yas--take-care-of-redo #2#) (128 . 140) (#("interfaces()" 0 12 (fontified nil)) . 128) (128 . 140) (#("interfaces" 0 10 (fontified nil)) . -128) (128 . 138) (#("interf" 0 6 (fontified t)) . -128) (undo-tree-id6134 . -6) 134) nil (24166 117 605048 0) 0 nil]) ((130 . 134)) nil (24166 117 605049 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -130) (undo-tree-id6135 . -1) (#("r" 0 1 (fontified t)) . -131) (undo-tree-id6136 . -1) 132) nil (24166 117 605052 0) 0 nil]) ((126 . 132)) nil (24166 117 605054 0) 0 nil]) ((apply yas--snippet-revive 118 126 #3=#s(yas--snippet nil nil nil 17 nil nil nil nil)) (apply yas--take-care-of-redo #3#) (118 . 126) (#("datalink" 0 8 (fontified nil)) . 118) (118 . 126) (#("datalink" 0 8 (fontified nil)) . -118) (118 . 126) (#("datal" 0 5 (fontified t)) . -118) (undo-tree-id6137 . -5) 123) nil (24166 117 605057 0) 0 nil]) ((118 . 123)) nil (24166 117 605058 0) 0 nil]) ((113 . 118)) nil (24166 117 605059 0) 0 nil]) ((nil rear-nonsticky nil 197 . 198) (nil fontified nil 118 . 198) (118 . 198) (t 24166 38 645818 349000)) nil (24166 117 605060 0) 0 nil] [nil nil ((nil rear-nonsticky nil 149 . 150) (nil fontified nil 134 . 150) (nil fontified nil 132 . 134) (nil fontified nil 124 . 132) (nil fontified nil 122 . 124) (nil fontified nil 118 . 122) (118 . 150) (t 24166 38 645818 349000)) ((#("pnet::datalink::NetworkInterface" 0 4 (fontified nil face font-lock-constant-face) 4 6 (fontified nil) 6 14 (fontified nil face font-lock-constant-face) 14 16 (fontified nil) 16 31 (fontified nil face font-lock-type-face) 31 32 (fontified nil rear-nonsticky nil face font-lock-type-face)) . 118) (undo-tree-id6073 . -32) (undo-tree-id6074 . -32) (undo-tree-id6075 . -4) (undo-tree-id6076 . -32) (nil rear-nonsticky t 149 . 150)) (24166 44 966960 0) 0 nil]) ((apply yas--snippet-revive 94 110 #4=#s(yas--snippet nil nil nil 16 nil nil nil nil)) (apply yas--take-care-of-redo #4#) (94 . 110) (#("NetworkInterface" 0 16 (fontified nil)) . 94) (94 . 110) (#("NetworkInterface" 0 16 (fontified nil)) . -94) (94 . 110) (#("Ne" 0 2 (fontified t face font-lock-type-face)) . -94) (undo-tree-id5941 . -2) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -2) (undo-tree-id5950 . -2) (undo-tree-id5951 . -2) (undo-tree-id5952 . -2) (undo-tree-id5953 . -2) (undo-tree-id5954 . -2) (undo-tree-id5955 . -2) (undo-tree-id5956 . -2) 96) nil (24166 44 967976 0) 0 nil]) ((92 . 96)) nil (24166 38 614028 0) 0 nil]) ((apply yas--snippet-revive 84 92 #5=#s(yas--snippet nil nil nil 15 nil nil nil nil)) (apply yas--take-care-of-redo #5#) (84 . 92) (#("datalink" 0 8 (fontified nil)) . 84) (84 . 92) (#("datalink" 0 8 (fontified nil)) . -84) (84 . 92) (#("data" 0 4 (fontified t)) . -84) (undo-tree-id5957 . -4) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -2) (undo-tree-id5967 . -2) (undo-tree-id5968 . -2) (undo-tree-id5969 . -2) (undo-tree-id5970 . -2) (undo-tree-id5971 . -2) (undo-tree-id5972 . -2) (undo-tree-id5973 . -3) (undo-tree-id5974 . -3) (undo-tree-id5975 . -3) (undo-tree-id5976 . -3) (undo-tree-id5977 . -3) (undo-tree-id5978 . -4) (undo-tree-id5979 . -4) (undo-tree-id5980 . -4) (undo-tree-id5981 . -4) (undo-tree-id5982 . -4) (undo-tree-id5983 . -4) (undo-tree-id5984 . -4) (undo-tree-id5985 . -4) (undo-tree-id5986 . -4) (undo-tree-id5987 . -4) 88) nil (24166 38 614069 0) 0 nil]) ((84 . 88)) nil (24166 38 614072 0) 0 nil]) ((#("pnet::" 0 4 (fontified t face font-lock-constant-face) 4 6 (fontified t)) . -84) (undo-tree-id5988 . -6) (undo-tree-id5989 . -4) (undo-tree-id5990 . -4) (undo-tree-id5991 . -4) (undo-tree-id5992 . -6) (undo-tree-id5993 . -6) (undo-tree-id5994 . -6) (undo-tree-id5995 . -6) (undo-tree-id5996 . -6) (undo-tree-id5997 . -6) (undo-tree-id5998 . -6) (undo-tree-id5999 . -6) (undo-tree-id6000 . -6) (undo-tree-id6001 . -6) (undo-tree-id6002 . -6) (undo-tree-id6003 . -6) (undo-tree-id6004 . -6) (undo-tree-id6005 . -6) (undo-tree-id6006 . -6) (undo-tree-id6007 . -6) (undo-tree-id6008 . -6) (undo-tree-id6009 . -6) (undo-tree-id6010 . -6) (undo-tree-id6011 . -6) (undo-tree-id6012 . -6) (undo-tree-id6013 . -6) (undo-tree-id6014 . -6) (undo-tree-id6015 . -6) (undo-tree-id6016 . -6) (undo-tree-id6017 . -6) (undo-tree-id6018 . -6) (undo-tree-id6019 . -6) (undo-tree-id6020 . -6) (undo-tree-id6021 . -6) (undo-tree-id6022 . -6) (undo-tree-id6023 . -6) (undo-tree-id6024 . -6) (undo-tree-id6025 . -6) (undo-tree-id6026 . -6) (undo-tree-id6027 . -6) (undo-tree-id6028 . -6) (undo-tree-id6029 . -6) (undo-tree-id6030 . -6) (undo-tree-id6031 . -6) (undo-tree-id6032 . -6) 90) nil (24166 38 614128 0) 0 nil]) ((#("datalink::" 0 8 (fontified t face font-lock-constant-face) 8 10 (fontified t)) . -90) (undo-tree-id6033 . -10) (undo-tree-id6034 . -8) (undo-tree-id6035 . -8) (undo-tree-id6036 . -8) (undo-tree-id6037 . -8) (undo-tree-id6038 . -8) (undo-tree-id6039 . -10) (undo-tree-id6040 . -10) (undo-tree-id6041 . -10) (undo-tree-id6042 . -10) (undo-tree-id6043 . -10) (undo-tree-id6044 . -10) (undo-tree-id6045 . -10) (undo-tree-id6046 . -10) (undo-tree-id6047 . -10) (undo-tree-id6048 . -10) (undo-tree-id6049 . -10) (undo-tree-id6050 . -10) (undo-tree-id6051 . -10) (undo-tree-id6052 . -10) (undo-tree-id6053 . -10) (undo-tree-id6054 . -10) (undo-tree-id6055 . -10) (undo-tree-id6056 . -10) (undo-tree-id6057 . -10) (undo-tree-id6058 . -10) (undo-tree-id6059 . -10) (undo-tree-id6060 . -10) (undo-tree-id6061 . -10) (undo-tree-id6062 . -10) (undo-tree-id6063 . -10) (undo-tree-id6064 . -10) (undo-tree-id6065 . -10) 100) nil (24166 38 614169 0) 0 nil]) ((#("NetworkInterface" 0 16 (fontified t face font-lock-type-face)) . -100) (undo-tree-id6066 . -16) (undo-tree-id6067 . -16) (undo-tree-id6068 . -16) (undo-tree-id6069 . -16) (undo-tree-id6070 . -16) (undo-tree-id6071 . -16) (undo-tree-id6072 . -16) 116 (t 24166 18 966399 5000)) nil (24166 38 614178 0) 0 nil]) ((69 . 74)) nil (24166 18 933310 0) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-function-name-face)) . -69) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . -1) (undo-tree-id5887 . -1) (undo-tree-id5888 . -1) (undo-tree-id5889 . -1) (undo-tree-id5890 . -1) (undo-tree-id5891 . -1) (#("c" 0 1 (fontified t face font-lock-function-name-face)) . -70) (undo-tree-id5892 . -1) (undo-tree-id5893 . -1) (undo-tree-id5894 . -1) (undo-tree-id5895 . -1) (undo-tree-id5896 . -1) (undo-tree-id5897 . -1) (undo-tree-id5898 . -1) 71) nil (24166 18 933358 0) 0 nil]) ((56 . 71)) nil (24166 18 933362 0) 0 nil]) ((#("net_" 0 4 (fontified t face font-lock-function-name-face)) . -56) (undo-tree-id5899 . -4) (undo-tree-id5900 . -4) (undo-tree-id5901 . -4) (undo-tree-id5902 . -3) (undo-tree-id5903 . -3) (undo-tree-id5904 . -4) (undo-tree-id5905 . -4) (undo-tree-id5906 . -4) (undo-tree-id5907 . -4) (undo-tree-id5908 . -4) (undo-tree-id5909 . -4) (undo-tree-id5910 . -4) (undo-tree-id5911 . -4) (undo-tree-id5912 . -4) (undo-tree-id5913 . -4) (undo-tree-id5914 . -4) (undo-tree-id5915 . -4) (undo-tree-id5916 . -4) (undo-tree-id5917 . -4) (undo-tree-id5918 . -4) (undo-tree-id5919 . -4) (undo-tree-id5920 . -4) (undo-tree-id5921 . -4) (undo-tree-id5922 . -4) (undo-tree-id5923 . -4) (undo-tree-id5924 . -4) (undo-tree-id5925 . -4) (undo-tree-id5926 . -4) (undo-tree-id5927 . -4) (undo-tree-id5928 . -4) (undo-tree-id5929 . -4) (undo-tree-id5930 . -4) (undo-tree-id5931 . -4) (undo-tree-id5932 . -4) 60) nil (24166 18 933405 0) 0 nil]) ((#("iface" 0 5 (fontified t face font-lock-function-name-face)) . -60) (undo-tree-id5933 . -5) (undo-tree-id5934 . -5) (undo-tree-id5935 . -5) (undo-tree-id5936 . -5) (undo-tree-id5937 . -5) (undo-tree-id5938 . -5) (undo-tree-id5939 . -5) (undo-tree-id5940 . -5) 65 (t 24166 0 295014 901000)) nil (24166 18 933418 0) 0 nil]) ((111 . 115) (110 . 112)) nil (24166 0 263618 0) 0 nil]) ((109 . 111) (#("{" 0 1 (fontified nil)) . -109) (undo-tree-id5537 . -1) (undo-tree-id5538 . -1) (108 . 110)) nil (24166 0 263637 0) 0 nil]) ((apply yas--snippet-revive 91 107 #6=#s(yas--snippet nil nil nil 14 nil nil nil nil)) (apply yas--take-care-of-redo #6#) (91 . 107) (#("NetworkInterface" 0 16 (fontified nil)) . 91) (91 . 107) (#("NetworkInterface" 0 16 (fontified nil)) . -91) (91 . 107) (#("Ne" 0 2 (fontified t face font-lock-type-face)) . -91) (undo-tree-id5539 . -2) (undo-tree-id5540 . -1) (undo-tree-id5541 . -1) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -2) (undo-tree-id5548 . -2) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (undo-tree-id5553 . -2) 93) nil (24166 0 263662 0) 0 nil]) ((89 . 93)) nil (24166 0 263665 0) 0 nil]) ((apply yas--snippet-revive 81 89 #7=#s(yas--snippet nil nil nil 13 nil nil nil nil)) (apply yas--take-care-of-redo #7#) (81 . 89) (#("datalink" 0 8 (fontified nil)) . 81) (81 . 89) (#("datalink" 0 8 (fontified nil)) . -81) (81 . 89) (#("data" 0 4 (fontified t)) . -81) (undo-tree-id5554 . -4) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -2) (undo-tree-id5561 . -2) (undo-tree-id5562 . -2) (undo-tree-id5563 . -2) (undo-tree-id5564 . -2) (undo-tree-id5565 . -3) (undo-tree-id5566 . -3) (undo-tree-id5567 . -3) (undo-tree-id5568 . -3) (undo-tree-id5569 . -3) (undo-tree-id5570 . -4) (undo-tree-id5571 . -4) (undo-tree-id5572 . -4) (undo-tree-id5573 . -4) (undo-tree-id5574 . -4) (undo-tree-id5575 . -4) (undo-tree-id5576 . -4) 85) nil (24166 0 263695 0) 0 nil]) ((75 . 85)) nil (24166 0 263697 0) 0 nil]) ((#("N" 0 1 (fontified t face font-lock-type-face)) . -75) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (undo-tree-id5586 . -1) (undo-tree-id5587 . -1) (undo-tree-id5588 . -1) (undo-tree-id5589 . -1) (undo-tree-id5590 . -1) (undo-tree-id5591 . -1) (undo-tree-id5592 . -1) (undo-tree-id5593 . -1) (undo-tree-id5594 . -1) (undo-tree-id5595 . -1) (undo-tree-id5596 . -1) (undo-tree-id5597 . -1) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) (undo-tree-id5602 . -1) (undo-tree-id5603 . -1) (undo-tree-id5604 . -1) (undo-tree-id5605 . -1) (undo-tree-id5606 . -1) (undo-tree-id5607 . -1) (undo-tree-id5608 . -1) (undo-tree-id5609 . -1) (undo-tree-id5610 . -1) (undo-tree-id5611 . -1) (undo-tree-id5612 . -1) (undo-tree-id5613 . -1) (undo-tree-id5614 . -1) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -76) (undo-tree-id5634 . -1) (undo-tree-id5635 . -1) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) (undo-tree-id5650 . -1) (undo-tree-id5651 . -1) (undo-tree-id5652 . -1) (undo-tree-id5653 . -1) (undo-tree-id5654 . -1) (undo-tree-id5655 . -1) (undo-tree-id5656 . -1) (undo-tree-id5657 . -1) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (undo-tree-id5668 . -1) (undo-tree-id5669 . -1) (undo-tree-id5670 . -1) (undo-tree-id5671 . -1) (undo-tree-id5672 . -1) (undo-tree-id5673 . -1) (undo-tree-id5674 . -1) (undo-tree-id5675 . -1) (undo-tree-id5676 . -1) (undo-tree-id5677 . -1) (undo-tree-id5678 . -1) (undo-tree-id5679 . -1) (undo-tree-id5680 . -1) (undo-tree-id5681 . -1) (undo-tree-id5682 . -1) (undo-tree-id5683 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -77) (undo-tree-id5684 . -1) (undo-tree-id5685 . -1) (undo-tree-id5686 . -1) (undo-tree-id5687 . -1) (undo-tree-id5688 . -1) (undo-tree-id5689 . -1) (undo-tree-id5690 . -1) (undo-tree-id5691 . -1) (undo-tree-id5692 . -1) (undo-tree-id5693 . -1) (undo-tree-id5694 . -1) (undo-tree-id5695 . -1) (undo-tree-id5696 . -1) (undo-tree-id5697 . -1) (undo-tree-id5698 . -1) (undo-tree-id5699 . -1) (undo-tree-id5700 . -1) (undo-tree-id5701 . -1) (undo-tree-id5702 . -1) (undo-tree-id5703 . -1) (undo-tree-id5704 . -1) (undo-tree-id5705 . -1) (undo-tree-id5706 . -1) (undo-tree-id5707 . -1) (undo-tree-id5708 . -1) (undo-tree-id5709 . -1) (undo-tree-id5710 . -1) (undo-tree-id5711 . -1) (undo-tree-id5712 . -1) (undo-tree-id5713 . -1) (undo-tree-id5714 . -1) (undo-tree-id5715 . -1) (undo-tree-id5716 . -1) (undo-tree-id5717 . -1) (undo-tree-id5718 . -1) (undo-tree-id5719 . -1) (undo-tree-id5720 . -1) (undo-tree-id5721 . -1) (undo-tree-id5722 . -1) (undo-tree-id5723 . -1) (undo-tree-id5724 . -1) (undo-tree-id5725 . -1) (undo-tree-id5726 . -1) (undo-tree-id5727 . -1) (undo-tree-id5728 . -1) (#("w" 0 1 (fontified t face font-lock-type-face)) . -78) (undo-tree-id5729 . -1) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . -1) (undo-tree-id5738 . -1) (undo-tree-id5739 . -1) (undo-tree-id5740 . -1) (undo-tree-id5741 . -1) (undo-tree-id5742 . -1) (undo-tree-id5743 . -1) (undo-tree-id5744 . -1) (undo-tree-id5745 . -1) (undo-tree-id5746 . -1) (undo-tree-id5747 . -1) (undo-tree-id5748 . -1) (undo-tree-id5749 . -1) (undo-tree-id5750 . -1) (undo-tree-id5751 . -1) (undo-tree-id5752 . -1) (undo-tree-id5753 . -1) (undo-tree-id5754 . -1) (undo-tree-id5755 . -1) (undo-tree-id5756 . -1) (undo-tree-id5757 . -1) (undo-tree-id5758 . -1) (undo-tree-id5759 . -1) (undo-tree-id5760 . -1) (undo-tree-id5761 . -1) (undo-tree-id5762 . -1) (undo-tree-id5763 . -1) (undo-tree-id5764 . -1) (undo-tree-id5765 . -1) (undo-tree-id5766 . -1) (undo-tree-id5767 . -1) (undo-tree-id5768 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -79) (undo-tree-id5769 . -1) (undo-tree-id5770 . -1) (undo-tree-id5771 . -1) (undo-tree-id5772 . -1) (undo-tree-id5773 . -1) (undo-tree-id5774 . -1) (undo-tree-id5775 . -1) (undo-tree-id5776 . -1) (undo-tree-id5777 . -1) (undo-tree-id5778 . -1) (undo-tree-id5779 . -1) (undo-tree-id5780 . -1) (undo-tree-id5781 . -1) (undo-tree-id5782 . -1) (undo-tree-id5783 . -1) (undo-tree-id5784 . -1) (undo-tree-id5785 . -1) (undo-tree-id5786 . -1) (undo-tree-id5787 . -1) (undo-tree-id5788 . -1) (undo-tree-id5789 . -1) (undo-tree-id5790 . -1) (undo-tree-id5791 . -1) (undo-tree-id5792 . -1) (undo-tree-id5793 . -1) (undo-tree-id5794 . -1) (undo-tree-id5795 . -1) (undo-tree-id5796 . -1) (undo-tree-id5797 . -1) (undo-tree-id5798 . -1) (undo-tree-id5799 . -1) (undo-tree-id5800 . -1) (undo-tree-id5801 . -1) (#("o" 0 1 (fontified t face font-lock-type-face)) . -80) (undo-tree-id5802 . -1) (undo-tree-id5803 . -1) (undo-tree-id5804 . -1) (undo-tree-id5805 . -1) (undo-tree-id5806 . -1) (undo-tree-id5807 . -1) (undo-tree-id5808 . -1) (undo-tree-id5809 . -1) (undo-tree-id5810 . -1) (undo-tree-id5811 . -1) (undo-tree-id5812 . -1) (undo-tree-id5813 . -1) (undo-tree-id5814 . -1) (undo-tree-id5815 . -1) (undo-tree-id5816 . -1) (undo-tree-id5817 . -1) (undo-tree-id5818 . -1) (undo-tree-id5819 . -1) (undo-tree-id5820 . -1) (undo-tree-id5821 . -1) (undo-tree-id5822 . -1) (undo-tree-id5823 . -1) (undo-tree-id5824 . -1) (undo-tree-id5825 . -1) (undo-tree-id5826 . -1) (undo-tree-id5827 . -1) (undo-tree-id5828 . -1) (undo-tree-id5829 . -1) (undo-tree-id5830 . -1) (undo-tree-id5831 . -1) (#("k" 0 1 (fontified t face font-lock-type-face)) . -81) (undo-tree-id5832 . -1) (undo-tree-id5833 . -1) (undo-tree-id5834 . -1) (undo-tree-id5835 . -1) (undo-tree-id5836 . -1) (undo-tree-id5837 . -1) (undo-tree-id5838 . -1) (undo-tree-id5839 . -1) (undo-tree-id5840 . -1) (undo-tree-id5841 . -1) (undo-tree-id5842 . -1) (undo-tree-id5843 . -1) (undo-tree-id5844 . -1) (undo-tree-id5845 . -1) (undo-tree-id5846 . -1) (undo-tree-id5847 . -1) (undo-tree-id5848 . -1) (undo-tree-id5849 . -1) (undo-tree-id5850 . -1) (undo-tree-id5851 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -82) (undo-tree-id5852 . -1) (undo-tree-id5853 . -1) (undo-tree-id5854 . -1) (undo-tree-id5855 . -1) (undo-tree-id5856 . -1) (undo-tree-id5857 . -1) (undo-tree-id5858 . -1) (undo-tree-id5859 . -1) 83) nil (24166 0 264010 0) 0 nil]) ((75 . 83)) nil (24166 0 264022 0) 0 nil]) ((74 . 76) (#("<" 0 1 (fontified nil face font-lock-type-face)) . -74) (undo-tree-id5860 . -1) (undo-tree-id5861 . -1) (71 . 75)) nil (24166 0 264025 0) 0 nil]) ((#("v" 0 1 (fontified t)) . -71) (undo-tree-id5862 . -1) (undo-tree-id5863 . -1) (undo-tree-id5864 . -1) (undo-tree-id5865 . -1) (undo-tree-id5866 . -1) (undo-tree-id5867 . -1) (undo-tree-id5868 . -1) (undo-tree-id5869 . -1) (undo-tree-id5870 . -1) (undo-tree-id5871 . -1) (undo-tree-id5872 . -1) (undo-tree-id5873 . -1) (undo-tree-id5874 . -1) (undo-tree-id5875 . -1) 72) nil (24166 0 264044 0) 0 nil]) ((71 . 72)) nil (24166 0 264045 0) 0 nil]) ((67 . 71) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 67) (undo-tree-id5876 . -1) (66 . 67) (65 . 67) (#("(" 0 1 (fontified nil face font-lock-function-name-face)) . -65) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (62 . 66)) nil (24166 0 264051 0) 0 nil]) ((49 . 62)) nil (24166 0 264052 0) 0 nil]) ((47 . 49)) nil (24166 0 264053 0) 0 nil]) ((nil rear-nonsticky nil 47 . 48) (nil fontified nil 28 . 48) (28 . 48) (t 24165 64587 984380 723000)) nil (24166 0 264055 0) 0 nil]) ((205 . 206)) nil (24165 64587 953958 0) 0 nil]) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 204) (undo-tree-id5531 . -1) (203 . 204) (202 . 204) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -202) (undo-tree-id5532 . -1) (undo-tree-id5533 . -1) (202 . 203)) nil (24165 64587 953980 0) 0 nil]) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 203) (undo-tree-id5534 . -1) (202 . 203) (201 . 203) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -201) (undo-tree-id5535 . -1) (undo-tree-id5536 . -1) (192 . 202) (t 24165 64573 736067 953000)) nil (24165 64587 953989 0) 0 nil]) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 93) (undo-tree-id5472 . -1) (92 . 93) (91 . 93) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -91) (undo-tree-id5473 . -1) (undo-tree-id5474 . -1) (91 . 92)) nil (24165 64573 706247 0) 0 nil]) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -91) (undo-tree-id5475 . -1) (undo-tree-id5476 . -1) (undo-tree-id5477 . -1) (undo-tree-id5478 . -1) (undo-tree-id5479 . -1) (undo-tree-id5480 . -1) (undo-tree-id5481 . -1) (undo-tree-id5482 . -1) (undo-tree-id5483 . -1) (undo-tree-id5484 . -1) (undo-tree-id5485 . -1) (undo-tree-id5486 . -1) (undo-tree-id5487 . -1) (undo-tree-id5488 . -1) (undo-tree-id5489 . -1) (undo-tree-id5490 . -1) (undo-tree-id5491 . -1) (undo-tree-id5492 . -1) (undo-tree-id5493 . -1) (undo-tree-id5494 . -1) (undo-tree-id5495 . -1) (undo-tree-id5496 . -1) (undo-tree-id5497 . -1) (undo-tree-id5498 . -1) (undo-tree-id5499 . -1) (undo-tree-id5500 . -1) (undo-tree-id5501 . -1) (undo-tree-id5502 . -1) (undo-tree-id5503 . -1) (undo-tree-id5504 . -1) (undo-tree-id5505 . -1) (undo-tree-id5506 . -1) (undo-tree-id5507 . -1) (undo-tree-id5508 . -1) (undo-tree-id5509 . -1) (undo-tree-id5510 . -1) (undo-tree-id5511 . -1) (undo-tree-id5512 . -1) (undo-tree-id5513 . -1) (undo-tree-id5514 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -92) (undo-tree-id5515 . -1) (undo-tree-id5516 . -1) (undo-tree-id5517 . -1) (undo-tree-id5518 . -1) (undo-tree-id5519 . -1) (undo-tree-id5520 . -1) (undo-tree-id5521 . -1) (undo-tree-id5522 . -1) (undo-tree-id5523 . -1) (undo-tree-id5524 . 1) (undo-tree-id5525 . 1) (undo-tree-id5526 . -1) (undo-tree-id5527 . -1) (undo-tree-id5528 . -1) (undo-tree-id5529 . -1) (undo-tree-id5530 . -1) 93 (t 24165 64552 556910 874000)) nil (24165 64573 706335 0) 0 nil]) ((210 . 214) (209 . 211)) nil (24165 64552 526550 0) 0 nil]) ((208 . 210) (#("{" 0 1 (fontified nil)) . -208) (undo-tree-id5399 . -1) (undo-tree-id5400 . -1) (207 . 209) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 207) (undo-tree-id5401 . -1) (undo-tree-id5402 . -1) (206 . 207) (205 . 207) (#("(" 0 1 (fontified nil face font-lock-function-name-face)) . -205) (undo-tree-id5403 . -1) (undo-tree-id5404 . -1) (196 . 206)) nil (24165 64552 526576 0) 0 nil]) ((194 . 196)) nil (24165 64552 526579 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -192) (undo-tree-id5405 . -1) (undo-tree-id5406 . -1) (undo-tree-id5407 . -1) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) (undo-tree-id5417 . -1) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -1) (undo-tree-id5421 . -1) (undo-tree-id5422 . -1) (undo-tree-id5423 . -1) (undo-tree-id5424 . -1) (undo-tree-id5425 . -1) (undo-tree-id5426 . -1) (undo-tree-id5427 . -1) (undo-tree-id5428 . -1) (undo-tree-id5429 . -1) (undo-tree-id5430 . -1) (undo-tree-id5431 . -1) (#(" " 0 1 (fontified t)) . -193) (undo-tree-id5432 . -1) (undo-tree-id5433 . -1) (undo-tree-id5434 . -1) (undo-tree-id5435 . -1) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) (undo-tree-id5447 . -1) (undo-tree-id5448 . -1) (#(" " 0 1 (fontified t)) . -194) (undo-tree-id5449 . -1) (undo-tree-id5450 . -1) (undo-tree-id5451 . -1) (undo-tree-id5452 . -1) (undo-tree-id5453 . -1) (undo-tree-id5454 . -1) (undo-tree-id5455 . -1) (undo-tree-id5456 . -1) (undo-tree-id5457 . -1) (undo-tree-id5458 . -1) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (#(" " 0 1 (fontified t)) . -195) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) (undo-tree-id5467 . -1) (#(" " 0 1 (fontified t)) . -196) (undo-tree-id5468 . -1) (undo-tree-id5469 . -1) (undo-tree-id5470 . -1) (undo-tree-id5471 . -1) 197) nil (24165 64552 526659 0) 0 nil]) ((187 . 192) (t 24165 64470 273252 195000)) nil (24165 64552 526664 0) 0 nil]) ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -186) (undo-tree-id5387 . -1) (undo-tree-id5388 . -1) (undo-tree-id5389 . -1) (undo-tree-id5390 . -1) (undo-tree-id5391 . -1) (undo-tree-id5392 . -1) (undo-tree-id5393 . -1) (undo-tree-id5394 . -1) (undo-tree-id5395 . -1) (undo-tree-id5396 . -1) (undo-tree-id5397 . -1) (undo-tree-id5398 . -1) 187 (t 24165 64462 433353 516000)) nil (24165 64470 243008 0) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((183 . 190)) ((#("return;" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . 183) (undo-tree-id5359 . -7) (undo-tree-id5360 . -7) (undo-tree-id5361 . -7) (undo-tree-id5362 . -7) (undo-tree-id5363 . -6) (undo-tree-id5364 . -7) (undo-tree-id5365 . -7) (undo-tree-id5366 . -7) (t 24165 64453 894639 698000)) (24165 64453 865111 0) 0 nil]) ((178 . 183) (t 24165 64446 61047 648000)) ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 178) (undo-tree-id5367 . -1) (undo-tree-id5368 . -1) (undo-tree-id5369 . -5) (undo-tree-id5370 . -5) (undo-tree-id5371 . -5) (undo-tree-id5372 . -5) (undo-tree-id5373 . -5) (undo-tree-id5374 . -5) (undo-tree-id5375 . -5) (undo-tree-id5376 . -5) (undo-tree-id5377 . -5) (undo-tree-id5378 . -5) (undo-tree-id5379 . -5)) (24165 64455 705688 0) 0 nil]) ((102 . 109)) ((#("::Error" 0 2 (fontified t) 2 7 (fontified t face font-lock-type-face)) . 102)) (24165 64459 81241 0) 0 nil]) ((100 . 102)) ((#("io" 0 2 (fontified t)) . 100) (undo-tree-id5380 . -2) (undo-tree-id5381 . -2) (undo-tree-id5382 . -2) (undo-tree-id5383 . -2) (undo-tree-id5384 . -2) (undo-tree-id5385 . -2) (undo-tree-id5386 . -2)) (24165 64459 769369 0) 0 nil]) ((#("net::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -100) (undo-tree-id5336 . -5) (undo-tree-id5338 . -5) (undo-tree-id5340 . -5) (undo-tree-id5342 . -5) (undo-tree-id5344 . -5) (undo-tree-id5346 . -5) (undo-tree-id5348 . -5) (undo-tree-id5350 . -5) (undo-tree-id5352 . -5) (undo-tree-id5353 . -5) 105) ((100 . 105)) (24165 64460 617543 0) 0 nil]) ((#("AddrParseError" 0 14 (fontified t face font-lock-type-face)) . -105) (undo-tree-id5355 . -14) (undo-tree-id5357 . -14) 119 (t 24165 64434 446205 561000)) ((105 . 119)) (24165 64461 57412 0) 0 nil]) ((186 . 187) (t 24165 64430 914036 676000)) nil (24165 64461 581429 0) 0 nil]) ((#("return;" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . -192) (undo-tree-id5287 . -7) (undo-tree-id5288 . -1) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -2) (undo-tree-id5292 . -2) (undo-tree-id5293 . -2) (undo-tree-id5294 . -2) (undo-tree-id5295 . -2) (undo-tree-id5296 . -3) (undo-tree-id5297 . -3) (undo-tree-id5298 . -3) (undo-tree-id5299 . -4) (undo-tree-id5300 . -4) (undo-tree-id5301 . -4) (undo-tree-id5302 . -5) (undo-tree-id5303 . -5) (undo-tree-id5304 . -5) (undo-tree-id5305 . -6) (undo-tree-id5306 . -6) (undo-tree-id5307 . -6) (undo-tree-id5308 . -6) (undo-tree-id5309 . -6) (undo-tree-id5310 . -6) (undo-tree-id5311 . -6) (undo-tree-id5312 . -6) (undo-tree-id5313 . -6) (undo-tree-id5314 . -7) (undo-tree-id5315 . -7) (undo-tree-id5316 . -6) (undo-tree-id5317 . -7) (undo-tree-id5318 . -7) (undo-tree-id5319 . -7) (undo-tree-id5320 . -6) (undo-tree-id5321 . -6) (undo-tree-id5322 . -6) (undo-tree-id5323 . -5) (undo-tree-id5324 . -5) (undo-tree-id5325 . -5) (undo-tree-id5326 . -5) (undo-tree-id5327 . -5) (undo-tree-id5328 . -5) (undo-tree-id5329 . -5) (undo-tree-id5330 . -5) (undo-tree-id5331 . -7) (undo-tree-id5332 . -5) (undo-tree-id5333 . -7) (undo-tree-id5334 . -7) (undo-tree-id5335 . -7) 199) nil (24165 64430 883737 0) 0 nil]) ((192 . 199)) nil (24165 64430 883743 0) 0 nil]) ((187 . 192) (t 24165 64387 515904 102000)) nil (24165 64430 883745 0) 0 nil]) ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -186) (undo-tree-id5280 . -1) (undo-tree-id5281 . -1) (undo-tree-id5282 . -1) (undo-tree-id5283 . -1) (undo-tree-id5284 . -1) (undo-tree-id5285 . -1) (undo-tree-id5286 . -1) 187) nil (24165 64387 494426 0) 0 nil] [nil ([nil ([nil nil ((100 . 109)) ((#("io::Error" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t) 4 9 (fontified t face font-lock-type-face)) . 100) (undo-tree-id5273 . -9) (undo-tree-id5274 . -9) (undo-tree-id5275 . -9) (undo-tree-id5276 . -9) (undo-tree-id5277 . -9) (undo-tree-id5278 . -9) (undo-tree-id5279 . -9) (t 24165 64377 935928 70000)) (24165 64377 913848 0) 0 nil]) ((#("net::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -100) (undo-tree-id5250 . -5) (undo-tree-id5251 . -5) (undo-tree-id5252 . -5) (undo-tree-id5253 . -5) (undo-tree-id5254 . -5) (undo-tree-id5255 . -5) (undo-tree-id5256 . -5) (undo-tree-id5257 . -5) (undo-tree-id5258 . -5) (undo-tree-id5259 . -5) (undo-tree-id5260 . -5) (undo-tree-id5261 . -5) (undo-tree-id5262 . -5) (undo-tree-id5263 . -5) (undo-tree-id5264 . -5) (undo-tree-id5265 . -5) (undo-tree-id5266 . -5) (undo-tree-id5267 . -5) (undo-tree-id5268 . -5) 105) ((100 . 105)) (24165 64383 802847 0) 0 nil]) ((#("AddrParseError" 0 14 (fontified t face font-lock-type-face)) . -105) (undo-tree-id5269 . -14) (undo-tree-id5270 . -14) (undo-tree-id5271 . -14) (undo-tree-id5272 . -14) 119) ((105 . 119)) (24165 64384 410011 0) 0 nil] [nil nil ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -186) (undo-tree-id5241 . -1) (undo-tree-id5242 . -1) (undo-tree-id5243 . -1) (undo-tree-id5244 . -1) (undo-tree-id5245 . -1) (undo-tree-id5246 . -1) (undo-tree-id5247 . -1) (undo-tree-id5248 . -1) (undo-tree-id5249 . -1) 187 (t 24165 64304 44624 438000)) ((186 . 187) (t 24165 64312 713549 211000)) (24165 64312 683712 0) 0 nil]) ((apply yas--snippet-revive 105 119 #8=#s(yas--snippet nil nil nil 12 nil nil nil nil)) (apply yas--take-care-of-redo #8#) (105 . 119) (#("AddrParseError" 0 14 (fontified nil)) . 105) (105 . 119) (#("AddrParseError" 0 14 (fontified nil)) . -105) (105 . 119) (#("AddrP" 0 5 (fontified t face font-lock-type-face)) . -105) (undo-tree-id5118 . -5) (undo-tree-id5119 . -1) (undo-tree-id5120 . -1) (undo-tree-id5121 . -1) (undo-tree-id5122 . -1) (undo-tree-id5123 . -1) (undo-tree-id5124 . -1) (undo-tree-id5125 . -1) (undo-tree-id5126 . -2) (undo-tree-id5127 . -2) (undo-tree-id5128 . -2) (undo-tree-id5129 . -2) (undo-tree-id5130 . -2) (undo-tree-id5131 . -2) (undo-tree-id5132 . -2) (undo-tree-id5133 . -2) (undo-tree-id5134 . -2) (undo-tree-id5135 . -2) (undo-tree-id5136 . -2) (undo-tree-id5137 . -2) (undo-tree-id5138 . -2) (undo-tree-id5139 . -2) (undo-tree-id5140 . -2) (undo-tree-id5141 . -2) (undo-tree-id5142 . -2) (undo-tree-id5143 . -2) (undo-tree-id5144 . -2) (undo-tree-id5145 . -3) (undo-tree-id5146 . -3) (undo-tree-id5147 . -3) (undo-tree-id5148 . -3) (undo-tree-id5149 . -3) (undo-tree-id5150 . -3) (undo-tree-id5151 . -3) (undo-tree-id5152 . -4) (undo-tree-id5153 . -4) (undo-tree-id5154 . -4) (undo-tree-id5155 . -4) (undo-tree-id5156 . -4) (undo-tree-id5157 . -4) (undo-tree-id5158 . -4) (undo-tree-id5159 . -5) (undo-tree-id5160 . -5) (undo-tree-id5161 . -5) (undo-tree-id5162 . -5) (undo-tree-id5163 . -5) (undo-tree-id5164 . -5) (undo-tree-id5165 . -5) (undo-tree-id5166 . -5) 110) nil (24165 64384 914037 0) 0 nil]) ((107 . 110)) nil (24165 64304 14971 0) 0 nil]) ((#("d" 0 1 (fontified t face font-lock-type-face)) . -107) (undo-tree-id5167 . -1) (undo-tree-id5168 . -1) (undo-tree-id5169 . -1) (undo-tree-id5170 . -1) (undo-tree-id5171 . -1) (undo-tree-id5172 . -1) (undo-tree-id5173 . -1) (undo-tree-id5174 . -1) (undo-tree-id5175 . -1) (undo-tree-id5176 . -1) (undo-tree-id5177 . -1) 108) nil (24165 64304 14986 0) 0 nil]) ((100 . 108)) nil (24165 64304 14987 0) 0 nil]) ((#("io::" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t)) . -100) (undo-tree-id5178 . -4) (undo-tree-id5179 . -4) (undo-tree-id5180 . -4) (undo-tree-id5181 . -4) (undo-tree-id5182 . -2) (undo-tree-id5183 . -2) (undo-tree-id5184 . -4) (undo-tree-id5185 . -4) (undo-tree-id5186 . -4) (undo-tree-id5187 . -4) (undo-tree-id5188 . -4) (undo-tree-id5189 . -4) (undo-tree-id5190 . -4) (undo-tree-id5191 . -4) (undo-tree-id5192 . -4) (undo-tree-id5193 . -4) (undo-tree-id5194 . -4) (undo-tree-id5195 . -4) (undo-tree-id5196 . -4) (undo-tree-id5197 . -4) (undo-tree-id5198 . -4) (undo-tree-id5199 . -4) (undo-tree-id5200 . -4) (undo-tree-id5201 . -4) (undo-tree-id5202 . -4) (undo-tree-id5203 . -4) (undo-tree-id5204 . -4) (undo-tree-id5205 . -4) (undo-tree-id5206 . -4) (undo-tree-id5207 . -4) (undo-tree-id5208 . -4) (undo-tree-id5209 . -4) (undo-tree-id5210 . -4) (undo-tree-id5211 . -4) (undo-tree-id5212 . -4) (undo-tree-id5213 . -4) (undo-tree-id5214 . -4) (undo-tree-id5215 . -4) (undo-tree-id5216 . -4) (undo-tree-id5217 . -4) (undo-tree-id5218 . -4) (undo-tree-id5219 . -4) (undo-tree-id5220 . -4) (undo-tree-id5221 . -4) (undo-tree-id5222 . -4) (undo-tree-id5223 . -4) (undo-tree-id5224 . -4) (undo-tree-id5225 . -4) 104) nil (24165 64304 15045 0) 0 nil]) ((#("Error" 0 5 (fontified t face font-lock-type-face)) . -104) (undo-tree-id5226 . -5) (undo-tree-id5227 . -5) (undo-tree-id5228 . -5) (undo-tree-id5229 . -5) (undo-tree-id5230 . -5) (undo-tree-id5231 . -5) (undo-tree-id5232 . -5) (undo-tree-id5233 . -5) (undo-tree-id5234 . -5) (undo-tree-id5235 . -5) (undo-tree-id5236 . -5) (undo-tree-id5237 . -5) (undo-tree-id5238 . -5) (undo-tree-id5239 . -5) (undo-tree-id5240 . -5) 109 (t 24165 64258 91517 247000)) nil (24165 64304 15065 0) 0 nil] [nil ([nil ([nil nil ((100 . 102)) ((#("ad" 0 2 (fontified t)) . 100) (undo-tree-id5114 . -2) (undo-tree-id5115 . -1) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2)) (24165 64284 391351 0) 0 nil]) ((#("io::" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t)) . -100) (undo-tree-id5091 . -4) (undo-tree-id5092 . -4) (undo-tree-id5093 . -4) (undo-tree-id5094 . -4) (undo-tree-id5095 . -4) (undo-tree-id5096 . -2) (undo-tree-id5097 . -2) (undo-tree-id5098 . -4) (undo-tree-id5099 . -4) (undo-tree-id5100 . -4) (undo-tree-id5101 . -4) (undo-tree-id5102 . -4) (undo-tree-id5103 . -4) (undo-tree-id5104 . -4) (undo-tree-id5105 . -4) 104) ((100 . 104)) (24165 64284 391623 0) 0 nil]) ((#("Error" 0 5 (fontified t face font-lock-type-face)) . -104) (undo-tree-id5106 . -5) (undo-tree-id5107 . -5) (undo-tree-id5108 . -5) (undo-tree-id5109 . -5) (undo-tree-id5110 . -5) (undo-tree-id5111 . -5) (undo-tree-id5112 . -5) (undo-tree-id5113 . -5) 109 (t 24165 64258 91517 247000)) ((104 . 109)) (24165 64284 635341 0) 0 nil]) ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -84) (undo-tree-id5058 . -5) (undo-tree-id5059 . -5) (undo-tree-id5060 . -5) (undo-tree-id5061 . -5) (undo-tree-id5062 . -5) (undo-tree-id5063 . -5) (undo-tree-id5064 . -5) (undo-tree-id5065 . -5) (undo-tree-id5066 . -5) (undo-tree-id5067 . -5) (undo-tree-id5068 . -5) (undo-tree-id5069 . -5) (undo-tree-id5070 . -5) (undo-tree-id5071 . -5) (undo-tree-id5072 . -5) (undo-tree-id5073 . -5) (undo-tree-id5074 . -5) (undo-tree-id5075 . -5) (undo-tree-id5076 . -5) (undo-tree-id5077 . -5) (undo-tree-id5078 . -5) (undo-tree-id5079 . -5) (undo-tree-id5080 . -5) (undo-tree-id5081 . -5) 89) nil (24165 64285 100316 0) 0 nil]) ((#("result::" 0 6 (fontified t face font-lock-constant-face) 6 8 (fontified t)) . -89) (undo-tree-id5082 . -8) (undo-tree-id5083 . -8) (undo-tree-id5084 . -8) (undo-tree-id5085 . -8) (undo-tree-id5086 . -6) (undo-tree-id5087 . -6) (undo-tree-id5088 . -8) (undo-tree-id5089 . -8) (undo-tree-id5090 . -8) 97 (t 24165 64251 100957 219000)) nil (24165 64258 62347 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -191) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) (undo-tree-id5013 . -1) (undo-tree-id5014 . -1) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) (undo-tree-id5022 . -1) (#(" " 0 1 (fontified t)) . -192) (undo-tree-id5023 . -1) (undo-tree-id5024 . -1) (undo-tree-id5025 . -1) (undo-tree-id5026 . -1) (undo-tree-id5027 . -1) (undo-tree-id5028 . -1) (undo-tree-id5029 . -1) (undo-tree-id5030 . -1) (undo-tree-id5031 . -1) (undo-tree-id5032 . -1) (undo-tree-id5033 . -1) (undo-tree-id5034 . -1) (undo-tree-id5035 . -1) (undo-tree-id5036 . -1) (undo-tree-id5037 . -1) (undo-tree-id5038 . -1) (#(" " 0 1 (fontified t)) . -193) (undo-tree-id5039 . -1) (undo-tree-id5040 . -1) (undo-tree-id5041 . -1) (undo-tree-id5042 . -1) (undo-tree-id5043 . -1) (undo-tree-id5044 . -1) (undo-tree-id5045 . -1) (undo-tree-id5046 . -1) (undo-tree-id5047 . -1) (undo-tree-id5048 . -1) (undo-tree-id5049 . -1) (#(" " 0 1 (fontified t)) . -194) (undo-tree-id5050 . -1) (undo-tree-id5051 . -1) (undo-tree-id5052 . -1) (undo-tree-id5053 . -1) (undo-tree-id5054 . -1) (undo-tree-id5055 . -1) (undo-tree-id5056 . -1) (undo-tree-id5057 . -1) 195) nil (24165 64251 71748 0) 0 nil] [nil ([nil ([nil ([nil nil ((188 . 189)) ((#("?" 0 1 (fontified t face rust-question-mark-face)) . 188) (undo-tree-id4995 . -1) (undo-tree-id4996 . -1) (undo-tree-id4997 . -1) (undo-tree-id4998 . -1) (undo-tree-id4999 . -1) (undo-tree-id5000 . -1) (undo-tree-id5001 . -1) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) (t 24165 64245 696071 291000)) (24165 64245 674273 0) 0 nil]) ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -187) (undo-tree-id4982 . -1) (undo-tree-id4983 . -1) (undo-tree-id4984 . -1) (undo-tree-id4985 . -1) (undo-tree-id4986 . -1) (undo-tree-id4987 . -1) (undo-tree-id4988 . -1) (undo-tree-id4989 . -1) (undo-tree-id4990 . -1) (undo-tree-id4991 . -1) (undo-tree-id4992 . -1) (undo-tree-id4993 . -1) (undo-tree-id4994 . -1) 188 (t 24165 64242 693504 613000)) ((187 . 188)) (24165 64247 418897 0) 0 nil]) ((189 . 190)) ((#(";" 0 1 (fontified t)) . 189)) (24165 64247 671952 0) 0 nil]) ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -189) (undo-tree-id4853 . -1) (undo-tree-id4855 . -1) (undo-tree-id4857 . -1) (undo-tree-id4859 . -1) (undo-tree-id4861 . -1) (undo-tree-id4863 . -1) (undo-tree-id4865 . -1) (undo-tree-id4867 . -1) (undo-tree-id4869 . -1) (undo-tree-id4871 . -1) (undo-tree-id4873 . -1) (undo-tree-id4875 . -1) (undo-tree-id4877 . -1) (undo-tree-id4879 . -1) (undo-tree-id4881 . -1) (undo-tree-id4883 . -1) (undo-tree-id4885 . -1) (#(";" 0 1 (rear-nonsticky t fontified t)) . -190) (undo-tree-id4887 . -1) (undo-tree-id4889 . -1) (undo-tree-id4891 . -1) (undo-tree-id4893 . -1) (undo-tree-id4895 . -1) (undo-tree-id4897 . -1) (undo-tree-id4899 . -1) (undo-tree-id4901 . -1) (undo-tree-id4903 . -1) (undo-tree-id4905 . -1) (undo-tree-id4907 . -1) (undo-tree-id4909 . -1) (undo-tree-id4911 . -1) (undo-tree-id4913 . -1) (undo-tree-id4915 . -1) (undo-tree-id4917 . -1) (#(" " 0 1 (fontified t)) . -191) (undo-tree-id4918 . -1) (undo-tree-id4920 . -1) (undo-tree-id4922 . -1) (undo-tree-id4924 . -1) (undo-tree-id4926 . -1) (undo-tree-id4928 . -1) (undo-tree-id4930 . -1) (undo-tree-id4932 . -1) (undo-tree-id4934 . -1) (undo-tree-id4936 . -1) (undo-tree-id4938 . -1) (undo-tree-id4940 . -1) (undo-tree-id4942 . -1) (#(" " 0 1 (fontified t)) . -192) (undo-tree-id4943 . -1) (undo-tree-id4945 . -1) (undo-tree-id4947 . -1) (undo-tree-id4949 . -1) (undo-tree-id4951 . -1) (undo-tree-id4953 . -1) (undo-tree-id4955 . -1) (undo-tree-id4957 . -1) (undo-tree-id4959 . -1) (undo-tree-id4961 . -1) (#(" " 0 1 (fontified t)) . -193) (undo-tree-id4962 . -1) (undo-tree-id4964 . -1) (undo-tree-id4966 . -1) (undo-tree-id4968 . -1) (undo-tree-id4970 . -1) (undo-tree-id4972 . -1) (undo-tree-id4974 . -1) (#(" " 0 1 (fontified t)) . -194) (undo-tree-id4975 . -1) (undo-tree-id4977 . -1) (undo-tree-id4979 . -1) (undo-tree-id4981 . -1) 195 (t 24165 64217 472133 801000)) ((189 . 195)) (24165 64247 970088 0) 0 nil]) ((84 . 97) (t 24165 64205 667875 730000)) nil (24165 64248 402230 0) 0 nil]) ((104 . 105)) nil (24165 64205 638842 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -104) (undo-tree-id4847 . -1) (undo-tree-id4848 . -1) (undo-tree-id4849 . -1) (undo-tree-id4850 . -1) (undo-tree-id4851 . -1) (undo-tree-id4852 . -1) 105 (t 24165 64197 338878 0)) nil (24165 64205 638868 0) 0 nil]) ((109 . 110)) nil (24165 64197 309910 0) 0 nil]) ((#("<" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -109) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) (undo-tree-id4842 . -1) (#(">" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 110) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1)) nil (24165 64197 309951 0) 0 nil]) ((109 . 111) (#("<" 0 1 (fontified nil)) . -109) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (109 . 110) (t 24165 64192 634442 100000)) nil (24165 64197 309959 0) 0 nil]) ((106 . 109)) nil (24165 64192 605465 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -106) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) 107) nil (24165 64192 605493 0) 0 nil]) ((102 . 107)) nil (24165 64192 605496 0) 0 nil]) ((#(">" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -102) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) (undo-tree-id4780 . -1) (undo-tree-id4781 . -1) (undo-tree-id4782 . -1) (undo-tree-id4783 . -1) (undo-tree-id4784 . -1) (undo-tree-id4785 . -1) (undo-tree-id4786 . -1) (undo-tree-id4787 . -1) (undo-tree-id4788 . -1) (undo-tree-id4789 . -1) (undo-tree-id4790 . -1) (undo-tree-id4791 . -1) (#(">" 0 1 (fontified t syntax-table #9=(1))) . -103) (undo-tree-id4792 . -1) (undo-tree-id4793 . -1) (undo-tree-id4794 . -1) (undo-tree-id4795 . -1) (undo-tree-id4796 . -1) (undo-tree-id4797 . -1) (undo-tree-id4798 . -1) (undo-tree-id4799 . -1) (undo-tree-id4800 . -1) (undo-tree-id4801 . -1) 104) nil (24165 64192 605536 0) 0 nil]) ((103 . 104) (#(">" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) syntax-table #9#)) . 103) (102 . 103) (#(" " 0 1 (fontified nil)) . -102) (102 . 103) (#(">" 0 1 (fontified nil)) . -102) (93 . 103) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 93) (undo-tree-id4802 . -1) (92 . 93) (91 . 93) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -91) (undo-tree-id4803 . -1) (undo-tree-id4804 . -1) (91 . 92)) nil (24165 64192 605545 0) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -91) (undo-tree-id4805 . -1) (undo-tree-id4806 . -1) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . 1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) 92) nil (24165 64192 605571 0) 0 nil]) ((91 . 92) (#(" " 0 1 (fontified nil)) . -91) (91 . 92) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -91) (91 . 92)) nil (24165 64192 605574 0) 0 nil]) ((90 . 92) (#("<" 0 1 (fontified nil face font-lock-type-face)) . -90) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (90 . 91)) nil (24165 64192 605578 0) 0 nil]) ((90 . 91) (t 24165 64168 137056 310000)) nil (24165 64192 605580 0) 0 nil]) ((#("<" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -90) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (#(">" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 91) (undo-tree-id4754 . -1)) nil (24165 64168 116467 0) 0 nil]) ((90 . 92) (#("<" 0 1 (fontified nil face font-lock-type-face)) . -90) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (82 . 91)) nil (24165 64168 116479 0) 0 nil]) ((81 . 82)) nil (24165 64168 116482 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -167) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) 168 (t 24165 64151 474977 665000)) nil (24165 64168 116511 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -165) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (#("-" 0 1 (fontified t)) . -166) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (undo-tree-id4573 . -1) (undo-tree-id4574 . -1) (undo-tree-id4575 . -1) (undo-tree-id4576 . -1) (undo-tree-id4577 . -1) (undo-tree-id4578 . -1) (undo-tree-id4579 . -1) (undo-tree-id4580 . -1) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -1) (undo-tree-id4594 . -1) (undo-tree-id4595 . -1) (undo-tree-id4596 . -1) (undo-tree-id4597 . -1) (#(">" 0 1 (fontified t syntax-table #9#)) . -167) (undo-tree-id4598 . -1) (undo-tree-id4599 . -1) (undo-tree-id4600 . -1) (undo-tree-id4601 . -1) (undo-tree-id4602 . -1) (undo-tree-id4603 . -1) (undo-tree-id4604 . -1) (undo-tree-id4605 . -1) (undo-tree-id4606 . -1) (undo-tree-id4607 . -1) (undo-tree-id4608 . -1) (undo-tree-id4609 . -1) (undo-tree-id4610 . -1) (undo-tree-id4611 . -1) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (#(" " 0 1 (fontified t)) . -168) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) (undo-tree-id4647 . -1) (undo-tree-id4648 . -1) (undo-tree-id4649 . -1) (undo-tree-id4650 . -1) (undo-tree-id4651 . -1) (undo-tree-id4652 . -1) (undo-tree-id4653 . -1) (undo-tree-id4654 . -1) (undo-tree-id4655 . -1) (undo-tree-id4656 . -1) (undo-tree-id4657 . -1) (undo-tree-id4658 . -1) (undo-tree-id4659 . -1) (undo-tree-id4660 . -1) (undo-tree-id4661 . -1) (undo-tree-id4662 . -1) (undo-tree-id4663 . -1) (undo-tree-id4664 . -1) (undo-tree-id4665 . -1) (undo-tree-id4666 . -1) (undo-tree-id4667 . -1) (undo-tree-id4668 . -1) (undo-tree-id4669 . -1) (undo-tree-id4670 . -1) (undo-tree-id4671 . -1) (undo-tree-id4672 . -1) (undo-tree-id4673 . -1) (undo-tree-id4674 . -1) (undo-tree-id4675 . -1) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (#(">" 0 1 (rear-nonsticky t fontified t syntax-table #9#)) . -169) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) (undo-tree-id4683 . -1) (undo-tree-id4684 . -1) 170) nil (24165 64151 444961 0) 0 nil]) ((#("Result<(), " 0 6 (fontified t face font-lock-type-face) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 8 (fontified t face (rainbow-delimiters-depth-2-face)) 8 9 (fontified t face (rainbow-delimiters-depth-2-face)) 9 11 (fontified t)) . -169) (undo-tree-id4685 . -11) (undo-tree-id4686 . -11) (undo-tree-id4687 . -11) (undo-tree-id4688 . -11) (undo-tree-id4689 . -6) (undo-tree-id4690 . -6) (undo-tree-id4691 . -11) (undo-tree-id4692 . -11) (undo-tree-id4693 . -11) (undo-tree-id4694 . -11) (undo-tree-id4695 . -11) (undo-tree-id4696 . -11) (undo-tree-id4697 . -11) (undo-tree-id4698 . -11) (undo-tree-id4699 . -11) (undo-tree-id4700 . -11) (undo-tree-id4701 . -11) (undo-tree-id4702 . -11) (undo-tree-id4703 . -11) (undo-tree-id4704 . -11) (undo-tree-id4705 . -11) (undo-tree-id4706 . -11) 180) nil (24165 64151 444998 0) 0 nil]) ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -180) (undo-tree-id4707 . -5) (undo-tree-id4708 . -5) (undo-tree-id4709 . -3) (undo-tree-id4710 . -5) (undo-tree-id4711 . -5) (undo-tree-id4712 . -5) (undo-tree-id4713 . -5) (undo-tree-id4714 . -5) (undo-tree-id4715 . -5) (undo-tree-id4716 . -5) (undo-tree-id4717 . -5) (undo-tree-id4718 . -5) (undo-tree-id4719 . -5) (undo-tree-id4720 . -5) (undo-tree-id4721 . -5) (undo-tree-id4722 . -5) 185) nil (24165 64151 445019 0) 0 nil]) ((#("error::" 0 5 (fontified t face font-lock-constant-face) 5 7 (fontified t)) . -185) (undo-tree-id4723 . -7) (undo-tree-id4724 . -7) (undo-tree-id4725 . -7) (undo-tree-id4726 . -7) (undo-tree-id4727 . -7) (undo-tree-id4728 . -7) (undo-tree-id4729 . -7) (undo-tree-id4730 . -7) (undo-tree-id4731 . -7) (undo-tree-id4732 . -7) (undo-tree-id4733 . -7) (undo-tree-id4734 . -7) 192) nil (24165 64151 445034 0) 0 nil]) ((#("Error" 0 5 (fontified t face font-lock-type-face)) . -192) (undo-tree-id4735 . -5) (undo-tree-id4736 . -5) (undo-tree-id4737 . -5) (undo-tree-id4738 . -5) 197 (t 24165 64145 728368 201000)) nil (24165 64151 445040 0) 0 nil]) ((nil rear-nonsticky nil 147 . 148) (nil fontified nil 147 . 148) (nil fontified nil 146 . 147) (nil fontified nil 145 . 146) (nil fontified nil 144 . 145) (nil fontified nil 143 . 144) (nil fontified nil 142 . 143) (nil fontified nil 136 . 142) (nil fontified nil 123 . 136) (nil fontified nil 122 . 123) (nil fontified nil 116 . 122) (nil fontified nil 107 . 116) (nil fontified nil 104 . 107) (nil fontified nil 91 . 104) (nil fontified nil 90 . 91) (nil fontified nil 87 . 90) (nil fontified nil 83 . 87) (83 . 148)) nil (24165 64145 708739 0) 0 nil]) ((#("    let sender_socket = UdpSocket::bind(\"127.0.0.1:0\".parse()?)?;" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 33 (fontified t face font-lock-type-face) 33 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 53 (fontified t face font-lock-string-face) 53 59 (fontified t) 59 60 (fontified t face (rainbow-delimiters-depth-3-face)) 60 61 (fontified t face (rainbow-delimiters-depth-3-face)) 61 62 (fontified t face rust-question-mark-face) 62 63 (fontified t face (rainbow-delimiters-depth-2-face)) 63 64 (fontified t face rust-question-mark-face) 64 65 (fontified t)) . 136) (undo-tree-id4455 . -65) (undo-tree-id4456 . -40) (undo-tree-id4457 . -41) (undo-tree-id4458 . -61) (undo-tree-id4459 . -62) (undo-tree-id4460 . -54) (undo-tree-id4461 . -59) (undo-tree-id4462 . -54) (undo-tree-id4463 . -59) (undo-tree-id4464 . -24) (undo-tree-id4465 . -33) (undo-tree-id4466 . -63) (undo-tree-id4467 . -64) (undo-tree-id4468 . -41) (undo-tree-id4469 . -41) (undo-tree-id4470 . -40) (undo-tree-id4471 . -41) (undo-tree-id4472 . -41) (undo-tree-id4473 . -41) (undo-tree-id4474 . -41) (undo-tree-id4475 . -40) (undo-tree-id4476 . -41) (undo-tree-id4477 . -40) (undo-tree-id4478 . -41) (undo-tree-id4479 . -18) (undo-tree-id4480 . -18) (undo-tree-id4481 . -18) (undo-tree-id4482 . -18) (undo-tree-id4483 . -18) (undo-tree-id4484 . -18) (undo-tree-id4485 . -65) (undo-tree-id4486 . -65) (undo-tree-id4487 . -65) (undo-tree-id4488 . -65) (undo-tree-id4489 . -65) (undo-tree-id4490 . -65) (undo-tree-id4491 . -65) (undo-tree-id4492 . -65) (t 24165 64121 88980 375000)) nil (24165 64145 708814 0) 0 nil]) ((apply yas--snippet-revive 127 132 #10=#s(yas--snippet nil nil nil 11 nil nil nil nil)) (apply yas--take-care-of-redo #10#) (127 . 132) (#("Error" 0 5 (fontified nil)) . 127) (127 . 132) (#("Error" 0 5 (fontified nil)) . -127) (127 . 132) (#("E" 0 1 (fontified t face font-lock-type-face)) . -127) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) 128) nil (24165 64121 61468 0) 0 nil]) ((127 . 128)) nil (24165 64121 61473 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -127) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) 128) nil (24165 64121 61484 0) 0 nil]) ((120 . 128)) nil (24165 64121 61486 0) 0 nil]) ((#("io::" 0 2 (fontified t face font-lock-constant-face) 2 4 (fontified t)) . -120) (undo-tree-id4416 . -4) (undo-tree-id4417 . -4) (undo-tree-id4418 . -4) (undo-tree-id4419 . -4) (undo-tree-id4420 . -4) (undo-tree-id4421 . -4) (undo-tree-id4422 . -4) (undo-tree-id4423 . -4) (undo-tree-id4424 . -4) (undo-tree-id4425 . -4) (undo-tree-id4426 . -4) (undo-tree-id4427 . -4) (undo-tree-id4428 . -4) (undo-tree-id4429 . -4) (undo-tree-id4430 . -4) (undo-tree-id4431 . -4) (undo-tree-id4432 . -4) (undo-tree-id4433 . -4) (undo-tree-id4434 . -4) (undo-tree-id4435 . -4) (undo-tree-id4436 . -4) (undo-tree-id4437 . -4) (undo-tree-id4438 . -4) (undo-tree-id4439 . -4) (undo-tree-id4440 . -4) 124) nil (24165 64121 61518 0) 0 nil]) ((#("Error" 0 5 (fontified t face font-lock-type-face)) . -124) (undo-tree-id4441 . -5) (undo-tree-id4442 . -5) (undo-tree-id4443 . -5) (undo-tree-id4444 . -5) (undo-tree-id4445 . -5) (undo-tree-id4446 . -5) (undo-tree-id4447 . -5) (undo-tree-id4448 . -5) (undo-tree-id4449 . -5) (undo-tree-id4450 . -5) (undo-tree-id4451 . -5) (undo-tree-id4452 . -5) (undo-tree-id4453 . -5) (undo-tree-id4454 . -5) 129 (t 24165 64086 55388 151000)) nil (24165 64121 61535 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) 3) nil (24165 64086 35681 0) 0 nil]) ((#("use std::error::Error;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 14 (fontified t face font-lock-constant-face) 14 16 (fontified t) 16 21 (fontified t face font-lock-type-face) 21 22 (fontified t)) . 1) (undo-tree-id4328 . -22) (undo-tree-id4329 . -9) (undo-tree-id4330 . -9) (undo-tree-id4331 . -9) (undo-tree-id4332 . -9) (undo-tree-id4333 . -9) (undo-tree-id4334 . -9) (undo-tree-id4335 . -9) (undo-tree-id4336 . -9) (undo-tree-id4337 . -9) (undo-tree-id4338 . -9) (undo-tree-id4339 . -9) (undo-tree-id4340 . -9) (undo-tree-id4341 . -9) (undo-tree-id4342 . -9) (undo-tree-id4343 . -9) (undo-tree-id4344 . -9) (undo-tree-id4345 . -9) (undo-tree-id4346 . -9) (undo-tree-id4347 . -9) (undo-tree-id4348 . -16) (undo-tree-id4349 . -16) (undo-tree-id4350 . -16) (undo-tree-id4351 . -16) (undo-tree-id4352 . -16) (undo-tree-id4353 . -16) (undo-tree-id4354 . -16) (undo-tree-id4355 . -16) (undo-tree-id4356 . -16) (undo-tree-id4357 . -16) (undo-tree-id4358 . -16) (undo-tree-id4359 . -16) (undo-tree-id4360 . -16) (undo-tree-id4361 . -16) (undo-tree-id4362 . -4) (undo-tree-id4363 . -7) (undo-tree-id4364 . -22) (undo-tree-id4365 . -22) (undo-tree-id4366 . -22) (undo-tree-id4367 . -22) (undo-tree-id4368 . -16) (undo-tree-id4369 . -16) (undo-tree-id4370 . -16) (undo-tree-id4371 . -9) (undo-tree-id4372 . -9) (undo-tree-id4373 . -9) (undo-tree-id4374 . -4) (undo-tree-id4375 . -4) (undo-tree-id4376 . -4) (undo-tree-id4377 . -4) (undo-tree-id4378 . -4) (undo-tree-id4379 . -5) (undo-tree-id4380 . -5) (undo-tree-id4381 . -5) (undo-tree-id4382 . -5) (undo-tree-id4383 . -5) (undo-tree-id4384 . -5) (undo-tree-id4385 . -5) (undo-tree-id4386 . -22) (undo-tree-id4387 . -5) (undo-tree-id4388 . -22) (undo-tree-id4389 . -22) (undo-tree-id4390 . -22) (undo-tree-id4391 . -22) (undo-tree-id4392 . -22) (undo-tree-id4393 . -22) (undo-tree-id4394 . -22) (undo-tree-id4395 . -22) (t 24165 64076 785804 856000)) nil (24165 64086 35770 0) 0 nil]) ((22 . 23)) nil (24165 64076 758095 0) 0 nil]) ((apply yas--snippet-revive 17 22 #11=#s(yas--snippet nil nil nil 10 nil nil nil nil)) (apply yas--take-care-of-redo #11#) (17 . 22) (#("Error" 0 5 (fontified nil)) . 17) (17 . 22) (#("Error" 0 5 (fontified nil)) . -17) (17 . 22) (#("Er" 0 2 (fontified t face font-lock-type-face)) . -17) (undo-tree-id4256 . -2) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -2) (undo-tree-id4265 . -2) (undo-tree-id4266 . -2) (undo-tree-id4267 . -2) (undo-tree-id4268 . -2) (undo-tree-id4269 . -2) (undo-tree-id4270 . -2) (undo-tree-id4271 . -2) 19) nil (24165 64076 758138 0) 0 nil]) ((15 . 19)) nil (24165 64076 758142 0) 0 nil]) ((apply yas--snippet-revive 10 15 #12=#s(yas--snippet nil nil nil 9 nil nil nil nil)) (apply yas--take-care-of-redo #12#) (10 . 15) (#("error" 0 5 (fontified nil)) . 10) (10 . 15) (#("error" 0 5 (fontified nil)) . -10) (10 . 15) (#("err" 0 3 (fontified t)) . -10) (undo-tree-id4272 . -3) (undo-tree-id4273 . -3) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -2) (undo-tree-id4282 . -2) (undo-tree-id4283 . -2) (undo-tree-id4284 . -2) (undo-tree-id4285 . -2) (undo-tree-id4286 . -3) (undo-tree-id4287 . -3) (undo-tree-id4288 . -3) (undo-tree-id4289 . -3) (undo-tree-id4290 . -3) (undo-tree-id4291 . -3) (undo-tree-id4292 . -3) (undo-tree-id4293 . -3) 13) nil (24165 64076 758174 0) 0 nil]) ((1 . 13)) nil (24165 64076 758176 0) 0 nil]) ((1 . 3)) nil (24165 64076 758177 0) 0 nil]) ((#("p" 0 1 (fontified t)) . -90) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) 91) nil (24165 64076 758190 0) 0 nil]) ((90 . 91) (t 24165 64026 19296 480000)) nil (24165 64076 758192 0) 0 nil]) ((#("&" 0 1 (fontified t)) . -173) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) 174) nil (24165 64025 991686 0) 0 nil] [nil ([nil nil ((#("?" 0 1 (fontified t face rust-question-mark-face)) . -196) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) 197 (t 24165 63999 731908 429000)) ((196 . 197) (t 24165 64016 280719 748000)) (24165 64016 253397 0) 0 nil]) ((#("&" 0 1 (fontified t)) . -173) (undo-tree-id4226 . -1) (undo-tree-id4228 . -1) (undo-tree-id4230 . -1) (undo-tree-id4232 . -1) (undo-tree-id4234 . -1) 174 (t 24165 63993 203568 765000)) ((173 . 174)) (24165 64018 942602 0) 0 nil]) ((133 . 137) (t 24165 63990 431676 903000)) nil (24165 64019 372922 0) 0 nil]) ((nil rear-nonsticky nil 195 . 196) (nil fontified nil 133 . 196) (133 . 196)) nil (24165 63990 403741 0) 0 nil]) ((#("    let socket = UdpSocket::bind(\"127.0.0.1\".parse()?);

    Ok(());" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-variable-name-face) 14 17 (fontified t) 17 26 (fontified t face font-lock-type-face) 26 28 (fontified t) 28 32 (fontified t) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 44 (fontified t face font-lock-string-face) 44 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 52 (fontified t face (rainbow-delimiters-depth-3-face)) 52 53 (fontified t face rust-question-mark-face) 53 54 (fontified t face (rainbow-delimiters-depth-2-face)) 54 56 (fontified t) 56 57 (fontified t) 57 61 (fontified t) 61 63 (fontified t face font-lock-type-face) 63 64 (fontified t face (rainbow-delimiters-depth-2-face)) 64 65 (fontified t face (rainbow-delimiters-depth-3-face)) 65 66 (fontified t face (rainbow-delimiters-depth-3-face)) 66 67 (fontified t face (rainbow-delimiters-depth-2-face)) 67 68 (fontified t)) . 133) (undo-tree-id4148 . -68) (undo-tree-id4149 . -56) (undo-tree-id4150 . -56) (undo-tree-id4151 . -57) (undo-tree-id4152 . -57) (undo-tree-id4153 . -64) (undo-tree-id4154 . -64) (undo-tree-id4155 . -66) (undo-tree-id4156 . -66) (undo-tree-id4157 . -66) (undo-tree-id4158 . -52) (undo-tree-id4159 . -53) (undo-tree-id4160 . -66) (undo-tree-id4161 . -66) (undo-tree-id4162 . -65) (undo-tree-id4163 . -66) (undo-tree-id4164 . -65) (undo-tree-id4165 . -66) (undo-tree-id4166 . -65) (undo-tree-id4167 . -66) (undo-tree-id4168 . -65) (undo-tree-id4169 . -66) (undo-tree-id4170 . -43) (undo-tree-id4171 . -44) (undo-tree-id4172 . -43) (undo-tree-id4173 . -44) (undo-tree-id4174 . -65) (undo-tree-id4175 . -66) (undo-tree-id4176 . -65) (undo-tree-id4177 . -66) (undo-tree-id4178 . -64) (undo-tree-id4179 . -65) (undo-tree-id4180 . -66) (undo-tree-id4181 . -66) (undo-tree-id4182 . -66) (undo-tree-id4183 . -68) (undo-tree-id4184 . -68) (undo-tree-id4185 . -68) (undo-tree-id4186 . -56) (undo-tree-id4187 . -56) (undo-tree-id4188 . -56) (undo-tree-id4189 . -11) (undo-tree-id4190 . -11) (undo-tree-id4191 . -11) (undo-tree-id4192 . -33) (undo-tree-id4193 . -34) (undo-tree-id4194 . -4) (undo-tree-id4195 . -4) (undo-tree-id4196 . -4) (undo-tree-id4197 . -4) (undo-tree-id4198 . -55) (undo-tree-id4199 . -55) (undo-tree-id4200 . -55) (undo-tree-id4201 . -55) (undo-tree-id4202 . -55) (undo-tree-id4203 . -55) (undo-tree-id4204 . -55) (undo-tree-id4205 . -56) (undo-tree-id4206 . -56) (undo-tree-id4207 . -56) (undo-tree-id4208 . -57) (undo-tree-id4209 . -57) (undo-tree-id4210 . -57) (undo-tree-id4211 . -68) (undo-tree-id4212 . -68) (undo-tree-id4213 . -68) (undo-tree-id4214 . -55) (undo-tree-id4215 . -68) (undo-tree-id4216 . -68) (undo-tree-id4217 . -68) (undo-tree-id4218 . -68) (undo-tree-id4219 . -68) (undo-tree-id4220 . -57) (undo-tree-id4221 . -57) (undo-tree-id4222 . -57) (undo-tree-id4223 . -56) (undo-tree-id4224 . -56) (undo-tree-id4225 . -56) (t 24165 63931 864357 530000)) nil (24165 63990 403859 0) 0 nil]) ((#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 199) (undo-tree-id4145 . -1) (198 . 199) (197 . 199) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -197) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (197 . 198) (t 24165 63926 865439 191000)) nil (24165 63931 844986 0) 0 nil]) ((198 . 199) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 198) (undo-tree-id4136 . -1) (197 . 198) (196 . 198) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -196) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (194 . 197)) nil (24165 63926 844038 0) 0 nil]) ((190 . 194) (#("    " 0 4 (fontified nil)) . 189) (189 . 193) (189 . 190) (#("    " 0 4 (fontified t)) . 189) (undo-tree-id4139 . -4) (undo-tree-id4140 . -4) (undo-tree-id4141 . -4) (undo-tree-id4142 . -4) (undo-tree-id4143 . -4) (undo-tree-id4144 . -4) 193) nil (24165 63926 844055 0) 0 nil]) ((188 . 193) (t 24165 63898 245278 525000)) nil (24165 63926 844058 0) 0 nil]) ((101 . 104) (t 24165 63894 457991 999000)) nil (24165 63898 224716 0) 0 nil]) ((nil rear-nonsticky nil 126 . 127) (nil fontified nil 101 . 127) (101 . 127)) nil (24165 63894 430329 0) 0 nil]) ((#("-" 0 1 (fontified t)) . -101) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (#(">" 0 1 (fontified t syntax-table #9#)) . -102) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (#(" " 0 1 (fontified t)) . -103) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (#("R" 0 1 (fontified t face font-lock-type-face)) . -104) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -105) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -106) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -107) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -108) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -109) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) 110) nil (24165 63894 430843 0) 0 nil]) ((100 . 110) (t 24165 63851 551524 427000)) nil (24165 63894 430861 0) 0 nil]) ((129 . 131)) nil (24165 63851 524828 0) 0 nil]) ((#("." 0 1 (fontified t)) . -129) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) 130 (t 24165 63847 243357 230000)) nil (24165 63851 524853 0) 0 nil]) ((156 . 157) (t 24165 63844 710112 815000)) nil (24165 63847 216391 0) 0 nil]) ((154 . 155) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . 154) (undo-tree-id3342 . -1) (153 . 154) (152 . 154) (#("(" 0 1 (fontified nil)) . -152) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (146 . 153) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 146) (undo-tree-id3345 . -1) (undo-tree-id3346 . 1) (undo-tree-id3347 . -1) (139 . 146)) nil (24165 63844 681800 0) 0 nil]) ((136 . 139) (135 . 137) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -135) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (135 . 136)) nil (24165 63844 681810 0) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . -135) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . 1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 136) (undo-tree-id3420 . 1) (undo-tree-id3421 . 1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (#("1" 0 1 (fontified t face font-lock-string-face)) . -136) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . 1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (#("2" 0 1 (fontified t face font-lock-string-face)) . -137) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (#("7" 0 1 (fontified t face font-lock-string-face)) . -138) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -139) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) 140) nil (24165 63844 682054 0) 0 nil]) ((136 . 140) (135 . 137) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -135) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (135 . 136)) nil (24165 63844 682066 0) 0 nil]) ((107 . 120)) nil (24165 63844 682068 0) 0 nil]) ((121 . 123) (#("(" 0 1 (fontified nil)) . -121) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (107 . 122)) nil (24165 63844 682071 0) 0 nil]) ((#("UdpSocket::" 0 9 (fontified t face font-lock-type-face) 9 11 (fontified t)) . -107) (undo-tree-id3556 . -11) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -2) (undo-tree-id3565 . -2) (undo-tree-id3566 . -2) (undo-tree-id3567 . -3) (undo-tree-id3568 . -3) (undo-tree-id3569 . -3) (undo-tree-id3570 . -3) (undo-tree-id3571 . -3) (undo-tree-id3572 . -3) (undo-tree-id3573 . -3) (undo-tree-id3574 . -3) (undo-tree-id3575 . -3) (undo-tree-id3576 . -4) (undo-tree-id3577 . -4) (undo-tree-id3578 . -4) (undo-tree-id3579 . -5) (undo-tree-id3580 . -5) (undo-tree-id3581 . -5) (undo-tree-id3582 . -6) (undo-tree-id3583 . -6) (undo-tree-id3584 . -6) (undo-tree-id3585 . -6) (undo-tree-id3586 . -6) (undo-tree-id3587 . -7) (undo-tree-id3588 . -7) (undo-tree-id3589 . -7) (undo-tree-id3590 . -8) (undo-tree-id3591 . -8) (undo-tree-id3592 . -8) (undo-tree-id3593 . -9) (undo-tree-id3594 . -9) (undo-tree-id3595 . -9) (undo-tree-id3596 . -9) (undo-tree-id3597 . -9) (undo-tree-id3598 . -10) (undo-tree-id3599 . -10) (undo-tree-id3600 . -10) (undo-tree-id3601 . -10) (undo-tree-id3602 . -10) (undo-tree-id3603 . -10) (undo-tree-id3604 . -10) (undo-tree-id3605 . -11) (undo-tree-id3606 . -11) (undo-tree-id3607 . -11) (undo-tree-id3608 . -11) (undo-tree-id3609 . -11) (undo-tree-id3610 . -11) (undo-tree-id3611 . -11) (undo-tree-id3612 . -11) (undo-tree-id3613 . -11) (undo-tree-id3614 . -11) (undo-tree-id3615 . -11) (undo-tree-id3616 . -11) (undo-tree-id3617 . -11) (undo-tree-id3618 . -11) (undo-tree-id3619 . -11) (undo-tree-id3620 . -11) (undo-tree-id3621 . -11) (undo-tree-id3622 . -11) (undo-tree-id3623 . -11) (undo-tree-id3624 . -11) (undo-tree-id3625 . -11) (undo-tree-id3626 . -11) (undo-tree-id3627 . -11) (undo-tree-id3628 . -11) (undo-tree-id3629 . -11) (undo-tree-id3630 . -11) (undo-tree-id3631 . -11) (undo-tree-id3632 . -11) (undo-tree-id3633 . -11) (undo-tree-id3634 . -11) (undo-tree-id3635 . -11) (undo-tree-id3636 . -11) (undo-tree-id3637 . -11) (undo-tree-id3638 . -11) (undo-tree-id3639 . -11) (undo-tree-id3640 . -9) (undo-tree-id3641 . -11) (undo-tree-id3642 . -11) (undo-tree-id3643 . -11) (undo-tree-id3644 . -11) (undo-tree-id3645 . -11) (undo-tree-id3646 . -11) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -11) (undo-tree-id3655 . -1) (undo-tree-id3656 . -11) (undo-tree-id3657 . -11) (undo-tree-id3658 . -11) (undo-tree-id3659 . -11) (undo-tree-id3660 . -11) (undo-tree-id3661 . -11) 118) nil (24165 63844 682201 0) 0 nil]) ((#("bind();" 0 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t)) . -118) (undo-tree-id3662 . -7) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -2) (undo-tree-id3667 . -2) (undo-tree-id3668 . -2) (undo-tree-id3669 . -3) (undo-tree-id3670 . -3) (undo-tree-id3671 . -3) (undo-tree-id3672 . -4) (undo-tree-id3673 . -4) (undo-tree-id3674 . -4) (undo-tree-id3675 . -4) (undo-tree-id3676 . -4) (undo-tree-id3677 . -4) (undo-tree-id3678 . -4) (undo-tree-id3679 . -4) (undo-tree-id3680 . -4) (undo-tree-id3681 . -4) (undo-tree-id3682 . -5) (undo-tree-id3683 . -5) (undo-tree-id3684 . -5) (undo-tree-id3685 . -5) (undo-tree-id3686 . -6) (undo-tree-id3687 . -7) (undo-tree-id3688 . -7) (undo-tree-id3689 . -7) (undo-tree-id3690 . -7) (undo-tree-id3691 . -7) (undo-tree-id3692 . -7) (undo-tree-id3693 . -7) (undo-tree-id3694 . -7) (undo-tree-id3695 . -7) (undo-tree-id3696 . -7) (undo-tree-id3697 . -7) (undo-tree-id3698 . -7) (undo-tree-id3699 . -7) 125) nil (24165 63844 682248 0) 0 nil]) ((124 . 125) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 124) (undo-tree-id3700 . -1) (123 . 124) (122 . 124) (#("(" 0 1 (fontified nil)) . -122) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (107 . 123)) nil (24165 63844 682255 0) 0 nil]) ((103 . 107) (t 24165 63523 72896 13000)) nil (24165 63844 682257 0) 0 nil]) ((#("UdpSocket::" 0 9 (fontified t face font-lock-type-face) 9 11 (fontified t)) . -87) (undo-tree-id3261 . -11) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -2) (undo-tree-id3268 . -2) (undo-tree-id3269 . -2) (undo-tree-id3270 . -2) (undo-tree-id3271 . -2) (undo-tree-id3272 . -3) (undo-tree-id3273 . -3) (undo-tree-id3274 . -3) (undo-tree-id3275 . -3) (undo-tree-id3276 . -3) (undo-tree-id3277 . -3) (undo-tree-id3278 . -3) (undo-tree-id3279 . -3) (undo-tree-id3280 . -3) (undo-tree-id3281 . -4) (undo-tree-id3282 . -4) (undo-tree-id3283 . -4) (undo-tree-id3284 . -4) (undo-tree-id3285 . -4) (undo-tree-id3286 . -5) (undo-tree-id3287 . -5) (undo-tree-id3288 . -5) (undo-tree-id3289 . -5) (undo-tree-id3290 . -5) (undo-tree-id3291 . -6) (undo-tree-id3292 . -6) (undo-tree-id3293 . -6) (undo-tree-id3294 . -7) (undo-tree-id3295 . -7) (undo-tree-id3296 . -7) (undo-tree-id3297 . -8) (undo-tree-id3298 . -8) (undo-tree-id3299 . -8) (undo-tree-id3300 . -8) (undo-tree-id3301 . -8) (undo-tree-id3302 . -9) (undo-tree-id3303 . -9) (undo-tree-id3304 . -9) (undo-tree-id3305 . -9) (undo-tree-id3306 . -9) (undo-tree-id3307 . -9) (undo-tree-id3308 . -9) (undo-tree-id3309 . -10) (undo-tree-id3310 . -10) (undo-tree-id3311 . -10) (undo-tree-id3312 . -10) (undo-tree-id3313 . -10) (undo-tree-id3314 . -10) (undo-tree-id3315 . -10) (undo-tree-id3316 . -11) (undo-tree-id3317 . -11) (undo-tree-id3318 . -11) (undo-tree-id3319 . -11) (undo-tree-id3320 . -11) (undo-tree-id3321 . -11) (undo-tree-id3322 . -11) (undo-tree-id3323 . -11) (undo-tree-id3324 . -11) (undo-tree-id3325 . -11) (undo-tree-id3326 . -11) (undo-tree-id3327 . -11) (undo-tree-id3328 . -11) (undo-tree-id3329 . -11) (undo-tree-id3330 . -11) (undo-tree-id3331 . -11) (undo-tree-id3332 . -11) 98) nil (24165 63523 46331 0) 0 nil]) ((#("b" 0 1 (fontified t)) . -98) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) 99) nil (24165 63523 46350 0) 0 nil]) ((87 . 99) (t 24165 63505 422226 175000)) nil (24165 63523 46353 0) 0 nil]) ((83 . 87) (82 . 84)) nil (24165 63505 398171 0) 0 nil]) ((81 . 83) (#("{" 0 1 (fontified nil)) . -81) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (80 . 82) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 80) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (79 . 80) (78 . 80) (#("(" 0 1 (fontified nil face font-lock-function-name-face)) . -78) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (64 . 79)) nil (24165 63505 398197 0) 0 nil]) ((62 . 64) (t 24165 63392 796570 690000)) nil (24165 63505 398201 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -53) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (#("-" 0 1 (fontified t)) . -54) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (#(">" 0 1 (fontified t syntax-table #9#)) . -55) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (#(" " 0 1 (fontified t)) . -56) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (#("R" 0 1 (fontified t face font-lock-type-face)) . -57) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -58) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (#("s" 0 1 (fontified t face font-lock-type-face)) . -59) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -60) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (#("l" 0 1 (fontified t face font-lock-type-face)) . -61) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -62) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) 63) nil (24165 63392 770562 0) 0 nil]) ((apply yas--snippet-revive 57 63 #13=#s(yas--snippet nil nil nil 8 nil nil nil nil)) (apply yas--take-care-of-redo #13#) (57 . 63) (#("Result" 0 6 (fontified nil)) . 57) (57 . 63) (#("Result" 0 6 (fontified nil)) . -57) (57 . 63) (#("Re" 0 2 (fontified t face font-lock-type-face)) . -57) (undo-tree-id3234 . -2) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -2) (undo-tree-id3248 . -2) (undo-tree-id3249 . -2) (undo-tree-id3250 . -2) (undo-tree-id3251 . -2) (undo-tree-id3252 . -2) (undo-tree-id3253 . -2) (undo-tree-id3254 . -2) 59) nil (24165 63392 770609 0) 0 nil]) ((53 . 59) (t 24165 63380 639235 834000)) nil (24165 63392 770612 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -53) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (#("-" 0 1 (fontified t)) . -54) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (#(">" 0 1 (fontified t syntax-table #9#)) . -55) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (#(" " 0 1 (fontified t)) . -56) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) 57) nil (24165 63380 614075 0) 0 nil]) ((53 . 57) (t 24165 63356 371375 904000)) nil (24165 63380 614085 0) 0 nil]) ((56 . 60) (55 . 57)) nil (24165 63356 345358 0) 0 nil]) ((54 . 56) (#("{" 0 1 (fontified nil)) . -54) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (54 . 55)) nil (24165 63356 345376 0) 0 nil]) ((#("P" 0 1 (fontified t face font-lock-type-face)) . -54) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) 55) nil (24165 63356 345401 0) 0 nil]) ((54 . 55)) nil (24165 63356 345403 0) 0 nil]) ((#("}" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -54) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . 1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) 55) nil (24165 63356 345427 0) 0 nil] [nil nil ((55 . 56)) ((#("
" 0 1 (fontified t)) . 55) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1)) (24165 63353 334167 0) 0 nil]) ((53 . 55) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 53) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (52 . 53) (51 . 53) (#("(" 0 1 (fontified nil face font-lock-function-name-face)) . -51) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (51 . 52)) nil (24165 63353 334704 0) 0 nil]) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -51) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . 1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -52) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . 1) (undo-tree-id2557 . 1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (#(" " 0 1 (fontified t)) . -53) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -54) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 55) (undo-tree-id2611 . -1)) nil (24165 63353 334413 0) 0 nil]) ((54 . 56) (#("{" 0 1 (fontified nil)) . -54) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (53 . 55) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 53) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (52 . 53) (51 . 53) (#("(" 0 1 (fontified nil face font-lock-function-name-face)) . -51) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (49 . 52)) nil (24165 63353 334431 0) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-function-name-face)) . -49) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (#("n" 0 1 (fontified t face font-lock-function-name-face)) . -50) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) 51) nil (24165 63353 334473 0) 0 nil]) ((33 . 51)) nil (24165 63353 334475 0) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-function-name-face)) . -33) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) 34) nil (24165 63353 334493 0) 0 nil]) ((29 . 34)) nil (24165 63353 334495 0) 0 nil]) ((28 . 30) (t 24165 63218 518213 739000)) nil (24165 63353 334496 0) 0 nil]) ((16 . 25)) nil (24165 63218 501464 0) 0 nil]) ((#("UdpListener" 0 11 (fontified t face font-lock-type-face)) . -16) (undo-tree-id2378 . -9) (undo-tree-id2379 . -11) (undo-tree-id2380 . -9) (undo-tree-id2381 . -9) (undo-tree-id2382 . -9) (undo-tree-id2383 . -9) (undo-tree-id2384 . -9) (undo-tree-id2385 . -9) (undo-tree-id2386 . -9) (undo-tree-id2387 . -9) (undo-tree-id2388 . -9) (undo-tree-id2389 . -9) (undo-tree-id2390 . -9) (undo-tree-id2391 . -11) (undo-tree-id2392 . -11) (undo-tree-id2393 . -11) (undo-tree-id2394 . -11) (undo-tree-id2395 . -11) (undo-tree-id2396 . -11) (undo-tree-id2397 . -11) (undo-tree-id2398 . -11) (undo-tree-id2399 . -11) (undo-tree-id2400 . -11) (undo-tree-id2401 . -10) (undo-tree-id2402 . -10) (undo-tree-id2403 . -10) (undo-tree-id2404 . -9) (undo-tree-id2405 . -9) (undo-tree-id2406 . -9) (undo-tree-id2407 . -9) (undo-tree-id2408 . -9) (undo-tree-id2409 . -9) (undo-tree-id2410 . -9) (undo-tree-id2411 . -9) (undo-tree-id2412 . -9) (undo-tree-id2413 . -9) (undo-tree-id2414 . -11) (undo-tree-id2415 . -9) (undo-tree-id2416 . -11) (undo-tree-id2417 . -11) (undo-tree-id2418 . -11) (undo-tree-id2419 . -11) (undo-tree-id2420 . -11) 27 (t 24165 63185 827568 833000)) nil (24165 63218 501537 0) 0 nil] [nil nil ((#("use mio::net::{UdpListener};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-constant-face) 12 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 26 (fontified t face font-lock-type-face) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t)) . 1) (undo-tree-id2354 . -28) (undo-tree-id2355 . -24) (undo-tree-id2356 . -15) (undo-tree-id2357 . -26) (undo-tree-id2358 . -24) (undo-tree-id2359 . -24) (undo-tree-id2360 . -24) (undo-tree-id2361 . -24) (undo-tree-id2362 . -24) (undo-tree-id2363 . -24) (undo-tree-id2364 . -24) (undo-tree-id2365 . -24) (undo-tree-id2366 . -24) (undo-tree-id2367 . -24) (undo-tree-id2368 . -28) (undo-tree-id2369 . -24) (undo-tree-id2370 . -28) (undo-tree-id2371 . -28) (undo-tree-id2372 . -28) (undo-tree-id2373 . -28) (undo-tree-id2374 . -28) (undo-tree-id2375 . -28) (undo-tree-id2376 . -28) (undo-tree-id2377 . -28) (t 24165 63155 206780 734000)) ((1 . 29) (t 24165 63178 69400 917000)) (24165 63178 45187 0) 0 nil]) ((28 . 29)) nil (24165 63183 961847 0) 0 nil]) ((23 . 27)) nil (24165 63155 182153 0) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-type-face)) . -23) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) 24) nil (24165 63155 182179 0) 0 nil]) ((16 . 24) (15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (13 . 16)) nil (24165 63155 182186 0) 0 nil]) ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -13) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . 1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -14) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . 1) (undo-tree-id2335 . 1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) 15) nil (24165 63155 182258 0) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 15) (undo-tree-id2341 . -1) (undo-tree-id2342 . 1) (undo-tree-id2343 . -1) (14 . 15) (13 . 15) (#("\"" 0 1 (fontified nil)) . -13) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (13 . 14)) nil (24165 63155 182270 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -13) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) 14 (t 24165 63102 221159 677000)) nil (24165 63155 182285 0) 0 nil]) ((13 . 14)) nil (24165 63102 205531 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -13) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (#(":" 0 1 (fontified t)) . -14) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (#("{" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -15) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (#("}" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -16) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . 1) (undo-tree-id2273 . 1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (#(";" 0 1 (fontified t)) . -17) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) 18 (t 24165 63099 242112 131000)) nil (24165 63102 205925 0) 0 nil]) ((#("TcpListener" 0 11 (fontified t face font-lock-type-face)) . -16) (undo-tree-id1942 . -11) (undo-tree-id1943 . -6) (undo-tree-id1944 . -6) (undo-tree-id1945 . -6) (undo-tree-id1946 . -6) (undo-tree-id1947 . -6) (undo-tree-id1948 . -6) (undo-tree-id1949 . -6) (undo-tree-id1950 . -6) (undo-tree-id1951 . -6) (undo-tree-id1952 . -6) (undo-tree-id1953 . -6) (undo-tree-id1954 . -6) (undo-tree-id1955 . -6) (undo-tree-id1956 . -6) (undo-tree-id1957 . -6) (undo-tree-id1958 . -6) (undo-tree-id1959 . -6) (undo-tree-id1960 . -6) (undo-tree-id1961 . -6) (undo-tree-id1962 . -6) (undo-tree-id1963 . -6) (undo-tree-id1964 . -6) (undo-tree-id1965 . -6) (undo-tree-id1966 . -6) (undo-tree-id1967 . -6) (undo-tree-id1968 . -6) (undo-tree-id1969 . -6) (undo-tree-id1970 . -6) (undo-tree-id1971 . -6) (undo-tree-id1972 . -6) (undo-tree-id1973 . -6) (undo-tree-id1974 . -6) (undo-tree-id1975 . -6) (undo-tree-id1976 . -6) (undo-tree-id1977 . -6) (undo-tree-id1978 . -6) (undo-tree-id1979 . -6) (undo-tree-id1980 . -11) (undo-tree-id1981 . -11) (undo-tree-id1982 . -11) (undo-tree-id1983 . -11) (undo-tree-id1984 . -11) (undo-tree-id1985 . -11) 27) nil (24165 63099 219800 0) 0 nil] [nil ([nil nil ((10 . 13)) ((#("tcp" 0 3 (fontified t face font-lock-constant-face)) . 10) (undo-tree-id1924 . -2) (undo-tree-id1925 . -3) (undo-tree-id1926 . -3) (undo-tree-id1927 . -3) (undo-tree-id1928 . -3) (undo-tree-id1929 . -3) (undo-tree-id1930 . -3) (undo-tree-id1931 . -3) (undo-tree-id1932 . -2) (undo-tree-id1933 . -2) (undo-tree-id1934 . -2) (undo-tree-id1935 . -2) (undo-tree-id1936 . -2) (undo-tree-id1937 . -2) (undo-tree-id1938 . -2) (undo-tree-id1939 . -2) (undo-tree-id1940 . -2) (undo-tree-id1941 . -2) (t 24165 63089 671597 727000)) (24165 63089 648168 0) 0 nil]) ((#("net" 0 3 (fontified t face font-lock-constant-face)) . -10) (undo-tree-id1785 . -3) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -2) (undo-tree-id1794 . -2) (undo-tree-id1795 . -2) (undo-tree-id1796 . -2) (undo-tree-id1797 . -2) (undo-tree-id1798 . -2) (undo-tree-id1799 . -2) (undo-tree-id1800 . -3) (undo-tree-id1801 . -3) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) (undo-tree-id1805 . -3) (undo-tree-id1806 . -3) (undo-tree-id1807 . -3) (undo-tree-id1808 . -3) 13) ((10 . 13)) (24165 63093 468836 0) 0 nil]) ((28 . 29)) nil (24165 63093 964043 0) 0 nil]) ((22 . 27)) nil (24165 63089 648222 0) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-type-face)) . -22) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -23) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -24) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -25) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) 26) nil (24165 63089 648332 0) 0 nil]) ((16 . 26) (15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (8 . 16)) nil (24165 63089 648340 0) 0 nil]) ((apply yas--snippet-revive 5 8 #14=#s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #14#) (5 . 8) (#("mio" 0 3 (fontified nil)) . 5) (5 . 8) (#("mio" 0 3 (fontified nil)) . -5) (5 . 8) (#("mi" 0 2 (fontified t face font-lock-constant-face)) . -5) (undo-tree-id1903 . -2) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -2) (undo-tree-id1917 . -2) (undo-tree-id1918 . -2) (undo-tree-id1919 . -2) (undo-tree-id1920 . -2) (undo-tree-id1921 . -2) (undo-tree-id1922 . -2) (undo-tree-id1923 . -2) 7) nil (24165 63089 648368 0) 0 nil]) ((1 . 7) (t 24165 63059 71649 745000)) nil (24165 63089 648371 0) 0 nil]) ((#("use tokio::net::{TcpListener};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-constant-face) 9 11 (fontified t) 11 14 (fontified t face font-lock-constant-face) 14 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 28 (fontified t face font-lock-type-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 30 (fontified t)) . 1) (undo-tree-id1765 . -30) (undo-tree-id1766 . -26) (undo-tree-id1767 . -4) (undo-tree-id1768 . -9) (undo-tree-id1769 . -26) (undo-tree-id1770 . -26) (undo-tree-id1771 . -26) (undo-tree-id1772 . -26) (undo-tree-id1773 . -26) (undo-tree-id1774 . -26) (undo-tree-id1775 . -26) (undo-tree-id1776 . -26) (undo-tree-id1777 . -30) (undo-tree-id1778 . -30) (undo-tree-id1779 . -30) (undo-tree-id1780 . -30) (undo-tree-id1781 . -30) (undo-tree-id1782 . -30) (undo-tree-id1783 . -30) (undo-tree-id1784 . -30) (t 24165 62957 772758 686000)) nil (24165 63059 48370 0) 0 nil]) ((18 . 29)) nil (24165 62957 749373 0) 0 nil]) ((#("UdpListener" 0 11 (fontified t face font-lock-type-face)) . -18) (undo-tree-id1710 . -11) (undo-tree-id1711 . -7) (undo-tree-id1712 . -7) (undo-tree-id1713 . -7) (undo-tree-id1714 . -7) (undo-tree-id1715 . -7) (undo-tree-id1716 . -7) (undo-tree-id1717 . -7) (undo-tree-id1718 . -7) (undo-tree-id1719 . -7) (undo-tree-id1720 . -7) (undo-tree-id1721 . -7) (undo-tree-id1722 . -7) (undo-tree-id1723 . -7) (undo-tree-id1724 . -7) (undo-tree-id1725 . -7) (undo-tree-id1726 . -7) (undo-tree-id1727 . -7) (undo-tree-id1728 . -7) (undo-tree-id1729 . -7) (undo-tree-id1730 . -7) (undo-tree-id1731 . -7) (undo-tree-id1732 . -7) (undo-tree-id1733 . -7) (undo-tree-id1734 . -7) (undo-tree-id1735 . -7) (undo-tree-id1736 . -7) (undo-tree-id1737 . -7) (undo-tree-id1738 . -7) (undo-tree-id1739 . -7) (undo-tree-id1740 . -7) (undo-tree-id1741 . -7) (undo-tree-id1742 . -7) (undo-tree-id1743 . -7) (undo-tree-id1744 . -7) (undo-tree-id1745 . -7) (undo-tree-id1746 . -11) (undo-tree-id1747 . -11) (undo-tree-id1748 . -11) (undo-tree-id1749 . -11) (undo-tree-id1750 . -10) (undo-tree-id1751 . -10) (undo-tree-id1752 . -10) (undo-tree-id1753 . -10) (undo-tree-id1754 . -10) (undo-tree-id1755 . -10) (undo-tree-id1756 . -10) (undo-tree-id1757 . -10) (undo-tree-id1758 . -11) (undo-tree-id1759 . -10) (undo-tree-id1760 . -11) (undo-tree-id1761 . -11) (undo-tree-id1762 . -11) (undo-tree-id1763 . -11) (undo-tree-id1764 . -11) 29 (t 24165 62946 352083 196000)) nil (24165 62957 749473 0) 0 nil]) ((30 . 31)) nil (24165 62946 328642 0) 0 nil]) ((25 . 29)) nil (24165 62946 328647 0) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-type-face)) . -25) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -26) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -27) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -28) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) 29) nil (24165 62946 328768 0) 0 nil]) ((18 . 29) (17 . 19) (#("{" 0 1 (fontified nil)) . -17) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (15 . 18)) nil (24165 62946 328777 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -15) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (#(":" 0 1 (fontified t)) . -16) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (#("U" 0 1 (fontified t face font-lock-type-face)) . -17) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -18) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) 19) nil (24165 62946 328926 0) 0 nil]) ((17 . 19)) nil (24165 62946 328932 0) 0 nil]) ((#("u" 0 1 (fontified t)) . -17) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) 18) nil (24165 62946 328942 0) 0 nil]) ((15 . 18)) nil (24165 62946 328944 0) 0 nil]) ((apply yas--snippet-revive 12 15 #15=#s(yas--snippet nil nil nil 6 nil nil nil nil)) (apply yas--take-care-of-redo #15#) (12 . 15) (#("net" 0 3 (fontified nil)) . 12) (12 . 15) (#("net" 0 3 (fontified nil)) . -12) (12 . 15) (#("ne" 0 2 (fontified t)) . -12) (undo-tree-id1708 . -2) 14) nil (24165 62946 328947 0) 0 nil]) ((10 . 14)) nil (24165 62946 328949 0) 0 nil]) ((apply yas--snippet-revive 5 10 #16=#s(yas--snippet nil nil nil 5 nil nil nil nil)) (apply yas--take-care-of-redo #16#) (5 . 10) (#("tokio" 0 5 (fontified nil)) . 5) (5 . 10) (#("tokio" 0 5 (fontified nil)) . -5) (5 . 10) (#("to" 0 2 (fontified t face font-lock-constant-face)) . -5) (undo-tree-id1709 . -2) 7) nil (24165 62946 328952 0) 0 nil]) ((1 . 7)) nil (24165 62946 328954 0) 0 nil]) ((1 . 3) (t 24165 62863 378459 411000)) nil (24165 62946 328955 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) 3) nil (24165 62863 354750 0) 0 nil]) ((#("use mio::{Events, Poll, Interest, Token};
use mio::net::TcpStream;" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-1-face)) 10 16 (fontified t face font-lock-type-face) 16 18 (fontified t) 18 22 (fontified t face font-lock-type-face) 22 24 (fontified t) 24 32 (fontified t face font-lock-type-face) 32 34 (fontified t) 34 39 (fontified t face font-lock-type-face) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 42 (fontified t) 42 45 (fontified t face font-lock-keyword-face) 45 46 (fontified t) 46 49 (fontified t face font-lock-constant-face) 49 51 (fontified t) 51 54 (fontified t face font-lock-constant-face) 54 56 (fontified t) 56 65 (fontified t face font-lock-type-face) 65 66 (fontified t)) . 1) (undo-tree-id1443 . -66) (undo-tree-id1444 . -51) (undo-tree-id1445 . -42) (undo-tree-id1446 . -42) (undo-tree-id1447 . -42) (undo-tree-id1448 . -42) (undo-tree-id1449 . -51) (undo-tree-id1450 . -51) (undo-tree-id1451 . -51) (undo-tree-id1452 . -51) (undo-tree-id1453 . -51) (undo-tree-id1454 . -51) (undo-tree-id1455 . -51) (undo-tree-id1456 . -51) (undo-tree-id1457 . -9) (undo-tree-id1458 . -9) (undo-tree-id1459 . -9) (undo-tree-id1460 . -51) (undo-tree-id1461 . -51) (undo-tree-id1462 . -51) (undo-tree-id1463 . -51) (undo-tree-id1464 . -51) (undo-tree-id1465 . -51) (undo-tree-id1466 . -51) (undo-tree-id1467 . -66) (undo-tree-id1468 . -66) (undo-tree-id1469 . -66) (undo-tree-id1470 . -42) (undo-tree-id1471 . -66) (undo-tree-id1472 . -66) (undo-tree-id1473 . -66) (undo-tree-id1474 . -66) (undo-tree-id1475 . -66) (undo-tree-id1476 . -42) (undo-tree-id1477 . -42) (undo-tree-id1478 . -42) (undo-tree-id1479 . -42) (undo-tree-id1480 . -42)) nil (24165 62863 354837 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . -67) (undo-tree-id1481 . -1) 68) nil (24165 62863 354845 0) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . -67) (undo-tree-id1482 . -1) 68 (t 24165 62500 433675 416000)) nil (24165 62863 354850 0) 0 nil]) ((nil rear-nonsticky nil 67 . 68) (nil fontified nil 43 . 68) (43 . 68)) nil (24165 62500 411450 0) 0 nil]) ((#("use mio" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face)) . 43) (undo-tree-id1371 . -7) (undo-tree-id1372 . -7) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -3) (undo-tree-id1384 . -3) (undo-tree-id1385 . -3) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -4) (undo-tree-id1389 . -4) (undo-tree-id1390 . -4) (undo-tree-id1391 . -4) (undo-tree-id1392 . -4) (undo-tree-id1393 . -5) (undo-tree-id1394 . -5) (undo-tree-id1395 . -5) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -6) (undo-tree-id1399 . -6) (undo-tree-id1400 . -6) (undo-tree-id1401 . -6) (undo-tree-id1402 . -6) (undo-tree-id1403 . -7) (undo-tree-id1404 . -7) (undo-tree-id1405 . -4) (undo-tree-id1406 . -7) (undo-tree-id1407 . -7) (undo-tree-id1408 . -7) (undo-tree-id1409 . -7) (undo-tree-id1410 . -7) (undo-tree-id1411 . -7) (undo-tree-id1412 . -7) (undo-tree-id1413 . -7) (undo-tree-id1414 . -7) (undo-tree-id1415 . -7) (undo-tree-id1416 . -7) (undo-tree-id1417 . -7) (undo-tree-id1418 . -7)) nil (24165 62500 411536 0) 0 nil]) ((43 . 50)) nil (24165 62500 411540 0) 0 nil]) ((42 . 43) (t 24165 62491 249775 996000)) nil (24165 62500 411542 0) 0 nil]) ((nil rear-nonsticky nil 42 . 43) (nil fontified nil 1 . 43) (1 . 43)) nil (24165 62491 227758 0) 0 nil]) ((#("use mio::{Events};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 10 (fontified t face (rainbow-delimiters-depth-1-face)) 10 16 (fontified t face font-lock-type-face) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t)) . 1) (undo-tree-id1266 . -18) (undo-tree-id1267 . -9) (undo-tree-id1268 . -9) (undo-tree-id1269 . -9) (undo-tree-id1270 . -9) (undo-tree-id1271 . -9) (undo-tree-id1272 . -9) (undo-tree-id1273 . -9) (undo-tree-id1274 . -9) (undo-tree-id1275 . -9) (undo-tree-id1276 . -9) (undo-tree-id1277 . -9) (undo-tree-id1278 . -9) (undo-tree-id1279 . -9) (undo-tree-id1280 . -9) (undo-tree-id1281 . -9) (undo-tree-id1282 . -9) (undo-tree-id1283 . -9) (undo-tree-id1284 . -9) (undo-tree-id1285 . -9) (undo-tree-id1286 . -9) (undo-tree-id1287 . -9) (undo-tree-id1288 . -9) (undo-tree-id1289 . -9) (undo-tree-id1290 . -9) (undo-tree-id1291 . -9) (undo-tree-id1292 . -9) (undo-tree-id1293 . -9) (undo-tree-id1294 . -9) (undo-tree-id1295 . -9) (undo-tree-id1296 . -9) (undo-tree-id1297 . -9) (undo-tree-id1298 . -9) (undo-tree-id1299 . -9) (undo-tree-id1300 . -9) (undo-tree-id1301 . -9) (undo-tree-id1302 . -9) (undo-tree-id1303 . -9) (undo-tree-id1304 . -9) (undo-tree-id1305 . -9) (undo-tree-id1306 . -9) (undo-tree-id1307 . -9) (undo-tree-id1308 . -9) (undo-tree-id1309 . -9) (undo-tree-id1310 . -10) (undo-tree-id1311 . -16) (undo-tree-id1312 . -18) (undo-tree-id1313 . -18) (undo-tree-id1314 . -18) (undo-tree-id1315 . -18) (undo-tree-id1316 . -18) (undo-tree-id1317 . -18) (undo-tree-id1318 . -18) (undo-tree-id1319 . -18) (undo-tree-id1320 . -18) (undo-tree-id1321 . -18) (undo-tree-id1322 . -18) (undo-tree-id1323 . -18) (undo-tree-id1324 . -18) (undo-tree-id1325 . -18) (undo-tree-id1326 . -18) (undo-tree-id1327 . -18) (undo-tree-id1328 . -18) (undo-tree-id1329 . -17) (undo-tree-id1330 . -17) (undo-tree-id1331 . -16) (undo-tree-id1332 . -17) (undo-tree-id1333 . -16) (undo-tree-id1334 . -17) (undo-tree-id1335 . -16) (undo-tree-id1336 . -17) (undo-tree-id1337 . -16) (undo-tree-id1338 . -17) (undo-tree-id1339 . -16) (undo-tree-id1340 . -17) (undo-tree-id1341 . -16) (undo-tree-id1342 . -17) (undo-tree-id1343 . -9) (undo-tree-id1344 . -10) (undo-tree-id1345 . -17) (undo-tree-id1346 . -16) (undo-tree-id1347 . -16) (undo-tree-id1348 . -16) (undo-tree-id1349 . -16) (undo-tree-id1350 . -16) (undo-tree-id1351 . -15) (undo-tree-id1352 . -15) (undo-tree-id1353 . -15) (undo-tree-id1354 . -15) (undo-tree-id1355 . -15) (undo-tree-id1356 . -15) (undo-tree-id1357 . -15) (undo-tree-id1358 . -18) (undo-tree-id1359 . -15) (undo-tree-id1360 . -18) (undo-tree-id1361 . -18) (undo-tree-id1362 . -18) (undo-tree-id1363 . -18) (undo-tree-id1364 . -18) (undo-tree-id1365 . -18) (undo-tree-id1366 . -18) (undo-tree-id1367 . -18) (undo-tree-id1368 . -18) (undo-tree-id1369 . -18) (undo-tree-id1370 . -18) (t 24165 62473 536402 893000)) nil (24165 62491 227908 0) 0 nil]) ((18 . 19)) nil (24165 62473 514298 0) 0 nil]) ((11 . 17) (10 . 12) (#("{" 0 1 (fontified nil)) . -10) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (10 . 11)) nil (24165 62473 514317 0) 0 nil]) ((#("e" 0 1 (fontified t)) . -10) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (#("v" 0 1 (fontified t)) . -11) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#("e" 0 1 (fontified t)) . -12) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 13) nil (24165 62473 514410 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -13) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (#("t" 0 1 (fontified t)) . -14) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) 15) nil (24165 62473 514454 0) 0 nil]) ((apply yas--snippet-revive 10 15 #17=#s(yas--snippet nil nil nil 4 nil nil nil nil)) (apply yas--take-care-of-redo #17#) (10 . 15) (#("event" 0 5 (fontified nil)) . 10) (10 . 15) (#("event" 0 5 (fontified nil)) . -10) (undo-tree-id1081 . -5) (10 . 15) (#("ev" 0 2 (fontified t)) . -10) (undo-tree-id1082 . -2) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) 12) nil (24165 62473 514478 0) 0 nil]) ((1 . 12)) nil (24165 62473 514480 0) 0 nil]) ((#("use mio::unix::{SourceFd};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 24 (fontified t face font-lock-type-face) 24 25 (fontified t face (rainbow-delimiters-depth-1-face)) 25 26 (fontified t)) . 1) (undo-tree-id1098 . -26) (undo-tree-id1099 . -9) (undo-tree-id1100 . -9) (undo-tree-id1101 . -9) (undo-tree-id1102 . -9) (undo-tree-id1103 . -9) (undo-tree-id1104 . -9) (undo-tree-id1105 . -9) (undo-tree-id1106 . -9) (undo-tree-id1107 . -9) (undo-tree-id1108 . -9) (undo-tree-id1109 . -9) (undo-tree-id1110 . -9) (undo-tree-id1111 . -9) (undo-tree-id1112 . -9) (undo-tree-id1113 . -9) (undo-tree-id1114 . -9) (undo-tree-id1115 . -9) (undo-tree-id1116 . -9) (undo-tree-id1117 . -9) (undo-tree-id1118 . -9) (undo-tree-id1119 . -9) (undo-tree-id1120 . -9) (undo-tree-id1121 . -9) (undo-tree-id1122 . -9) (undo-tree-id1123 . -9) (undo-tree-id1124 . -9) (undo-tree-id1125 . -9) (undo-tree-id1126 . -9) (undo-tree-id1127 . -9) (undo-tree-id1128 . -9) (undo-tree-id1129 . -9) (undo-tree-id1130 . -9) (undo-tree-id1131 . -9) (undo-tree-id1132 . -9) (undo-tree-id1133 . -9) (undo-tree-id1134 . -9) (undo-tree-id1135 . -9) (undo-tree-id1136 . -9) (undo-tree-id1137 . -9) (undo-tree-id1138 . -9) (undo-tree-id1139 . -9) (undo-tree-id1140 . -9) (undo-tree-id1141 . -9) (undo-tree-id1142 . -9) (undo-tree-id1143 . -9) (undo-tree-id1144 . -9) (undo-tree-id1145 . -9) (undo-tree-id1146 . -9) (undo-tree-id1147 . -9) (undo-tree-id1148 . -9) (undo-tree-id1149 . -9) (undo-tree-id1150 . -9) (undo-tree-id1151 . -9) (undo-tree-id1152 . -9) (undo-tree-id1153 . -9) (undo-tree-id1154 . -9) (undo-tree-id1155 . -9) (undo-tree-id1156 . -9) (undo-tree-id1157 . -9) (undo-tree-id1158 . -9) (undo-tree-id1159 . -9) (undo-tree-id1160 . -9) (undo-tree-id1161 . -9) (undo-tree-id1162 . -9) (undo-tree-id1163 . -9) (undo-tree-id1164 . -9) (undo-tree-id1165 . -9) (undo-tree-id1166 . -9) (undo-tree-id1167 . -9) (undo-tree-id1168 . -9) (undo-tree-id1169 . -9) (undo-tree-id1170 . -9) (undo-tree-id1171 . -9) (undo-tree-id1172 . -9) (undo-tree-id1173 . -9) (undo-tree-id1174 . -9) (undo-tree-id1175 . -9) (undo-tree-id1176 . -9) (undo-tree-id1177 . -9) (undo-tree-id1178 . -9) (undo-tree-id1179 . -9) (undo-tree-id1180 . -9) (undo-tree-id1181 . -9) (undo-tree-id1182 . -9) (undo-tree-id1183 . -9) (undo-tree-id1184 . -9) (undo-tree-id1185 . -9) (undo-tree-id1186 . -9) (undo-tree-id1187 . -9) (undo-tree-id1188 . -9) (undo-tree-id1189 . -9) (undo-tree-id1190 . -9) (undo-tree-id1191 . -9) (undo-tree-id1192 . -9) (undo-tree-id1193 . -9) (undo-tree-id1194 . -9) (undo-tree-id1195 . -9) (undo-tree-id1196 . -9) (undo-tree-id1197 . -9) (undo-tree-id1198 . -9) (undo-tree-id1199 . -9) (undo-tree-id1200 . -9) (undo-tree-id1201 . -9) (undo-tree-id1202 . -9) (undo-tree-id1203 . -9) (undo-tree-id1204 . -9) (undo-tree-id1205 . -9) (undo-tree-id1206 . -9) (undo-tree-id1207 . -9) (undo-tree-id1208 . -9) (undo-tree-id1209 . -9) (undo-tree-id1210 . -9) (undo-tree-id1211 . -9) (undo-tree-id1212 . -9) (undo-tree-id1213 . -9) (undo-tree-id1214 . -9) (undo-tree-id1215 . -9) (undo-tree-id1216 . -9) (undo-tree-id1217 . -9) (undo-tree-id1218 . -9) (undo-tree-id1219 . -9) (undo-tree-id1220 . -15) (undo-tree-id1221 . -15) (undo-tree-id1222 . -9) (undo-tree-id1223 . -13) (undo-tree-id1224 . -26) (undo-tree-id1225 . -26) (undo-tree-id1226 . -26) (undo-tree-id1227 . -26) (undo-tree-id1228 . -26) (undo-tree-id1229 . -26) (undo-tree-id1230 . -26) (undo-tree-id1231 . -26) (undo-tree-id1232 . -26) (undo-tree-id1233 . -26) (undo-tree-id1234 . -26) (undo-tree-id1235 . -26) (undo-tree-id1236 . -26) (undo-tree-id1237 . -26) (undo-tree-id1238 . -26) (undo-tree-id1239 . -26) (undo-tree-id1240 . -26) (undo-tree-id1241 . -16) (undo-tree-id1242 . -16) (undo-tree-id1243 . -16) (undo-tree-id1244 . -9) (undo-tree-id1245 . -9) (undo-tree-id1246 . -9) (undo-tree-id1247 . -9) (undo-tree-id1248 . -9) (undo-tree-id1249 . -10) (undo-tree-id1250 . -10) (undo-tree-id1251 . -10) (undo-tree-id1252 . -10) (undo-tree-id1253 . -10) (undo-tree-id1254 . -10) (undo-tree-id1255 . -10) (undo-tree-id1256 . -26) (undo-tree-id1257 . -10) (undo-tree-id1258 . -26) (undo-tree-id1259 . -26) (undo-tree-id1260 . -26) (undo-tree-id1261 . -26) (undo-tree-id1262 . -26) (undo-tree-id1263 . -26) (undo-tree-id1264 . -26) (undo-tree-id1265 . -26) (t 24165 62425 485205 218000)) nil (24165 62473 514694 0) 0 nil]) ((26 . 27)) nil (24165 62425 463411 0) 0 nil]) ((17 . 25)) nil (24165 62425 463416 0) 0 nil]) ((16 . 18) (#("{" 0 1 (fontified nil)) . -16) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (16 . 17)) nil (24165 62425 463433 0) 0 nil]) ((14 . 16)) nil (24165 62425 463436 0) 0 nil]) ((apply yas--snippet-revive 10 14 #18=#s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #18#) (10 . 14) (#("unix" 0 4 (fontified nil)) . 10) (10 . 14) (#("unix" 0 4 (fontified nil)) . -10) (undo-tree-id802 . -4) (10 . 14) (#("un" 0 2 (fontified t)) . -10) (undo-tree-id803 . -2) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -2) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . -2) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) 12) nil (24165 62425 463474 0) 0 nil]) ((10 . 12)) nil (24165 62425 463477 0) 0 nil]) ((#("features::" 0 8 (fontified t face font-lock-constant-face) 8 10 (fontified t)) . -10) (undo-tree-id824 . -10) (undo-tree-id825 . -8) (undo-tree-id826 . -8) (undo-tree-id827 . -8) (undo-tree-id828 . -8) (undo-tree-id829 . -8) (undo-tree-id830 . -8) (undo-tree-id831 . -8) (undo-tree-id832 . -8) (undo-tree-id833 . -8) (undo-tree-id834 . -8) (undo-tree-id835 . -8) (undo-tree-id836 . -8) (undo-tree-id837 . -8) (undo-tree-id838 . -8) (undo-tree-id839 . -8) (undo-tree-id840 . -8) (undo-tree-id841 . -8) (undo-tree-id842 . -8) (undo-tree-id843 . -8) (undo-tree-id844 . -8) (undo-tree-id845 . -8) (undo-tree-id846 . -8) (undo-tree-id847 . -8) (undo-tree-id848 . -8) (undo-tree-id849 . -8) (undo-tree-id850 . -8) (undo-tree-id851 . -8) (undo-tree-id852 . -8) (undo-tree-id853 . -8) (undo-tree-id854 . -8) (undo-tree-id855 . -8) (undo-tree-id856 . -8) (undo-tree-id857 . -8) (undo-tree-id858 . -8) (undo-tree-id859 . -8) (undo-tree-id860 . -8) (undo-tree-id861 . -8) (undo-tree-id862 . -8) (undo-tree-id863 . -8) (undo-tree-id864 . -8) (undo-tree-id865 . -8) (undo-tree-id866 . -8) (undo-tree-id867 . -8) (undo-tree-id868 . -8) (undo-tree-id869 . -8) (undo-tree-id870 . -8) (undo-tree-id871 . -8) (undo-tree-id872 . -8) (undo-tree-id873 . -8) (undo-tree-id874 . -8) (undo-tree-id875 . -8) (undo-tree-id876 . -8) (undo-tree-id877 . -8) (undo-tree-id878 . -8) (undo-tree-id879 . -8) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -10) (undo-tree-id886 . -10) (undo-tree-id887 . -10) (undo-tree-id888 . -10) (undo-tree-id889 . -10) (undo-tree-id890 . -10) (undo-tree-id891 . -10) (undo-tree-id892 . -10) (undo-tree-id893 . -10) (undo-tree-id894 . -10) (undo-tree-id895 . -10) (undo-tree-id896 . -10) (undo-tree-id897 . -10) (undo-tree-id898 . -10) (undo-tree-id899 . -10) (undo-tree-id900 . -10) (undo-tree-id901 . -10) (undo-tree-id902 . -10) (undo-tree-id903 . -10) (undo-tree-id904 . -10) (undo-tree-id905 . -10) (undo-tree-id906 . -10) (undo-tree-id907 . -10) (undo-tree-id908 . -10) (undo-tree-id909 . -10) (undo-tree-id910 . -10) (undo-tree-id911 . -10) (undo-tree-id912 . -10) (undo-tree-id913 . -10) (undo-tree-id914 . -10) (undo-tree-id915 . -10) (undo-tree-id916 . -10) (undo-tree-id917 . -10) (undo-tree-id918 . -10) (undo-tree-id919 . -10) (undo-tree-id920 . -10) (undo-tree-id921 . -10) (undo-tree-id922 . -10) (undo-tree-id923 . -10) (undo-tree-id924 . -10) (undo-tree-id925 . -10) (undo-tree-id926 . -10) (undo-tree-id927 . -10) 20) nil (24165 62425 463615 0) 0 nil]) ((#("tcp;" 0 4 (fontified t)) . -20) (undo-tree-id928 . -4) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -2) (undo-tree-id937 . -2) (undo-tree-id938 . -2) (undo-tree-id939 . -2) (undo-tree-id940 . -2) (undo-tree-id941 . -3) (undo-tree-id942 . -3) (undo-tree-id943 . -3) (undo-tree-id944 . -3) (undo-tree-id945 . -3) (undo-tree-id946 . -3) (undo-tree-id947 . -3) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) 24) nil (24165 62425 463665 0) 0 nil]) ((18 . 24)) nil (24165 62425 463667 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -18) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) 19 (t 24165 62380 162273 757000)) nil (24165 62425 463696 0) 0 nil]) ((18 . 19)) nil (24165 62380 140892 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -18) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#(":" 0 1 (fontified t)) . -19) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) 20) nil (24165 62380 140934 0) 0 nil]) ((18 . 20)) nil (24165 62380 140938 0) 0 nil]) ((apply yas--snippet-revive 10 18 #19=#s(yas--snippet nil nil nil 2 nil nil nil nil)) (apply yas--take-care-of-redo #19#) (10 . 18) (#("features" 0 8 (fontified nil)) . 10) (10 . 18) (#("features" 0 8 (fontified nil)) . -10) (undo-tree-id775 . -8) (10 . 18) (#("fea" 0 3 (fontified t)) . -10) (undo-tree-id776 . -3) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -2) (undo-tree-id785 . -2) (undo-tree-id786 . -2) (undo-tree-id787 . -2) (undo-tree-id788 . -2) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -3) (undo-tree-id792 . -3) (undo-tree-id793 . -3) (undo-tree-id794 . -3) (undo-tree-id795 . -3) (undo-tree-id796 . -3) 13) nil (24165 62380 140967 0) 0 nil]) ((1 . 13)) nil (24165 62380 140969 0) 0 nil]) ((#("    let socket = mio::net::UdpSocket::bind();" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-variable-name-face) 14 17 (fontified t) 17 20 (fontified t face font-lock-constant-face) 20 22 (fontified t) 22 25 (fontified t face font-lock-constant-face) 25 27 (fontified t) 27 36 (fontified t face font-lock-type-face) 36 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-2-face)) 43 44 (fontified t face (rainbow-delimiters-depth-2-face)) 44 45 (fontified t)) . 15) (undo-tree-id797 . -22) (undo-tree-id798 . -25) (undo-tree-id799 . -45)) nil (24165 62380 140974 0) 0 nil]) ((1 . 3) (t 24165 62264 117296 814000)) nil (24165 62380 140975 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) 3) nil (24165 62264 95788 0) 0 nil]) ((#("extern crate mio;
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 17 (fontified t) 17 18 (fontified t)) . 1) (undo-tree-id737 . -18) (undo-tree-id738 . -18) (undo-tree-id739 . -18) (undo-tree-id740 . -17) (undo-tree-id741 . -18) (undo-tree-id742 . -18) (undo-tree-id743 . -18) (undo-tree-id744 . -18) (undo-tree-id745 . -18) (undo-tree-id746 . -18) (undo-tree-id747 . -18) (undo-tree-id748 . -18) (undo-tree-id749 . -18) (undo-tree-id750 . -18) (undo-tree-id751 . -18) (undo-tree-id752 . -18) (t 24165 62254 356244 79000)) nil (24165 62264 95815 0) 0 nil] [nil nil ((1 . 2) (t 24165 62254 356244 79000)) ((#("\\" 0 1 (fontified t)) . 1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1)) (24165 62260 408962 0) 0 nil]) ((#("
use mio::{TryRead, TryWrite};
use mio::tcp::*;
use mio::util::Slab;
use bytes::{Buf, Take};
use std::mem;
use std::io::Cursor;" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-constant-face) 8 10 (fontified t) 10 11 (fontified t face (rainbow-delimiters-depth-1-face)) 11 18 (fontified t face font-lock-type-face) 18 20 (fontified t) 20 28 (fontified t face font-lock-type-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 31 (fontified t) 31 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 38 (fontified t face font-lock-constant-face) 38 40 (fontified t) 40 43 (fontified t face font-lock-constant-face) 43 48 (fontified t) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 55 (fontified t face font-lock-constant-face) 55 57 (fontified t) 57 61 (fontified t face font-lock-constant-face) 61 63 (fontified t) 63 67 (fontified t face font-lock-type-face) 67 69 (fontified t) 69 72 (fontified t face font-lock-keyword-face) 72 73 (fontified t) 73 78 (fontified t face font-lock-constant-face) 78 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-1-face)) 81 84 (fontified t face font-lock-type-face) 84 86 (fontified t) 86 90 (fontified t face font-lock-type-face) 90 91 (fontified t face (rainbow-delimiters-depth-1-face)) 91 93 (fontified t) 93 96 (fontified t face font-lock-keyword-face) 96 97 (fontified t) 97 100 (fontified t face font-lock-constant-face) 100 107 (fontified t) 107 110 (fontified t face font-lock-keyword-face) 110 111 (fontified t) 111 114 (fontified t face font-lock-constant-face) 114 116 (fontified t) 116 118 (fontified t face font-lock-constant-face) 118 120 (fontified t) 120 126 (fontified t face font-lock-type-face) 126 127 (rear-nonsticky t fontified t)) . 19) (undo-tree-id586 . -127) (undo-tree-id587 . -107) (undo-tree-id588 . -107) (undo-tree-id589 . -93) (undo-tree-id590 . -93) (undo-tree-id591 . -69) (undo-tree-id592 . -69) (undo-tree-id593 . -48) (undo-tree-id594 . -48) (undo-tree-id595 . -31) (undo-tree-id596 . -31) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -11) (undo-tree-id600 . -18) (undo-tree-id601 . -20) (undo-tree-id602 . -28) (undo-tree-id603 . -40) (undo-tree-id604 . -43) (undo-tree-id605 . -57) (undo-tree-id606 . -61) (undo-tree-id607 . -73) (undo-tree-id608 . -78) (undo-tree-id609 . -97) (undo-tree-id610 . -100) (undo-tree-id611 . -111) (undo-tree-id612 . -114) (undo-tree-id613 . -18) (undo-tree-id614 . -18) (undo-tree-id615 . -18) (undo-tree-id616 . -47) (undo-tree-id617 . -47) (undo-tree-id618 . -47) (undo-tree-id619 . -47) (undo-tree-id620 . -47) (undo-tree-id621 . -18) (undo-tree-id622 . -18) (undo-tree-id623 . -18) (undo-tree-id624 . -18) (undo-tree-id625 . -18) (undo-tree-id626 . -17) (undo-tree-id627 . -17) (undo-tree-id628 . -17) (undo-tree-id629 . -17) (undo-tree-id630 . -17) (undo-tree-id631 . -17) (undo-tree-id632 . -17) (undo-tree-id633 . -17) (undo-tree-id634 . -123) (undo-tree-id635 . -17) (undo-tree-id636 . -47) (undo-tree-id637 . -47) (undo-tree-id638 . -47) (undo-tree-id639 . -64) (undo-tree-id640 . -64) (undo-tree-id641 . -64) (undo-tree-id642 . -85) (undo-tree-id643 . -85) (undo-tree-id644 . -85) (undo-tree-id645 . -106) (undo-tree-id646 . -106) (undo-tree-id647 . -106) (undo-tree-id648 . -123) (undo-tree-id649 . -123) (undo-tree-id650 . -123) (undo-tree-id651 . -123) (undo-tree-id652 . -123) (undo-tree-id653 . -127) (undo-tree-id654 . -127) (undo-tree-id655 . -127) (undo-tree-id656 . -127) (undo-tree-id657 . -127) (undo-tree-id658 . -127) (undo-tree-id659 . -127) (undo-tree-id660 . -127) (undo-tree-id661 . -107) (undo-tree-id662 . -107) (undo-tree-id663 . -107) (undo-tree-id664 . -107) (undo-tree-id665 . -107) (undo-tree-id666 . -107) (undo-tree-id667 . -107) (undo-tree-id668 . -107) (undo-tree-id669 . -107) (undo-tree-id670 . -107) (undo-tree-id671 . -107) (undo-tree-id672 . -107) (undo-tree-id673 . -107) (undo-tree-id674 . -107) (undo-tree-id675 . -107) (undo-tree-id676 . -93) (undo-tree-id677 . -93) (undo-tree-id678 . -93) (undo-tree-id679 . -93) (undo-tree-id680 . -93) (undo-tree-id681 . -69) (undo-tree-id682 . -69) (undo-tree-id683 . -69) (undo-tree-id684 . -69) (undo-tree-id685 . -69) (undo-tree-id686 . -69) (undo-tree-id687 . -69) (undo-tree-id688 . -69) (undo-tree-id689 . -69) (undo-tree-id690 . -69) (undo-tree-id691 . -69) (undo-tree-id692 . -69) (undo-tree-id693 . -69) (undo-tree-id694 . -69) (undo-tree-id695 . -69) (undo-tree-id696 . -69) (undo-tree-id697 . -69) (undo-tree-id698 . -69) (undo-tree-id699 . -48) (undo-tree-id700 . -48) (undo-tree-id701 . -48) (undo-tree-id702 . -31) (undo-tree-id703 . -31) (undo-tree-id704 . -31) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (t 24165 62224 279953 700000)) nil (24165 62260 409833 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -18) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) 19) nil (24165 62224 260480 0) 0 nil]) ((#("extern crate bytes;" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t face font-lock-keyword-face) 12 19 (fontified t)) . 19) (undo-tree-id576 . -19) (undo-tree-id577 . -6) (undo-tree-id578 . -19) (undo-tree-id579 . -19) (undo-tree-id580 . -19) (undo-tree-id581 . -19) (undo-tree-id582 . -19) (undo-tree-id583 . -19) (undo-tree-id584 . -19) (undo-tree-id585 . -19) (t 24165 62218 439890 402000)) nil (24165 62224 260499 0) 0 nil]) ((nil rear-nonsticky nil 165 . 166) (nil fontified nil 1 . 166) (1 . 166)) nil (24165 62218 419642 0) 0 nil]) ((1 . 3) (t 24165 62119 579507 976000)) nil (24165 62218 419648 0) 0 nil]) ((57 . 58) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . 57) (undo-tree-id482 . -1) (56 . 57) (55 . 57) (#("(" 0 1 (fontified nil)) . -55) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (40 . 56)) nil (24165 62119 558770 0) 0 nil]) ((38 . 40)) nil (24165 62119 558775 0) 0 nil]) ((17 . 38)) nil (24165 62119 558777 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1)) nil (24165 62119 558783 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1)) nil (24165 62119 558789 0) 0 nil]) ((#("use mio::tcp::{TcpListener, TcpStream};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-constant-face) 12 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 26 (fontified t face font-lock-type-face) 26 28 (fontified t) 28 37 (fontified t face font-lock-type-face) 37 38 (fontified t face (rainbow-delimiters-depth-1-face)) 38 39 (fontified t rear-nonsticky t)) . 1) (undo-tree-id491 . -9) (undo-tree-id492 . -9) (undo-tree-id493 . -9) (undo-tree-id494 . -9) (undo-tree-id495 . -9) (undo-tree-id496 . -9) (undo-tree-id497 . -9) (undo-tree-id498 . -9) (undo-tree-id499 . -9) (undo-tree-id500 . -9) (undo-tree-id501 . -9) (undo-tree-id502 . -9) (undo-tree-id503 . -9) (undo-tree-id504 . -9) (undo-tree-id505 . -9) (undo-tree-id506 . -9) (undo-tree-id507 . -9) (undo-tree-id508 . -9) (undo-tree-id509 . -9) (undo-tree-id510 . -9) (undo-tree-id511 . -9) (undo-tree-id512 . -9) (undo-tree-id513 . -9) (undo-tree-id514 . -9) (undo-tree-id515 . -9) (undo-tree-id516 . -9) (undo-tree-id517 . -9) (undo-tree-id518 . -9) (undo-tree-id519 . -9) (undo-tree-id520 . -9) (undo-tree-id521 . -9) (undo-tree-id522 . -9) (undo-tree-id523 . -9) (undo-tree-id524 . -9) (undo-tree-id525 . -9) (undo-tree-id526 . -9) (undo-tree-id527 . -12) (undo-tree-id528 . -12) (undo-tree-id529 . -12) (undo-tree-id530 . -12) (undo-tree-id531 . -12) (undo-tree-id532 . -12) (undo-tree-id533 . -12) (undo-tree-id534 . -11) (undo-tree-id535 . -11) (undo-tree-id536 . -11) (undo-tree-id537 . -11) (undo-tree-id538 . -11) (undo-tree-id539 . -11) (undo-tree-id540 . -11) (undo-tree-id541 . -11) (undo-tree-id542 . -11) (undo-tree-id543 . -11) (undo-tree-id544 . -11) (undo-tree-id545 . -11) (undo-tree-id546 . -11) (undo-tree-id547 . -11) (undo-tree-id548 . -11) (undo-tree-id549 . -11) (undo-tree-id550 . -11) (undo-tree-id551 . -11) (undo-tree-id552 . -11) (undo-tree-id553 . -39) (t 24165 61980 394189 674000)) nil (24165 62119 558870 0) 0 nil]) ((10 . 13)) nil (24165 61980 382923 0) 0 nil]) ((#("net" 0 3 (fontified t face font-lock-constant-face)) . -10) (undo-tree-id444 . -1) (undo-tree-id445 . -3) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -3) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -3) (undo-tree-id476 . -1) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) 13 (t 24165 61949 35665 728000)) nil (24165 61980 382991 0) 0 nil]) ((nil rear-nonsticky nil 39 . 40) (nil fontified nil 1 . 40) (1 . 40)) nil (24165 61949 15113 0) 0 nil]) ((#("use mio::tcp::{TcpListener};" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 12 (fontified t face font-lock-constant-face) 12 14 (fontified t) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 26 (fontified t face font-lock-type-face) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t)) . 1) (undo-tree-id377 . -28) (undo-tree-id378 . -12) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . -4) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -9) (undo-tree-id391 . -9) (undo-tree-id392 . -9) (undo-tree-id393 . -9) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -21) (undo-tree-id397 . -21) (undo-tree-id398 . -21) (undo-tree-id399 . -21) (undo-tree-id400 . -21) (undo-tree-id401 . -21) (undo-tree-id402 . -21) (undo-tree-id403 . -21) (undo-tree-id404 . -21) (undo-tree-id405 . -21) (undo-tree-id406 . -21) (undo-tree-id407 . -21) (undo-tree-id408 . -21) (undo-tree-id409 . -21) (undo-tree-id410 . -21) (undo-tree-id411 . -21) (undo-tree-id412 . -21) (undo-tree-id413 . -21) (undo-tree-id414 . -21) (undo-tree-id415 . -21) (undo-tree-id416 . -21) (undo-tree-id417 . -21) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (undo-tree-id421 . -21) (undo-tree-id422 . -21) (undo-tree-id423 . -21) (undo-tree-id424 . -21) (undo-tree-id425 . -21) (undo-tree-id426 . -21) (undo-tree-id427 . -21) (undo-tree-id428 . -21) (undo-tree-id429 . -21) (undo-tree-id430 . -21) (undo-tree-id431 . -21) (undo-tree-id432 . -21) (undo-tree-id433 . -9) (undo-tree-id434 . -12) (undo-tree-id435 . -28) (undo-tree-id436 . -28) (undo-tree-id437 . -28) (undo-tree-id438 . -28) (undo-tree-id439 . -28) (undo-tree-id440 . -28) (undo-tree-id441 . -28) (undo-tree-id442 . -28) (undo-tree-id443 . -28) (t 24165 61939 196834 463000)) nil (24165 61949 15233 0) 0 nil]) ((28 . 29)) nil (24165 61939 175474 0) 0 nil]) ((22 . 27)) nil (24165 61939 175479 0) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-type-face)) . -22) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -23) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -24) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -25) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) 26) nil (24165 61939 175604 0) 0 nil]) ((16 . 26) (15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (15 . 16)) nil (24165 61939 175613 0) 0 nil]) ((10 . 15)) nil (24165 61939 175614 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -10) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) 11) nil (24165 61939 175626 0) 0 nil]) ((5 . 11)) nil (24165 61939 175628 0) 0 nil]) ((#("std::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -5) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -5) (undo-tree-id367 . -5) (undo-tree-id368 . -5) (undo-tree-id369 . -5) (undo-tree-id370 . -5) (undo-tree-id371 . -5) (undo-tree-id372 . -5) 10) nil (24165 61939 175640 0) 0 nil]) ((#("net;" 0 4 (fontified t)) . -10) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) 14 (t 24165 61673 721441 5000)) nil (24165 61939 175646 0) 0 nil]) ((13 . 14)) nil (24165 61673 701769 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -13) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#(":" 0 1 (fontified t)) . -14) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) 15) nil (24165 61673 701866 0) 0 nil]) ((#("UdpSocket;" 0 9 (fontified t face font-lock-type-face) 9 10 (fontified t)) . -15) (undo-tree-id252 . -10) (undo-tree-id253 . -10) (undo-tree-id254 . -10) (undo-tree-id255 . -10) (undo-tree-id256 . -10) (undo-tree-id257 . -10) (undo-tree-id258 . -10) (undo-tree-id259 . -10) (undo-tree-id260 . -10) 25 (t 24165 61667 543353 959000)) nil (24165 61673 701881 0) 0 nil]) ((24 . 25)) nil (24165 61667 523732 0) 0 nil]) ((apply yas--snippet-revive 15 24 #20=#s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #20#) (15 . 24) (#("UdpSocket" 0 9 (fontified nil)) . 15) (15 . 24) (#("UdpSocket" 0 9 (fontified nil)) . -15) (undo-tree-id63 . -9) (15 . 24) (#("Ud" 0 2 (fontified t face font-lock-type-face)) . -15) (undo-tree-id64 . -2) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) 17) nil (24165 61667 523779 0) 0 nil]) ((13 . 17)) nil (24165 61667 523783 0) 0 nil]) ((apply yas--snippet-revive 10 13 #21=#s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #21#) (10 . 13) (#("net" 0 3 (fontified nil)) . 10) (10 . 13) (#("net" 0 3 (fontified nil)) . -10) (undo-tree-id80 . -3) (10 . 13) (#("n" 0 1 (fontified t)) . -10) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 11) nil (24165 61667 523805 0) 0 nil]) ((10 . 11)) nil (24165 61667 523807 0) 0 nil]) ((#("U" 0 1 (fontified t face font-lock-type-face)) . -10) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("d" 0 1 (fontified t face font-lock-type-face)) . -11) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) 12) nil (24165 61667 523843 0) 0 nil]) ((10 . 12)) nil (24165 61667 523845 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -10) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("o" 0 1 (fontified t)) . -11) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 12) nil (24165 61667 523884 0) 0 nil]) ((10 . 12)) nil (24165 61667 523887 0) 0 nil]) ((#("u" 0 1 (fontified t)) . -10) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("d" 0 1 (fontified t)) . -11) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) 12) nil (24165 61667 523921 0) 0 nil]) ((1 . 12)) nil (24165 61667 523924 0) 0 nil]) ((1 . 3) (t 24165 61589 361501 898000)) nil (24165 61667 523925 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 3) nil (24165 61589 341481 0) 0 nil]) ((#("use mio::" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t)) . 1) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -8) (undo-tree-id40 . -8) (undo-tree-id41 . -8) (undo-tree-id42 . -8) (undo-tree-id43 . -9) (undo-tree-id44 . -9) (undo-tree-id45 . -9) (undo-tree-id46 . -9) (undo-tree-id47 . -9) (undo-tree-id48 . -9) (undo-tree-id49 . -9) (undo-tree-id50 . -9) (undo-tree-id51 . -9) (undo-tree-id52 . -9)) nil (24165 61589 341536 0) 0 nil]) ((5 . 10)) nil (24165 61589 341540 0) 0 nil]) ((#("mio::" 0 3 (fontified t face font-lock-constant-face) 3 5 (fontified t)) . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) 10) nil (24165 61589 341550 0) 0 nil]) ((#("net;" 0 4 (fontified t)) . -10) (undo-tree-id60 . -4) (undo-tree-id61 . -4) (undo-tree-id62 . -4) 14 (t 24165 61501 667907 963000)) nil (24165 61589 341555 0) 0 nil]) ((1 . 14)) nil (24165 61501 648950 0) 0 nil]) ((1 . 3) (t 24165 61183 762806 740000)) nil (24165 61501 648955 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) 3) nil (24165 61183 744305 0) 0 nil]) ((#("use " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1) (undo-tree-id4517 . -4) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -2) (undo-tree-id4531 . -2) (undo-tree-id4532 . -2) (undo-tree-id4533 . -2) (undo-tree-id4534 . -2) (undo-tree-id4535 . -2) (undo-tree-id4536 . -2) (undo-tree-id4537 . -3) (undo-tree-id4538 . -3) (undo-tree-id4539 . -3) (undo-tree-id4540 . -3) (undo-tree-id4541 . -3) (undo-tree-id4542 . -3) (undo-tree-id4543 . -3) (undo-tree-id4544 . -4) (undo-tree-id4545 . -4) (undo-tree-id4546 . -4) (undo-tree-id4547 . -4) (undo-tree-id4548 . -4) (undo-tree-id4549 . -4) (undo-tree-id4550 . -4) (undo-tree-id4551 . -4) (undo-tree-id4552 . -4) (undo-tree-id4553 . -4) (undo-tree-id4554 . -4) (undo-tree-id4555 . -4) (undo-tree-id4556 . -4) (undo-tree-id4557 . -4) (undo-tree-id4558 . -4) (undo-tree-id4559 . -4) (undo-tree-id4560 . -4) (undo-tree-id4561 . -4) (undo-tree-id4562 . -4) (undo-tree-id4563 . -4) (undo-tree-id4564 . -4) (undo-tree-id4565 . -4) (undo-tree-id4566 . -4) (undo-tree-id4567 . -4) (undo-tree-id4568 . -4) (undo-tree-id4569 . -4) (undo-tree-id4570 . -4) (undo-tree-id4571 . -4) (undo-tree-id4572 . -4) (undo-tree-id4573 . -4) (undo-tree-id4574 . -4) (undo-tree-id4575 . -4) (undo-tree-id4576 . -4) (undo-tree-id4577 . -4) (undo-tree-id4578 . -4) (undo-tree-id4579 . -4) 5) nil (24165 61183 744386 0) 0 nil]) ((#("mio" 0 3 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id4580 . -3) (undo-tree-id4581 . -1) (undo-tree-id4582 . -1) (undo-tree-id4583 . -1) (undo-tree-id4584 . -1) (undo-tree-id4585 . -1) (undo-tree-id4586 . -1) (undo-tree-id4587 . -1) (undo-tree-id4588 . -1) (undo-tree-id4589 . -1) (undo-tree-id4590 . -1) (undo-tree-id4591 . -1) (undo-tree-id4592 . -1) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) (undo-tree-id4595 . -2) (undo-tree-id4596 . -2) (undo-tree-id4597 . -2) (undo-tree-id4598 . -2) (undo-tree-id4599 . -2) (undo-tree-id4600 . -3) (undo-tree-id4601 . -3) (undo-tree-id4602 . -3) (undo-tree-id4603 . -3) (undo-tree-id4604 . -3) (undo-tree-id4605 . -3) (undo-tree-id4606 . -3) (undo-tree-id4607 . -3) 8) nil (24165 61183 744420 0) 0 nil]) ((1 . 8) (t 24165 61174 763766 833000)) nil (24165 61183 744422 0) 0 nil]) ((#("use mio::un" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 11 (fontified t)) . 1) (undo-tree-id4248 . -11) (undo-tree-id4249 . -4) (undo-tree-id4250 . -4) (undo-tree-id4251 . -4) (undo-tree-id4252 . -4) (undo-tree-id4253 . -4) (undo-tree-id4254 . -4) (undo-tree-id4255 . -4) (undo-tree-id4256 . -4) (undo-tree-id4257 . -4) (undo-tree-id4258 . -4) (undo-tree-id4259 . -4) (undo-tree-id4260 . -4) (undo-tree-id4261 . -4) (undo-tree-id4262 . -4) (undo-tree-id4263 . -4) (undo-tree-id4264 . -4) (undo-tree-id4265 . -4) (undo-tree-id4266 . -4) (undo-tree-id4267 . -4) (undo-tree-id4268 . -4) (undo-tree-id4269 . -4) (undo-tree-id4270 . -4) (undo-tree-id4271 . -4) (undo-tree-id4272 . -4) (undo-tree-id4273 . -4) (undo-tree-id4274 . -4) (undo-tree-id4275 . -4) (undo-tree-id4276 . -4) (undo-tree-id4277 . -4) (undo-tree-id4278 . -4) (undo-tree-id4279 . -4) (undo-tree-id4280 . -4) (undo-tree-id4281 . -4) (undo-tree-id4282 . -4) (undo-tree-id4283 . -4) (undo-tree-id4284 . -4) (undo-tree-id4285 . -4) (undo-tree-id4286 . -4) (undo-tree-id4287 . -4) (undo-tree-id4288 . -4) (undo-tree-id4289 . -4) (undo-tree-id4290 . -4) (undo-tree-id4291 . -4) (undo-tree-id4292 . -4) (undo-tree-id4293 . -4) (undo-tree-id4294 . -4) (undo-tree-id4295 . -4) (undo-tree-id4296 . -4) (undo-tree-id4297 . -4) (undo-tree-id4298 . -4) (undo-tree-id4299 . -4) (undo-tree-id4300 . -4) (undo-tree-id4301 . -4) (undo-tree-id4302 . -4) (undo-tree-id4303 . -4) (undo-tree-id4304 . -4) (undo-tree-id4305 . -4) (undo-tree-id4306 . -4) (undo-tree-id4307 . -4) (undo-tree-id4308 . -4) (undo-tree-id4309 . -4) (undo-tree-id4310 . -4) (undo-tree-id4311 . -4) (undo-tree-id4312 . -4) (undo-tree-id4313 . -4) (undo-tree-id4314 . -5) (undo-tree-id4315 . -5) (undo-tree-id4316 . -5) (undo-tree-id4317 . -5) (undo-tree-id4318 . -5) (undo-tree-id4319 . -5) (undo-tree-id4320 . -5) (undo-tree-id4321 . -5) (undo-tree-id4322 . -5) (undo-tree-id4323 . -5) (undo-tree-id4324 . -5) (undo-tree-id4325 . -5) (undo-tree-id4326 . -6) (undo-tree-id4327 . -6) (undo-tree-id4328 . -6) (undo-tree-id4329 . -6) (undo-tree-id4330 . -6) (undo-tree-id4331 . -6) (undo-tree-id4332 . -6) (undo-tree-id4333 . -7) (undo-tree-id4334 . -7) (undo-tree-id4335 . -7) (undo-tree-id4336 . -7) (undo-tree-id4337 . -7) (undo-tree-id4338 . -7) (undo-tree-id4339 . -7) (undo-tree-id4340 . -8) (undo-tree-id4341 . -8) (undo-tree-id4342 . -8) (undo-tree-id4343 . -8) (undo-tree-id4344 . -8) (undo-tree-id4345 . -9) (undo-tree-id4346 . -9) (undo-tree-id4347 . -9) (undo-tree-id4348 . -9) (undo-tree-id4349 . -9) (undo-tree-id4350 . -9) (undo-tree-id4351 . -9) (undo-tree-id4352 . -9) (undo-tree-id4353 . -9) (undo-tree-id4354 . -9) (undo-tree-id4355 . -9) (undo-tree-id4356 . -9) (undo-tree-id4357 . -9) (undo-tree-id4358 . -9) (undo-tree-id4359 . -9) (undo-tree-id4360 . -9) (undo-tree-id4361 . -9) (undo-tree-id4362 . -10) (undo-tree-id4363 . -10) (undo-tree-id4364 . -10) (undo-tree-id4365 . -10) (undo-tree-id4366 . -10) (undo-tree-id4367 . -10) (undo-tree-id4368 . -10) (undo-tree-id4369 . -11) (undo-tree-id4370 . -11) (undo-tree-id4371 . -9) (undo-tree-id4372 . -11) (undo-tree-id4373 . -11) (undo-tree-id4374 . -11) (undo-tree-id4375 . -11) (undo-tree-id4376 . -11) (undo-tree-id4377 . -11) (undo-tree-id4378 . -11) (undo-tree-id4379 . -11) (undo-tree-id4380 . -11) (undo-tree-id4381 . -11) (undo-tree-id4382 . -11)) nil (24165 61174 745472 0) 0 nil]) ((10 . 12)) nil (24165 61174 745481 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -10) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) 11) nil (24165 61174 745493 0) 0 nil]) ((5 . 11)) nil (24165 61174 745495 0) 0 nil]) ((#("mio::" 0 3 (face font-lock-constant-face fontified t) 3 4 (fontified t) 4 5 (fontified t)) . -5) (undo-tree-id4392 . -5) (undo-tree-id4393 . -5) (undo-tree-id4394 . -5) (undo-tree-id4395 . -5) (undo-tree-id4396 . -5) (undo-tree-id4397 . -5) (undo-tree-id4398 . -5) (undo-tree-id4399 . -5) (undo-tree-id4400 . -5) (undo-tree-id4401 . -5) (undo-tree-id4402 . -5) (undo-tree-id4403 . -5) (undo-tree-id4404 . -5) (undo-tree-id4405 . -5) (undo-tree-id4406 . -5) (undo-tree-id4407 . -5) (undo-tree-id4408 . -5) (undo-tree-id4409 . -5) (undo-tree-id4410 . -5) (undo-tree-id4411 . -5) (undo-tree-id4412 . -5) (undo-tree-id4413 . -5) (undo-tree-id4414 . -5) (undo-tree-id4415 . -5) (undo-tree-id4416 . -4) (undo-tree-id4417 . -4) (undo-tree-id4418 . -4) (undo-tree-id4419 . -4) (undo-tree-id4420 . -4) (undo-tree-id4421 . -3) (undo-tree-id4422 . -3) (undo-tree-id4423 . -3) (undo-tree-id4424 . -3) (undo-tree-id4425 . -3) (undo-tree-id4426 . -3) (undo-tree-id4427 . -3) (undo-tree-id4428 . -3) (undo-tree-id4429 . -3) (undo-tree-id4430 . -3) (undo-tree-id4431 . -3) (undo-tree-id4432 . -3) (undo-tree-id4433 . -3) (undo-tree-id4434 . -3) (undo-tree-id4435 . -3) (undo-tree-id4436 . -3) (undo-tree-id4437 . -3) (undo-tree-id4438 . -5) (undo-tree-id4439 . -5) (undo-tree-id4440 . -5) (undo-tree-id4441 . -5) (undo-tree-id4442 . -5) (undo-tree-id4443 . -5) (undo-tree-id4444 . -5) (undo-tree-id4445 . -5) (undo-tree-id4446 . -5) (undo-tree-id4447 . -5) (undo-tree-id4448 . -5) (undo-tree-id4449 . -5) (undo-tree-id4450 . -5) (undo-tree-id4451 . -5) (undo-tree-id4452 . -5) 10) nil (24165 61174 745561 0) 0 nil]) ((#("tcp::*;" 0 3 (face font-lock-constant-face fontified t) 3 7 (fontified t)) . -10) (undo-tree-id4453 . -2) (undo-tree-id4454 . -2) (undo-tree-id4455 . -2) (undo-tree-id4456 . -2) (undo-tree-id4457 . -2) (undo-tree-id4458 . -2) (undo-tree-id4459 . -2) (undo-tree-id4460 . -7) (undo-tree-id4461 . -2) (undo-tree-id4462 . -2) (undo-tree-id4463 . -2) (undo-tree-id4464 . -2) (undo-tree-id4465 . -2) (undo-tree-id4466 . -2) (undo-tree-id4467 . -2) (undo-tree-id4468 . -2) (undo-tree-id4469 . -7) (undo-tree-id4470 . -7) (undo-tree-id4471 . -7) (undo-tree-id4472 . -7) (undo-tree-id4473 . -7) (undo-tree-id4474 . -7) (undo-tree-id4475 . -7) (undo-tree-id4476 . -7) 17) nil (24165 61174 745591 0) 0 nil] [nil ([nil ([nil nil ((8 . 9)) ((#(";" 0 1 (fontified t)) . 8) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (t 24165 61157 251044 342000)) (24165 61157 231676 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -8) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (#(":" 0 1 (fontified t)) . -9) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) 10) ((8 . 10)) (24165 61164 2565 0) 0 nil]) ((#("tcp::*;" 0 3 (face font-lock-constant-face fontified t) 3 7 (fontified t)) . -10) (undo-tree-id4217 . -2) (undo-tree-id4218 . -2) (undo-tree-id4219 . -2) (undo-tree-id4220 . -2) (undo-tree-id4221 . -2) (undo-tree-id4222 . -2) (undo-tree-id4223 . -2) (undo-tree-id4224 . -7) (undo-tree-id4225 . -2) (undo-tree-id4226 . -2) (undo-tree-id4227 . -2) (undo-tree-id4228 . -2) (undo-tree-id4229 . -2) (undo-tree-id4230 . -2) (undo-tree-id4231 . -2) (undo-tree-id4232 . -2) (undo-tree-id4233 . -7) (undo-tree-id4234 . -7) (undo-tree-id4235 . -7) 17 (t 24165 60936 206170 289000)) ((10 . 17)) (24165 61164 442242 0) 0 nil]) ((10 . 17)) nil (24165 61164 889985 0) 0 nil]) ((#("*" 0 1 (fontified t)) . -10) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (#(";" 0 1 (fontified t)) . -11) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) 12) nil (24165 60936 188119 0) 0 nil]) ((#("TcpListener" 0 11 (face font-lock-type-face fontified t)) . -30) (undo-tree-id4074 . -11) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -2) (undo-tree-id4088 . -2) (undo-tree-id4089 . -2) (undo-tree-id4090 . -2) (undo-tree-id4091 . -2) (undo-tree-id4092 . -2) (undo-tree-id4093 . -2) (undo-tree-id4094 . -3) (undo-tree-id4095 . -3) (undo-tree-id4096 . -3) (undo-tree-id4097 . -3) (undo-tree-id4098 . -3) (undo-tree-id4099 . -3) (undo-tree-id4100 . -3) (undo-tree-id4101 . -4) (undo-tree-id4102 . -4) (undo-tree-id4103 . -4) (undo-tree-id4104 . -4) (undo-tree-id4105 . -4) (undo-tree-id4106 . -5) (undo-tree-id4107 . -5) (undo-tree-id4108 . -5) (undo-tree-id4109 . -5) (undo-tree-id4110 . -5) (undo-tree-id4111 . -5) (undo-tree-id4112 . -5) (undo-tree-id4113 . -5) (undo-tree-id4114 . -5) (undo-tree-id4115 . -6) (undo-tree-id4116 . -6) (undo-tree-id4117 . -6) (undo-tree-id4118 . -6) (undo-tree-id4119 . -6) (undo-tree-id4120 . -6) (undo-tree-id4121 . -6) (undo-tree-id4122 . -7) (undo-tree-id4123 . -7) (undo-tree-id4124 . -7) (undo-tree-id4125 . -7) (undo-tree-id4126 . -7) (undo-tree-id4127 . -7) (undo-tree-id4128 . -7) (undo-tree-id4129 . -8) (undo-tree-id4130 . -8) (undo-tree-id4131 . -8) (undo-tree-id4132 . -9) (undo-tree-id4133 . -9) (undo-tree-id4134 . -9) (undo-tree-id4135 . -9) (undo-tree-id4136 . -9) (undo-tree-id4137 . -10) (undo-tree-id4138 . -10) (undo-tree-id4139 . -10) (undo-tree-id4140 . -11) (undo-tree-id4141 . -11) (undo-tree-id4142 . -11) (undo-tree-id4143 . -11) (undo-tree-id4144 . -11) (undo-tree-id4145 . -11) (undo-tree-id4146 . -11) (undo-tree-id4147 . -11) (undo-tree-id4148 . -11) (undo-tree-id4149 . -11) (undo-tree-id4150 . -10) (undo-tree-id4151 . -10) (undo-tree-id4152 . -10) (undo-tree-id4153 . -10) (undo-tree-id4154 . -10) (undo-tree-id4155 . -10) (undo-tree-id4156 . -10) (undo-tree-id4157 . -10) (undo-tree-id4158 . -10) (undo-tree-id4159 . -11) (undo-tree-id4160 . -11) (undo-tree-id4161 . -11) (undo-tree-id4162 . -11) (undo-tree-id4163 . -11) 41) nil (24165 60936 188234 0) 0 nil]) ((30 . 41)) nil (24165 60936 188238 0) 0 nil]) ((26 . 30) (t 24165 60881 306000 257000)) nil (24165 60936 188239 0) 0 nil]) ((1 . 12)) nil (24165 60881 288240 0) 0 nil]) ((1 . 3) (t 24165 60874 355819 385000)) nil (24165 60881 288246 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . 1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (#("
" 0 1 (fontified t)) . -2) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) 3) nil (24165 60874 338186 0) 0 nil]) ((#("extern crate mio;" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 12 (face font-lock-keyword-face fontified t) 12 17 (fontified t)) . 1) (undo-tree-id3821 . -17) (undo-tree-id3822 . -17) (undo-tree-id3823 . -17) (undo-tree-id3824 . -17) (undo-tree-id3825 . -17) (undo-tree-id3826 . -17) (undo-tree-id3827 . -17) (undo-tree-id3828 . -17) (undo-tree-id3829 . -17) (undo-tree-id3830 . -17) (undo-tree-id3831 . -17) (undo-tree-id3832 . -17) (undo-tree-id3833 . -17) (undo-tree-id3834 . -17) (undo-tree-id3835 . -17) (undo-tree-id3836 . -17) (undo-tree-id3837 . -17) (undo-tree-id3838 . -17) (undo-tree-id3839 . -17) (undo-tree-id3840 . -17) (undo-tree-id3841 . -17) (undo-tree-id3842 . -17) (undo-tree-id3843 . -17) (undo-tree-id3844 . -17) (undo-tree-id3845 . -17) (undo-tree-id3846 . -17) (undo-tree-id3847 . -17) (undo-tree-id3848 . -17) (undo-tree-id3849 . -17) (undo-tree-id3850 . -17) (undo-tree-id3851 . -17) (undo-tree-id3852 . -17) (undo-tree-id3853 . -17) (undo-tree-id3854 . -17) (undo-tree-id3855 . -17) (undo-tree-id3856 . -17) (undo-tree-id3857 . -17) (undo-tree-id3858 . -17) (undo-tree-id3859 . -17) (undo-tree-id3860 . -17) (undo-tree-id3861 . -17) (undo-tree-id3862 . -17) (undo-tree-id3863 . -17) (undo-tree-id3864 . -17) (undo-tree-id3865 . -17) (undo-tree-id3866 . -17) (undo-tree-id3867 . -17) (undo-tree-id3868 . -17) (undo-tree-id3869 . -17) (undo-tree-id3870 . -17) (undo-tree-id3871 . -17) (undo-tree-id3872 . -17) (undo-tree-id3873 . -17) (undo-tree-id3874 . -17) (undo-tree-id3875 . -17) (undo-tree-id3876 . -17) (undo-tree-id3877 . -17) (undo-tree-id3878 . -17) (undo-tree-id3879 . -17) (undo-tree-id3880 . -17) (undo-tree-id3881 . -17) (undo-tree-id3882 . -17) (undo-tree-id3883 . -17) (undo-tree-id3884 . -17) (undo-tree-id3885 . -17) (undo-tree-id3886 . -17) (undo-tree-id3887 . -17) (undo-tree-id3888 . -17) (undo-tree-id3889 . -17) (undo-tree-id3890 . -17) (undo-tree-id3891 . -17) (undo-tree-id3892 . -17) (undo-tree-id3893 . -17) (undo-tree-id3894 . -17) (undo-tree-id3895 . -17) (undo-tree-id3896 . -17) (undo-tree-id3897 . -17) (undo-tree-id3898 . -17) (undo-tree-id3899 . -17) (undo-tree-id3900 . -17) (undo-tree-id3901 . -17) (undo-tree-id3902 . -17) (undo-tree-id3903 . -17) (undo-tree-id3904 . -17) (undo-tree-id3905 . -17) (undo-tree-id3906 . -17) (undo-tree-id3907 . -17) (undo-tree-id3908 . -17) (undo-tree-id3909 . -17) (undo-tree-id3910 . -17) (undo-tree-id3911 . -17) (undo-tree-id3912 . -17) (undo-tree-id3913 . -17) (undo-tree-id3914 . -17) (undo-tree-id3915 . -17) (undo-tree-id3916 . -17) (undo-tree-id3917 . -17) (undo-tree-id3918 . -17) (undo-tree-id3919 . -17) (undo-tree-id3920 . -17) (undo-tree-id3921 . -17) (undo-tree-id3922 . -17) (undo-tree-id3923 . -17) (undo-tree-id3924 . -17) (undo-tree-id3925 . -17) (undo-tree-id3926 . -17) (undo-tree-id3927 . -17) (undo-tree-id3928 . -17) (undo-tree-id3929 . -17) (undo-tree-id3930 . -17) (undo-tree-id3931 . -17) (undo-tree-id3932 . -17) (undo-tree-id3933 . -17) (undo-tree-id3934 . -17) (undo-tree-id3935 . -17) (undo-tree-id3936 . -17) (undo-tree-id3937 . -17) (undo-tree-id3938 . -17) (undo-tree-id3939 . -17) (undo-tree-id3940 . -17) (undo-tree-id3941 . -17) (undo-tree-id3942 . -17) (undo-tree-id3943 . -17) (undo-tree-id3944 . -17) (undo-tree-id3945 . -17) (undo-tree-id3946 . -17) (undo-tree-id3947 . -17) (undo-tree-id3948 . -17) (undo-tree-id3949 . -17) (undo-tree-id3950 . -17) (undo-tree-id3951 . -17) (undo-tree-id3952 . -17) (undo-tree-id3953 . -17) (undo-tree-id3954 . -17) (undo-tree-id3955 . -17) (undo-tree-id3956 . -17) (undo-tree-id3957 . -17) (undo-tree-id3958 . -17) (undo-tree-id3959 . -17) (undo-tree-id3960 . -17) (undo-tree-id3961 . -17) (undo-tree-id3962 . -17) (undo-tree-id3963 . -17) (undo-tree-id3964 . -17) (undo-tree-id3965 . -17) (undo-tree-id3966 . -17) (undo-tree-id3967 . -17) (undo-tree-id3968 . -17) (undo-tree-id3969 . -17) (undo-tree-id3970 . -17) (undo-tree-id3971 . -17) (undo-tree-id3972 . -17) (undo-tree-id3973 . -17) (undo-tree-id3974 . -17) (undo-tree-id3975 . -17) (undo-tree-id3976 . -17) (undo-tree-id3977 . -17) (undo-tree-id3978 . -17) (undo-tree-id3979 . -17) (undo-tree-id3980 . -17) (undo-tree-id3981 . -17) (undo-tree-id3982 . -17) (undo-tree-id3983 . -17) (undo-tree-id3984 . -17) (undo-tree-id3985 . -17) (undo-tree-id3986 . -17) (undo-tree-id3987 . -17) (undo-tree-id3988 . -17) (undo-tree-id3989 . -17) (undo-tree-id3990 . -17) (undo-tree-id3991 . -17) (undo-tree-id3992 . -17) (undo-tree-id3993 . -17) (undo-tree-id3994 . -17) (undo-tree-id3995 . -17) (undo-tree-id3996 . -17) (undo-tree-id3997 . -17) (undo-tree-id3998 . -17) (undo-tree-id3999 . -17) (undo-tree-id4000 . -17) (undo-tree-id4001 . -17) (undo-tree-id4002 . -17) (undo-tree-id4003 . -17) (undo-tree-id4004 . -17) (undo-tree-id4005 . -17) (undo-tree-id4006 . -17) (undo-tree-id4007 . -17) (undo-tree-id4008 . -17) (undo-tree-id4009 . -17) (undo-tree-id4010 . -17) (undo-tree-id4011 . -17) (undo-tree-id4012 . -17) (undo-tree-id4013 . -17) (undo-tree-id4014 . -17) (undo-tree-id4015 . -17) (undo-tree-id4016 . -17) (undo-tree-id4017 . -17) (undo-tree-id4018 . -17) (undo-tree-id4019 . -17) (undo-tree-id4020 . -17) (undo-tree-id4021 . -17) (undo-tree-id4022 . -17) (undo-tree-id4023 . -17) (undo-tree-id4024 . -17) (t 24165 60871 835160 85000)) nil (24165 60874 338443 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -18) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (#("
" 0 1 (fontified t)) . -19) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . 1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) 20) nil (24165 60871 816952 0) 0 nil]) ((#("use mio::unix;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 14 (fontified t)) . 20) (undo-tree-id3481 . -14) (undo-tree-id3482 . -13) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -2) (undo-tree-id3496 . -2) (undo-tree-id3497 . -2) (undo-tree-id3498 . -2) (undo-tree-id3499 . -2) (undo-tree-id3500 . -2) (undo-tree-id3501 . -2) (undo-tree-id3502 . -3) (undo-tree-id3503 . -3) (undo-tree-id3504 . -3) (undo-tree-id3505 . -3) (undo-tree-id3506 . -3) (undo-tree-id3507 . -3) (undo-tree-id3508 . -3) (undo-tree-id3509 . -4) (undo-tree-id3510 . -4) (undo-tree-id3511 . -4) (undo-tree-id3512 . -4) (undo-tree-id3513 . -4) (undo-tree-id3514 . -5) (undo-tree-id3515 . -5) (undo-tree-id3516 . -5) (undo-tree-id3517 . -5) (undo-tree-id3518 . -5) (undo-tree-id3519 . -5) (undo-tree-id3520 . -5) (undo-tree-id3521 . -5) (undo-tree-id3522 . -5) (undo-tree-id3523 . -5) (undo-tree-id3524 . -6) (undo-tree-id3525 . -6) (undo-tree-id3526 . -6) (undo-tree-id3527 . -6) (undo-tree-id3528 . -6) (undo-tree-id3529 . -6) (undo-tree-id3530 . -6) (undo-tree-id3531 . -7) (undo-tree-id3532 . -7) (undo-tree-id3533 . -7) (undo-tree-id3534 . -7) (undo-tree-id3535 . -7) (undo-tree-id3536 . -7) (undo-tree-id3537 . -7) (undo-tree-id3538 . -7) (undo-tree-id3539 . -7) (undo-tree-id3540 . -8) (undo-tree-id3541 . -8) (undo-tree-id3542 . -8) (undo-tree-id3543 . -8) (undo-tree-id3544 . -8) (undo-tree-id3545 . -9) (undo-tree-id3546 . -9) (undo-tree-id3547 . -9) (undo-tree-id3548 . -9) (undo-tree-id3549 . -9) (undo-tree-id3550 . -9) (undo-tree-id3551 . -9) (undo-tree-id3552 . -9) (undo-tree-id3553 . -9) (undo-tree-id3554 . -9) (undo-tree-id3555 . -9) (undo-tree-id3556 . -9) (undo-tree-id3557 . -9) (undo-tree-id3558 . -9) (undo-tree-id3559 . -9) (undo-tree-id3560 . -9) (undo-tree-id3561 . -9) (undo-tree-id3562 . -9) (undo-tree-id3563 . -9) (undo-tree-id3564 . -9) (undo-tree-id3565 . -9) (undo-tree-id3566 . -9) (undo-tree-id3567 . -9) (undo-tree-id3568 . -9) (undo-tree-id3569 . -9) (undo-tree-id3570 . -9) (undo-tree-id3571 . -9) (undo-tree-id3572 . -9) (undo-tree-id3573 . -9) (undo-tree-id3574 . -9) (undo-tree-id3575 . -9) (undo-tree-id3576 . -9) (undo-tree-id3577 . -9) (undo-tree-id3578 . -9) (undo-tree-id3579 . -9) (undo-tree-id3580 . -9) (undo-tree-id3581 . -9) (undo-tree-id3582 . -9) (undo-tree-id3583 . -9) (undo-tree-id3584 . -9) (undo-tree-id3585 . -9) (undo-tree-id3586 . -9) (undo-tree-id3587 . -9) (undo-tree-id3588 . -9) (undo-tree-id3589 . -9) (undo-tree-id3590 . -9) (undo-tree-id3591 . -9) (undo-tree-id3592 . -9) (undo-tree-id3593 . -9) (undo-tree-id3594 . -9) (undo-tree-id3595 . -9) (undo-tree-id3596 . -9) (undo-tree-id3597 . -9) (undo-tree-id3598 . -9) (undo-tree-id3599 . -9) (undo-tree-id3600 . -9) (undo-tree-id3601 . -9) (undo-tree-id3602 . -9) (undo-tree-id3603 . -9) (undo-tree-id3604 . -9) (undo-tree-id3605 . -9) (undo-tree-id3606 . -9) (undo-tree-id3607 . -9) (undo-tree-id3608 . -9) (undo-tree-id3609 . -9) (undo-tree-id3610 . -9) (undo-tree-id3611 . -9) (undo-tree-id3612 . -9) (undo-tree-id3613 . -9) (undo-tree-id3614 . -9) (undo-tree-id3615 . -9) (undo-tree-id3616 . -13) (undo-tree-id3617 . -13) (undo-tree-id3618 . -13) (undo-tree-id3619 . -13) (undo-tree-id3620 . -13) (undo-tree-id3621 . -13) (undo-tree-id3622 . -13) (undo-tree-id3623 . -14) (undo-tree-id3624 . -14) (undo-tree-id3625 . -4) (undo-tree-id3626 . -7) (undo-tree-id3627 . -14) (undo-tree-id3628 . -14) (undo-tree-id3629 . -14) (undo-tree-id3630 . -14) (undo-tree-id3631 . -14) (undo-tree-id3632 . -14) (undo-tree-id3633 . -14) (undo-tree-id3634 . -14)) nil (24165 60871 817154 0) 0 nil]) ((33 . 34)) nil (24165 60871 817161 0) 0 nil]) ((apply yas--snippet-revive 29 33 #22=#s(yas--snippet nil nil nil 7 nil nil nil nil)) (apply yas--take-care-of-redo #22#) (29 . 33) (#("unix" 0 4 (fontified nil)) . 29) (29 . 33) (#("unix" 0 4 (fontified nil)) . -29) (29 . 33) (#("u" 0 1 (fontified t)) . -29) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) 30) nil (24165 60871 817179 0) 0 nil]) ((29 . 30)) nil (24165 60871 817181 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -29) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (#("e" 0 1 (fontified t)) . -30) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) 31) nil (24165 60871 817263 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -31) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (#(":" 0 1 (fontified t)) . -32) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) 33) nil (24165 60871 817299 0) 0 nil]) ((20 . 33)) nil (24165 60871 817301 0) 0 nil]) ((19 . 21)) nil (24165 60871 817301 0) 0 nil]) ((#("    mio::ne" 0 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 11 (fontified t)) . 32) (undo-tree-id3760 . -4) (undo-tree-id3761 . -9) (undo-tree-id3762 . -9) (undo-tree-id3763 . -9) (undo-tree-id3764 . -9) (undo-tree-id3765 . -9) (undo-tree-id3766 . -9) (undo-tree-id3767 . -9) (undo-tree-id3768 . -9) (undo-tree-id3769 . -9) (undo-tree-id3770 . -9) (undo-tree-id3771 . -9) (undo-tree-id3772 . -9) (undo-tree-id3773 . -9) (undo-tree-id3774 . -9) (undo-tree-id3775 . -9) (undo-tree-id3776 . -9) (undo-tree-id3777 . -9) (undo-tree-id3778 . -9) (undo-tree-id3779 . -9) (undo-tree-id3780 . -9) (undo-tree-id3781 . -9) (undo-tree-id3782 . -9) (undo-tree-id3783 . -9) (undo-tree-id3784 . -9) (undo-tree-id3785 . -9) (undo-tree-id3786 . -9) (undo-tree-id3787 . -9) (undo-tree-id3788 . -9) (undo-tree-id3789 . -9) (undo-tree-id3790 . -9) (undo-tree-id3791 . -11) (undo-tree-id3792 . -11) (undo-tree-id3793 . -11) (undo-tree-id3794 . -11) (undo-tree-id3795 . -11) (t 24165 60850 177256 810000)) nil (24165 60871 817342 0) 0 nil]) ((1 . 18)) nil (24165 60850 161285 0) 0 nil]) ((1 . 3)) nil (24165 60850 161290 0) 0 nil]) ((22 . 24)) nil (24165 60850 161292 0) 0 nil]) ((#("u" 0 1 (fontified t)) . -22) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) 23) nil (24165 60850 161319 0) 0 nil]) ((22 . 23)) nil (24165 60850 161322 0) 0 nil]) ((#("event::" 0 5 (face font-lock-constant-face fontified t) 5 7 (fontified t)) . -22) (undo-tree-id3096 . -7) (undo-tree-id3097 . -7) (undo-tree-id3098 . -7) (undo-tree-id3099 . -7) (undo-tree-id3100 . -7) (undo-tree-id3101 . -7) (undo-tree-id3102 . -7) (undo-tree-id3103 . -7) (undo-tree-id3104 . -7) (undo-tree-id3105 . -7) (undo-tree-id3106 . -7) (undo-tree-id3107 . -7) (undo-tree-id3108 . -7) (undo-tree-id3109 . -7) (undo-tree-id3110 . -7) (undo-tree-id3111 . -7) (undo-tree-id3112 . -7) (undo-tree-id3113 . -7) 29) nil (24165 60850 161345 0) 0 nil]) ((#("Event;" 0 5 (face font-lock-type-face fontified t) 5 6 (fontified t)) . -29) (undo-tree-id3114 . -6) (undo-tree-id3115 . -6) (undo-tree-id3116 . -6) (undo-tree-id3117 . -6) 35 (t 24165 60817 646821 732000)) nil (24165 60850 161352 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1)) nil (24165 60817 630513 0) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1)) nil (24165 60817 630525 0) 0 nil]) ((#("use mio::event;" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 15 (fontified t)) . 1) (undo-tree-id2831 . -4) (undo-tree-id2832 . -4) (undo-tree-id2833 . -4) (undo-tree-id2834 . -4) (undo-tree-id2835 . -4) (undo-tree-id2836 . -4) (undo-tree-id2837 . -4) (undo-tree-id2838 . -4) (undo-tree-id2839 . -4) (undo-tree-id2840 . -4) (undo-tree-id2841 . -4) (undo-tree-id2842 . -4) (undo-tree-id2843 . -4) (undo-tree-id2844 . -4) (undo-tree-id2845 . -4) (undo-tree-id2846 . -4) (undo-tree-id2847 . -4) (undo-tree-id2848 . -4) (undo-tree-id2849 . -4) (undo-tree-id2850 . -4) (undo-tree-id2851 . -4) (undo-tree-id2852 . -4) (undo-tree-id2853 . -4) (undo-tree-id2854 . -4) (undo-tree-id2855 . -4) (undo-tree-id2856 . -4) (undo-tree-id2857 . -4) (undo-tree-id2858 . -4) (undo-tree-id2859 . -4) (undo-tree-id2860 . -4) (undo-tree-id2861 . -4) (undo-tree-id2862 . -4) (undo-tree-id2863 . -4) (undo-tree-id2864 . -4) (undo-tree-id2865 . -4) (undo-tree-id2866 . -4) (undo-tree-id2867 . -4) (undo-tree-id2868 . -4) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) (undo-tree-id2875 . -4) (undo-tree-id2876 . -4) (undo-tree-id2877 . -4) (undo-tree-id2878 . -4) (undo-tree-id2879 . -4) (undo-tree-id2880 . -4) (undo-tree-id2881 . -4) (undo-tree-id2882 . -4) (undo-tree-id2883 . -4) (undo-tree-id2884 . -4) (undo-tree-id2885 . -4) (undo-tree-id2886 . -4) (undo-tree-id2887 . -4) (undo-tree-id2888 . -4) (undo-tree-id2889 . -4) (undo-tree-id2890 . -4) (undo-tree-id2891 . -4) (undo-tree-id2892 . -4) (undo-tree-id2893 . -4) (undo-tree-id2894 . -4) (undo-tree-id2895 . -4) (undo-tree-id2896 . -4) (undo-tree-id2897 . -4) (undo-tree-id2898 . -4) (undo-tree-id2899 . -4) (undo-tree-id2900 . -4) (undo-tree-id2901 . -4) (undo-tree-id2902 . -4) (undo-tree-id2903 . -4) (undo-tree-id2904 . -4) (undo-tree-id2905 . -4) (undo-tree-id2906 . -4) (undo-tree-id2907 . -4) (undo-tree-id2908 . -4) (undo-tree-id2909 . -4) (undo-tree-id2910 . -4) (undo-tree-id2911 . -4) (undo-tree-id2912 . -4) (undo-tree-id2913 . -4) (undo-tree-id2914 . -4) (undo-tree-id2915 . -4) (undo-tree-id2916 . -4) (undo-tree-id2917 . -4) (undo-tree-id2918 . -4) (undo-tree-id2919 . -4) (undo-tree-id2920 . -4) (undo-tree-id2921 . -4) (undo-tree-id2922 . -4) (undo-tree-id2923 . -4) (undo-tree-id2924 . -4) (undo-tree-id2925 . -4) (undo-tree-id2926 . -4) (undo-tree-id2927 . -4) (undo-tree-id2928 . -4) (undo-tree-id2929 . -4) (undo-tree-id2930 . -4) (undo-tree-id2931 . -4) (undo-tree-id2932 . -4) (undo-tree-id2933 . -4) (undo-tree-id2934 . -4) (undo-tree-id2935 . -4) (undo-tree-id2936 . -4) (undo-tree-id2937 . -4) (undo-tree-id2938 . -4) (undo-tree-id2939 . -4) (undo-tree-id2940 . -4) (undo-tree-id2941 . -4) (undo-tree-id2942 . -4) (undo-tree-id2943 . -4) (undo-tree-id2944 . -4) (undo-tree-id2945 . -4) (undo-tree-id2946 . -4) (undo-tree-id2947 . -4) (undo-tree-id2948 . -4) (undo-tree-id2949 . -4) (undo-tree-id2950 . -4) (undo-tree-id2951 . -4) (undo-tree-id2952 . -4) (undo-tree-id2953 . -4) (undo-tree-id2954 . -4) (undo-tree-id2955 . -4) (undo-tree-id2956 . -4) (undo-tree-id2957 . -4) (undo-tree-id2958 . -4) (undo-tree-id2959 . -4) (undo-tree-id2960 . -4) (undo-tree-id2961 . -4) (undo-tree-id2962 . -4) (undo-tree-id2963 . -4) (undo-tree-id2964 . -4) (undo-tree-id2965 . -4) (undo-tree-id2966 . -4) (undo-tree-id2967 . -4) (undo-tree-id2968 . -4) (undo-tree-id2969 . -4) (undo-tree-id2970 . -4) (undo-tree-id2971 . -4) (undo-tree-id2972 . -4) (undo-tree-id2973 . -4) (undo-tree-id2974 . -4) (undo-tree-id2975 . -4) (undo-tree-id2976 . -4) (undo-tree-id2977 . -4) (undo-tree-id2978 . -4) (undo-tree-id2979 . -4) (undo-tree-id2980 . -4) (undo-tree-id2981 . -4) (undo-tree-id2982 . -4) (undo-tree-id2983 . -4) (undo-tree-id2984 . -4) (undo-tree-id2985 . -4) (undo-tree-id2986 . -4) (undo-tree-id2987 . -4) (undo-tree-id2988 . -4) (undo-tree-id2989 . -4) (undo-tree-id2990 . -4) (undo-tree-id2991 . -4) (undo-tree-id2992 . -4) (undo-tree-id2993 . -4) (undo-tree-id2994 . -4) (undo-tree-id2995 . -4) (undo-tree-id2996 . -4) (undo-tree-id2997 . -4) (undo-tree-id2998 . -4) (undo-tree-id2999 . -4) (undo-tree-id3000 . -4) (undo-tree-id3001 . -4) (undo-tree-id3002 . -4) (undo-tree-id3003 . -4) (undo-tree-id3004 . -4) (undo-tree-id3005 . -4) (undo-tree-id3006 . -4) (undo-tree-id3007 . -4) (undo-tree-id3008 . -4) (undo-tree-id3009 . -4) (undo-tree-id3010 . -4) (undo-tree-id3011 . -4) (undo-tree-id3012 . -4) (undo-tree-id3013 . -4) (undo-tree-id3014 . -4) (undo-tree-id3015 . -4) (undo-tree-id3016 . -4) (undo-tree-id3017 . -4) (undo-tree-id3018 . -4) (undo-tree-id3019 . -4) (undo-tree-id3020 . -4) (undo-tree-id3021 . -4) (undo-tree-id3022 . -4) (undo-tree-id3023 . -4) (undo-tree-id3024 . -4) (undo-tree-id3025 . -4) (undo-tree-id3026 . -9) (undo-tree-id3027 . -9) (undo-tree-id3028 . -9) (undo-tree-id3029 . -9) (undo-tree-id3030 . -9) (undo-tree-id3031 . -9) (undo-tree-id3032 . -9) (undo-tree-id3033 . -9) (undo-tree-id3034 . -9) (undo-tree-id3035 . -9) (undo-tree-id3036 . -9) (undo-tree-id3037 . -9) (undo-tree-id3038 . -9) (undo-tree-id3039 . -9) (undo-tree-id3040 . -9) (undo-tree-id3041 . -9) (undo-tree-id3042 . -9) (undo-tree-id3043 . -9) (undo-tree-id3044 . -9) (undo-tree-id3045 . -9) (undo-tree-id3046 . -9) (undo-tree-id3047 . -9) (undo-tree-id3048 . -9) (undo-tree-id3049 . -9) (undo-tree-id3050 . -9) (undo-tree-id3051 . -9) (undo-tree-id3052 . -9) (undo-tree-id3053 . -9) (undo-tree-id3054 . -9) (undo-tree-id3055 . -9) (undo-tree-id3056 . -9) (undo-tree-id3057 . -9) (undo-tree-id3058 . -9) (undo-tree-id3059 . -9) (undo-tree-id3060 . -9) (undo-tree-id3061 . -9) (undo-tree-id3062 . -9) (undo-tree-id3063 . -9) (undo-tree-id3064 . -9) (undo-tree-id3065 . -9) (undo-tree-id3066 . -9) (undo-tree-id3067 . -9) (undo-tree-id3068 . -9) (undo-tree-id3069 . -9) (undo-tree-id3070 . -9) (undo-tree-id3071 . -4) (undo-tree-id3072 . -7) (undo-tree-id3073 . -4) (undo-tree-id3074 . -4) (undo-tree-id3075 . -4) (undo-tree-id3076 . -4) (undo-tree-id3077 . -4) (undo-tree-id3078 . -4) (undo-tree-id3079 . -4) (undo-tree-id3080 . -4) (undo-tree-id3081 . -15) (t 24165 60805 783879 846000)) nil (24165 60817 630827 0) 0 nil]) ((51 . 52)) nil (24165 60805 767626 0) 0 nil]) ((apply yas--snippet-revive 46 51 #23=#s(yas--snippet nil nil nil 6 nil nil nil nil)) (apply yas--take-care-of-redo #23#) (46 . 51) (#("Event" 0 5 (fontified nil)) . 46) (46 . 51) (#("Event" 0 5 (fontified nil)) . -46) (46 . 51)) nil (24165 60805 767632 0) 0 nil]) ((44 . 46)) nil (24165 60805 767635 0) 0 nil]) ((apply yas--snippet-revive 39 44 #24=#s(yas--snippet nil nil nil 5 nil nil nil nil)) (apply yas--take-care-of-redo #24#) (39 . 44) (#("event" 0 5 (fontified nil)) . 39) (39 . 44) (#("event" 0 5 (fontified nil)) . -39) (39 . 44) (#("eve" 0 3 (fontified t)) . -39) (undo-tree-id2533 . -3) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -2) (undo-tree-id2542 . -2) (undo-tree-id2543 . -2) (undo-tree-id2544 . -2) (undo-tree-id2545 . -2) (undo-tree-id2546 . -2) (undo-tree-id2547 . -2) (undo-tree-id2548 . -3) (undo-tree-id2549 . -3) (undo-tree-id2550 . -3) (undo-tree-id2551 . -3) (undo-tree-id2552 . -3) (undo-tree-id2553 . -3) (undo-tree-id2554 . -3) (undo-tree-id2555 . -3) 42) nil (24165 60805 767680 0) 0 nil]) ((34 . 42)) nil (24165 60805 767683 0) 0 nil]) ((29 . 34)) nil (24165 60805 767683 0) 0 nil]) ((15 . 16)) nil (24165 60805 767684 0) 0 nil]) ((apply yas--snippet-revive 10 15 #25=#s(yas--snippet nil nil nil 4 nil nil nil nil)) (apply yas--take-care-of-redo #25#) (10 . 15) (#("event" 0 5 (fontified nil)) . 10) (10 . 15) (#("event" 0 5 (fontified nil)) . -10) (undo-tree-id2556 . -5) (10 . 15) (#("ev" 0 2 (fontified t)) . -10) (undo-tree-id2557 . -2) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -2) (undo-tree-id2571 . -2) (undo-tree-id2572 . -2) (undo-tree-id2573 . -2) (undo-tree-id2574 . -2) (undo-tree-id2575 . -2) (undo-tree-id2576 . -2) (undo-tree-id2577 . -2) 12) nil (24165 60805 767714 0) 0 nil]) ((10 . 12)) nil (24165 60805 767717 0) 0 nil]) ((#("tcp;" 0 4 (fontified t)) . -10) (undo-tree-id2578 . -4) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -2) (undo-tree-id2587 . -2) (undo-tree-id2588 . -2) (undo-tree-id2589 . -2) (undo-tree-id2590 . -2) (undo-tree-id2591 . -2) (undo-tree-id2592 . -2) (undo-tree-id2593 . -3) (undo-tree-id2594 . -3) (undo-tree-id2595 . -3) (undo-tree-id2596 . -3) (undo-tree-id2597 . -3) (undo-tree-id2598 . -3) (undo-tree-id2599 . -3) (undo-tree-id2600 . -4) (undo-tree-id2601 . -4) (undo-tree-id2602 . -4) (undo-tree-id2603 . -4) (undo-tree-id2604 . -4) 14) nil (24165 60805 767755 0) 0 nil]) ((5 . 14)) nil (24165 60805 767758 0) 0 nil]) ((#("mio::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -5) (undo-tree-id2605 . -5) (undo-tree-id2606 . -3) (undo-tree-id2607 . -3) (undo-tree-id2608 . -3) (undo-tree-id2609 . -3) (undo-tree-id2610 . -3) (undo-tree-id2611 . -3) (undo-tree-id2612 . -3) (undo-tree-id2613 . -3) (undo-tree-id2614 . -3) (undo-tree-id2615 . -3) (undo-tree-id2616 . -3) (undo-tree-id2617 . -3) (undo-tree-id2618 . -3) (undo-tree-id2619 . -3) (undo-tree-id2620 . -3) (undo-tree-id2621 . -3) (undo-tree-id2622 . -3) (undo-tree-id2623 . -3) (undo-tree-id2624 . -3) (undo-tree-id2625 . -3) (undo-tree-id2626 . -3) (undo-tree-id2627 . -3) (undo-tree-id2628 . -3) (undo-tree-id2629 . -3) (undo-tree-id2630 . -3) (undo-tree-id2631 . -3) (undo-tree-id2632 . -3) (undo-tree-id2633 . -3) (undo-tree-id2634 . -3) (undo-tree-id2635 . -3) (undo-tree-id2636 . -3) (undo-tree-id2637 . -3) (undo-tree-id2638 . -3) (undo-tree-id2639 . -3) (undo-tree-id2640 . -3) (undo-tree-id2641 . -3) (undo-tree-id2642 . -3) (undo-tree-id2643 . -3) (undo-tree-id2644 . -3) (undo-tree-id2645 . -3) (undo-tree-id2646 . -3) (undo-tree-id2647 . -3) (undo-tree-id2648 . -3) (undo-tree-id2649 . -3) (undo-tree-id2650 . -3) (undo-tree-id2651 . -3) (undo-tree-id2652 . -3) (undo-tree-id2653 . -3) (undo-tree-id2654 . -3) (undo-tree-id2655 . -3) (undo-tree-id2656 . -3) (undo-tree-id2657 . -3) (undo-tree-id2658 . -3) (undo-tree-id2659 . -3) (undo-tree-id2660 . -3) (undo-tree-id2661 . -3) (undo-tree-id2662 . -3) (undo-tree-id2663 . -3) (undo-tree-id2664 . -3) (undo-tree-id2665 . -3) (undo-tree-id2666 . -3) (undo-tree-id2667 . -3) (undo-tree-id2668 . -3) (undo-tree-id2669 . -3) (undo-tree-id2670 . -3) (undo-tree-id2671 . -3) (undo-tree-id2672 . -3) (undo-tree-id2673 . -3) (undo-tree-id2674 . -3) (undo-tree-id2675 . -3) (undo-tree-id2676 . -3) (undo-tree-id2677 . -3) (undo-tree-id2678 . -3) (undo-tree-id2679 . -3) (undo-tree-id2680 . -3) (undo-tree-id2681 . -3) (undo-tree-id2682 . -3) (undo-tree-id2683 . -3) (undo-tree-id2684 . -3) (undo-tree-id2685 . -3) (undo-tree-id2686 . -3) (undo-tree-id2687 . -3) (undo-tree-id2688 . -3) (undo-tree-id2689 . -3) (undo-tree-id2690 . -3) (undo-tree-id2691 . -3) (undo-tree-id2692 . -3) (undo-tree-id2693 . -3) (undo-tree-id2694 . -3) (undo-tree-id2695 . -3) (undo-tree-id2696 . -3) (undo-tree-id2697 . -3) (undo-tree-id2698 . -3) (undo-tree-id2699 . -3) (undo-tree-id2700 . -3) (undo-tree-id2701 . -3) (undo-tree-id2702 . -3) (undo-tree-id2703 . -3) (undo-tree-id2704 . -3) (undo-tree-id2705 . -3) (undo-tree-id2706 . -3) (undo-tree-id2707 . -3) (undo-tree-id2708 . -3) (undo-tree-id2709 . -3) (undo-tree-id2710 . -3) (undo-tree-id2711 . -3) (undo-tree-id2712 . -3) (undo-tree-id2713 . -3) (undo-tree-id2714 . -3) (undo-tree-id2715 . -3) (undo-tree-id2716 . -3) (undo-tree-id2717 . -5) (undo-tree-id2718 . -5) (undo-tree-id2719 . -5) (undo-tree-id2720 . -5) (undo-tree-id2721 . -5) (undo-tree-id2722 . -5) (undo-tree-id2723 . -5) (undo-tree-id2724 . -5) (undo-tree-id2725 . -5) (undo-tree-id2726 . -5) (undo-tree-id2727 . -5) (undo-tree-id2728 . -5) (undo-tree-id2729 . -5) (undo-tree-id2730 . -5) (undo-tree-id2731 . -5) (undo-tree-id2732 . -5) (undo-tree-id2733 . -5) (undo-tree-id2734 . -5) (undo-tree-id2735 . -5) (undo-tree-id2736 . -5) (undo-tree-id2737 . -5) (undo-tree-id2738 . -5) (undo-tree-id2739 . -5) (undo-tree-id2740 . -5) (undo-tree-id2741 . -5) (undo-tree-id2742 . -5) (undo-tree-id2743 . -5) (undo-tree-id2744 . -5) (undo-tree-id2745 . -5) (undo-tree-id2746 . -5) (undo-tree-id2747 . -5) (undo-tree-id2748 . -5) (undo-tree-id2749 . -5) (undo-tree-id2750 . -5) (undo-tree-id2751 . -4) (undo-tree-id2752 . -4) (undo-tree-id2753 . -4) (undo-tree-id2754 . -3) (undo-tree-id2755 . -3) (undo-tree-id2756 . -3) (undo-tree-id2757 . -3) (undo-tree-id2758 . -3) (undo-tree-id2759 . -2) (undo-tree-id2760 . -2) (undo-tree-id2761 . -2) (undo-tree-id2762 . -2) (undo-tree-id2763 . -2) (undo-tree-id2764 . -2) (undo-tree-id2765 . -2) (undo-tree-id2766 . -2) (undo-tree-id2767 . -5) (undo-tree-id2768 . -5) (undo-tree-id2769 . -5) (undo-tree-id2770 . -5) (undo-tree-id2771 . -5) (undo-tree-id2772 . -5) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -5) (undo-tree-id2782 . -5) (undo-tree-id2783 . -5) (undo-tree-id2784 . -5) (undo-tree-id2785 . -5) (undo-tree-id2786 . -5) (undo-tree-id2787 . -5) (undo-tree-id2788 . -5) (undo-tree-id2789 . -5) (undo-tree-id2790 . -5) (undo-tree-id2791 . -5) (undo-tree-id2792 . -5) (undo-tree-id2793 . -5) (undo-tree-id2794 . -5) (undo-tree-id2795 . -5) (undo-tree-id2796 . -5) (undo-tree-id2797 . -5) (undo-tree-id2798 . -5) (undo-tree-id2799 . -5) 10) nil (24165 60805 768058 0) 0 nil]) ((#("unix;" 0 5 (fontified t)) . -10) (undo-tree-id2800 . -5) (undo-tree-id2801 . -5) (undo-tree-id2802 . -5) (undo-tree-id2803 . -5) (undo-tree-id2804 . -5) (undo-tree-id2805 . -5) (undo-tree-id2806 . -5) (undo-tree-id2807 . -5) (undo-tree-id2808 . -5) (undo-tree-id2809 . -5) (undo-tree-id2810 . -5) (undo-tree-id2811 . -5) (undo-tree-id2812 . -5) (undo-tree-id2813 . -5) (undo-tree-id2814 . -5) (undo-tree-id2815 . -5) (undo-tree-id2816 . -5) (undo-tree-id2817 . -5) (undo-tree-id2818 . -5) (undo-tree-id2819 . -5) (undo-tree-id2820 . -5) (undo-tree-id2821 . -5) 15 (t 24165 60771 624405 999000)) nil (24165 60805 768092 0) 0 nil]) ((14 . 15)) nil (24165 60771 608059 0) 0 nil]) ((apply yas--snippet-revive 10 14 #26=#s(yas--snippet nil nil nil 3 nil nil nil nil)) (apply yas--take-care-of-redo #26#) (10 . 14) (#("unix" 0 4 (fontified nil)) . 10) (10 . 14) (#("unix" 0 4 (fontified nil)) . -10) (10 . 14) (#("un" 0 2 (fontified t)) . -10) (undo-tree-id2134 . -2) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -2) (undo-tree-id2143 . -2) (undo-tree-id2144 . -2) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -2) (undo-tree-id2148 . -2) (undo-tree-id2149 . -2) 12) nil (24165 60771 608095 0) 0 nil]) ((8 . 12)) nil (24165 60771 608099 0) 0 nil]) ((#(":" 0 1 (fontified t)) . -8) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (#(":" 0 1 (fontified t)) . -9) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) 10) nil (24165 60771 608354 0) 0 nil]) ((#("unix::{" 0 4 (face font-lock-constant-face fontified t) 4 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10) (undo-tree-id2371 . -7) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -6) (undo-tree-id2380 . -6) (undo-tree-id2381 . -7) (undo-tree-id2382 . -7) (undo-tree-id2383 . -7) (undo-tree-id2384 . -7) (undo-tree-id2385 . -7) (undo-tree-id2386 . -7) (undo-tree-id2387 . -7) (undo-tree-id2388 . -7) (undo-tree-id2389 . -7) (undo-tree-id2390 . -7) (undo-tree-id2391 . -7) (undo-tree-id2392 . -7) (undo-tree-id2393 . -7) (undo-tree-id2394 . -7) (undo-tree-id2395 . -7) (undo-tree-id2396 . -7) (undo-tree-id2397 . -7) (undo-tree-id2398 . -7) (undo-tree-id2399 . -7) (undo-tree-id2400 . -7) (undo-tree-id2401 . -7) (undo-tree-id2402 . -7) (undo-tree-id2403 . -7) (undo-tree-id2404 . -7) (undo-tree-id2405 . -7) (undo-tree-id2406 . -7) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -7) (undo-tree-id2410 . -7) (undo-tree-id2411 . -7) (undo-tree-id2412 . -7) (undo-tree-id2413 . -7) (undo-tree-id2414 . -7) (undo-tree-id2415 . -7) (undo-tree-id2416 . -7) (undo-tree-id2417 . -7) (undo-tree-id2418 . -7) (undo-tree-id2419 . -7) (undo-tree-id2420 . -7) (undo-tree-id2421 . -7) (undo-tree-id2422 . -7) (undo-tree-id2423 . -7) (undo-tree-id2424 . -7) (undo-tree-id2425 . -7) (undo-tree-id2426 . -7) (undo-tree-id2427 . -7) (undo-tree-id2428 . -7) (undo-tree-id2429 . -7) (undo-tree-id2430 . -7) (undo-tree-id2431 . -7) (undo-tree-id2432 . -7) (undo-tree-id2433 . -7) (undo-tree-id2434 . -7) (undo-tree-id2435 . -7) (undo-tree-id2436 . -7) (undo-tree-id2437 . -7) (undo-tree-id2438 . -7) (undo-tree-id2439 . -7) (undo-tree-id2440 . -7) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -7) (undo-tree-id2450 . -7) (undo-tree-id2451 . -7) (undo-tree-id2452 . -7) (undo-tree-id2453 . -7) (undo-tree-id2454 . -7) (undo-tree-id2455 . -7) (undo-tree-id2456 . -7) (undo-tree-id2457 . -7) (undo-tree-id2458 . -7) (undo-tree-id2459 . -7) (undo-tree-id2460 . -7) (undo-tree-id2461 . -7) (undo-tree-id2462 . -7) (undo-tree-id2463 . -7) (undo-tree-id2464 . -7) (undo-tree-id2465 . -6) (undo-tree-id2466 . -7) (undo-tree-id2467 . -6) (undo-tree-id2468 . -7) (undo-tree-id2469 . -7) (undo-tree-id2470 . -7) (undo-tree-id2471 . -7) 17) nil (24165 60771 608469 0) 0 nil]) ((#("TcpListener};" 0 11 (face font-lock-type-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . -17) (undo-tree-id2472 . -13) (undo-tree-id2473 . -5) (undo-tree-id2474 . -5) (undo-tree-id2475 . -5) (undo-tree-id2476 . -5) (undo-tree-id2477 . -5) (undo-tree-id2478 . -5) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (undo-tree-id2481 . -5) (undo-tree-id2482 . -5) (undo-tree-id2483 . -5) (undo-tree-id2484 . -5) (undo-tree-id2485 . -5) (undo-tree-id2486 . -5) (undo-tree-id2487 . -5) (undo-tree-id2488 . -7) (undo-tree-id2489 . -7) (undo-tree-id2490 . -7) (undo-tree-id2491 . -7) (undo-tree-id2492 . -7) (undo-tree-id2493 . -7) (undo-tree-id2494 . -7) (undo-tree-id2495 . -7) (undo-tree-id2496 . -7) (undo-tree-id2497 . -7) (undo-tree-id2498 . -7) (undo-tree-id2499 . -7) (undo-tree-id2500 . -7) (undo-tree-id2501 . -7) (undo-tree-id2502 . -7) (undo-tree-id2503 . -7) (undo-tree-id2504 . -7) (undo-tree-id2505 . -7) (undo-tree-id2506 . -7) (undo-tree-id2507 . -7) (undo-tree-id2508 . -7) (undo-tree-id2509 . -7) (undo-tree-id2510 . -7) (undo-tree-id2511 . -7) (undo-tree-id2512 . -7) (undo-tree-id2513 . -7) (undo-tree-id2514 . -7) (undo-tree-id2515 . -13) (undo-tree-id2516 . -13) (undo-tree-id2517 . -13) (undo-tree-id2518 . -13) (undo-tree-id2519 . -13) (undo-tree-id2520 . -13) (undo-tree-id2521 . -13) (undo-tree-id2522 . -13) (undo-tree-id2523 . -13) (undo-tree-id2524 . -13) (undo-tree-id2525 . -13) (undo-tree-id2526 . -13) (undo-tree-id2527 . -13) (undo-tree-id2528 . -13) (undo-tree-id2529 . -13) (undo-tree-id2530 . -13) (undo-tree-id2531 . -13) (undo-tree-id2532 . -13) 30 (t 24165 60754 115915 743000)) nil (24165 60771 608538 0) 0 nil]) ((29 . 30)) nil (24165 60754 100653 0) 0 nil]) ((24 . 28)) nil (24165 60754 100658 0) 0 nil]) ((#("n" 0 1 (face font-lock-type-face fontified t)) . -24) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -25) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -26) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) 27) nil (24165 60754 100739 0) 0 nil]) ((22 . 27)) nil (24165 60754 100744 0) 0 nil]) ((#("n" 0 1 (face font-lock-type-face fontified t)) . -22) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (#("s" 0 1 (face font-lock-type-face fontified t)) . -23) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) 24) nil (24165 60754 100774 0) 0 nil]) ((19 . 24)) nil (24165 60754 100776 0) 0 nil]) ((17 . 19)) nil (24165 60754 100777 0) 0 nil]) ((16 . 18) (#("{" 0 1 (fontified nil)) . -16) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (16 . 17)) nil (24165 60754 100781 0) 0 nil]) ((11 . 16)) nil (24165 60754 100782 0) 0 nil]) ((#("d" 0 1 (fontified t)) . -11) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) 12) nil (24165 60754 100795 0) 0 nil]) ((1 . 12)) nil (24165 60754 100796 0) 0 nil]) ((#("use std::error::Error;
use mio::net" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t) 9 14 (face font-lock-constant-face fontified t) 14 16 (fontified t) 16 21 (face font-lock-type-face fontified t) 21 23 (fontified t) 23 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 30 (face font-lock-constant-face fontified t) 30 35 (fontified t)) . 1) (undo-tree-id1825 . -35) (undo-tree-id1826 . -30) (undo-tree-id1827 . -23) (undo-tree-id1828 . -23) (undo-tree-id1829 . -9) (undo-tree-id1830 . -9) (undo-tree-id1831 . -9) (undo-tree-id1832 . -9) (undo-tree-id1833 . -9) (undo-tree-id1834 . -9) (undo-tree-id1835 . -9) (undo-tree-id1836 . -9) (undo-tree-id1837 . -9) (undo-tree-id1838 . -9) (undo-tree-id1839 . -9) (undo-tree-id1840 . -9) (undo-tree-id1841 . -9) (undo-tree-id1842 . -9) (undo-tree-id1843 . -9) (undo-tree-id1844 . -9) (undo-tree-id1845 . -9) (undo-tree-id1846 . -9) (undo-tree-id1847 . -9) (undo-tree-id1848 . -16) (undo-tree-id1849 . -16) (undo-tree-id1850 . -16) (undo-tree-id1851 . -16) (undo-tree-id1852 . -16) (undo-tree-id1853 . -16) (undo-tree-id1854 . -16) (undo-tree-id1855 . -22) (undo-tree-id1856 . -22) (undo-tree-id1857 . -22) (undo-tree-id1858 . -22) (undo-tree-id1859 . -22) (undo-tree-id1860 . -22) (undo-tree-id1861 . -22) (undo-tree-id1862 . -22) (undo-tree-id1863 . -22) (undo-tree-id1864 . -22) (undo-tree-id1865 . -22) (undo-tree-id1866 . -22) (undo-tree-id1867 . -22) (undo-tree-id1868 . -22) (undo-tree-id1869 . -22) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -2) (undo-tree-id1874 . -2) (undo-tree-id1875 . -2) (undo-tree-id1876 . -3) (undo-tree-id1877 . -3) (undo-tree-id1878 . -3) (undo-tree-id1879 . -4) (undo-tree-id1880 . -4) (undo-tree-id1881 . -4) (undo-tree-id1882 . -4) (undo-tree-id1883 . -4) (undo-tree-id1884 . -4) (undo-tree-id1885 . -4) (undo-tree-id1886 . -4) (undo-tree-id1887 . -4) (undo-tree-id1888 . -4) (undo-tree-id1889 . -4) (undo-tree-id1890 . -22) (undo-tree-id1891 . -22) (undo-tree-id1892 . -22) (undo-tree-id1893 . 13) (undo-tree-id1894 . -23) (undo-tree-id1895 . -23) (undo-tree-id1896 . -23) (undo-tree-id1897 . -23) (undo-tree-id1898 . -23) (undo-tree-id1899 . -23) (undo-tree-id1900 . -23) (undo-tree-id1901 . -23) (undo-tree-id1902 . -23) (undo-tree-id1903 . -23) (undo-tree-id1904 . -23) (undo-tree-id1905 . -23) (undo-tree-id1906 . -23) (undo-tree-id1907 . -23) (undo-tree-id1908 . -23) (undo-tree-id1909 . -23) (undo-tree-id1910 . -24) (undo-tree-id1911 . -24) (undo-tree-id1912 . -24) (undo-tree-id1913 . -24) (undo-tree-id1914 . -24) (undo-tree-id1915 . -25) (undo-tree-id1916 . -25) (undo-tree-id1917 . -25) (undo-tree-id1918 . -26) (undo-tree-id1919 . -26) (undo-tree-id1920 . -26) (undo-tree-id1921 . -26) (undo-tree-id1922 . -26) (undo-tree-id1923 . -26) (undo-tree-id1924 . -26) (undo-tree-id1925 . -26) (undo-tree-id1926 . -26) (undo-tree-id1927 . -26) (undo-tree-id1928 . -26) (undo-tree-id1929 . -26) (undo-tree-id1930 . -26) (undo-tree-id1931 . -26) (undo-tree-id1932 . -26) (undo-tree-id1933 . -26) (undo-tree-id1934 . -26) (undo-tree-id1935 . -26) (undo-tree-id1936 . -26) (undo-tree-id1937 . -26) (undo-tree-id1938 . -26) (undo-tree-id1939 . -26) (undo-tree-id1940 . -26) (undo-tree-id1941 . -26) (undo-tree-id1942 . -26) (undo-tree-id1943 . -26) (undo-tree-id1944 . -26) (undo-tree-id1945 . -27) (undo-tree-id1946 . -27) (undo-tree-id1947 . -27) (undo-tree-id1948 . -27) (undo-tree-id1949 . -27) (undo-tree-id1950 . -28) (undo-tree-id1951 . -28) (undo-tree-id1952 . -28) (undo-tree-id1953 . -28) (undo-tree-id1954 . -28) (undo-tree-id1955 . -29) (undo-tree-id1956 . -29) (undo-tree-id1957 . -29) (undo-tree-id1958 . -29) (undo-tree-id1959 . -29) (undo-tree-id1960 . -29) (undo-tree-id1961 . -29) (undo-tree-id1962 . -29) (undo-tree-id1963 . -29) (undo-tree-id1964 . -29) (undo-tree-id1965 . -30) (undo-tree-id1966 . -30) (undo-tree-id1967 . -30) (undo-tree-id1968 . -30) (undo-tree-id1969 . -30) (undo-tree-id1970 . -30) (undo-tree-id1971 . -30) (undo-tree-id1972 . -30) (undo-tree-id1973 . -30) (undo-tree-id1974 . -31) (undo-tree-id1975 . -31) (undo-tree-id1976 . -31) (undo-tree-id1977 . -31) (undo-tree-id1978 . -31) (undo-tree-id1979 . -32) (undo-tree-id1980 . -32) (undo-tree-id1981 . -32) (undo-tree-id1982 . -32) (undo-tree-id1983 . -32) (undo-tree-id1984 . -32) (undo-tree-id1985 . -32) (undo-tree-id1986 . -32) (undo-tree-id1987 . -33) (undo-tree-id1988 . -33) (undo-tree-id1989 . -33) (undo-tree-id1990 . -33) (undo-tree-id1991 . -33) (undo-tree-id1992 . -33) (undo-tree-id1993 . -33) (undo-tree-id1994 . -33) (undo-tree-id1995 . -33) (undo-tree-id1996 . -33) (undo-tree-id1997 . -33) (undo-tree-id1998 . -33) (undo-tree-id1999 . -33) (undo-tree-id2000 . -33) (undo-tree-id2001 . -33) (undo-tree-id2002 . -33) (undo-tree-id2003 . -33) (undo-tree-id2004 . -33) (undo-tree-id2005 . -33) (undo-tree-id2006 . -33) (undo-tree-id2007 . -33) (undo-tree-id2008 . -33) (undo-tree-id2009 . -33) (undo-tree-id2010 . -33) (undo-tree-id2011 . -33) (undo-tree-id2012 . -33) (undo-tree-id2013 . -33) (undo-tree-id2014 . -33) (undo-tree-id2015 . -33) (undo-tree-id2016 . -33) (undo-tree-id2017 . -33) (undo-tree-id2018 . -33) (undo-tree-id2019 . -33) (undo-tree-id2020 . -33) (undo-tree-id2021 . -33) (undo-tree-id2022 . -33) (undo-tree-id2023 . -33) (undo-tree-id2024 . -33) (undo-tree-id2025 . -33) (undo-tree-id2026 . -33) (undo-tree-id2027 . -33) (undo-tree-id2028 . -34) (undo-tree-id2029 . -34) (undo-tree-id2030 . -34) (undo-tree-id2031 . -34) (undo-tree-id2032 . -34) (undo-tree-id2033 . -35) (undo-tree-id2034 . -35) (undo-tree-id2035 . -32) (undo-tree-id2036 . -35) (undo-tree-id2037 . -35) (undo-tree-id2038 . -35) (undo-tree-id2039 . -35) (undo-tree-id2040 . -35) (undo-tree-id2041 . -35) (undo-tree-id2042 . -35) (undo-tree-id2043 . -35) (undo-tree-id2044 . -35) (undo-tree-id2045 . -35) (undo-tree-id2046 . -35) (undo-tree-id2047 . -23) (undo-tree-id2048 . -23) (undo-tree-id2049 . -23)) nil (24165 60754 101071 0) 0 nil]) ((34 . 36)) nil (24165 60754 101080 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -34) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (#("e" 0 1 (fontified t)) . -35) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (#("t" 0 1 (fontified t)) . -36) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) 37) nil (24165 60754 101144 0) 0 nil]) ((34 . 37)) nil (24165 60754 101147 0) 0 nil]) ((31 . 34)) nil (24165 60754 101148 0) 0 nil]) ((27 . 31)) nil (24165 60754 101148 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -27) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (#(" " 0 1 (fontified t)) . -28) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) 29) nil (24165 60754 101180 0) 0 nil]) ((24 . 29)) nil (24165 60754 101182 0) 0 nil]) ((23 . 24) (t 24165 60543 246314 739000)) nil (24165 60754 101183 0) 0 nil]) ((22 . 23)) nil (24165 60543 240154 0) 0 nil]) ((apply yas--snippet-revive 17 22 #27=#s(yas--snippet nil nil nil 2 nil nil nil nil)) (apply yas--take-care-of-redo #27#) (17 . 22) (#("Error" 0 5 (fontified nil)) . 17) (17 . 22) (#("Error" 0 5 (fontified nil)) . -17) (17 . 22) (#("E" 0 1 (face font-lock-type-face fontified t)) . -17) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) 18) nil (24165 60543 240185 0) 0 nil]) ((15 . 18)) nil (24165 60543 240188 0) 0 nil]) ((apply yas--snippet-revive 10 15 #28=#s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #28#) (10 . 15) (#("error" 0 5 (fontified nil)) . 10) (10 . 15) (#("error" 0 5 (fontified nil)) . -10) (10 . 15) (#("err" 0 3 (fontified t)) . -10) (undo-tree-id1142 . -3) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -2) (undo-tree-id1155 . -3) (undo-tree-id1156 . -3) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (undo-tree-id1159 . -3) (undo-tree-id1160 . -3) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3) 13) nil (24165 60543 240219 0) 0 nil]) ((1 . 13)) nil (24165 60543 240222 0) 0 nil]) ((#("use mio::" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . 1) (undo-tree-id1163 . -9) (undo-tree-id1164 . -7) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) (undo-tree-id1182 . -4) (undo-tree-id1183 . -4) (undo-tree-id1184 . -4) (undo-tree-id1185 . -4) (undo-tree-id1186 . -4) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -4) (undo-tree-id1224 . -4) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -5) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -5) (undo-tree-id1305 . -5) (undo-tree-id1306 . -5) (undo-tree-id1307 . -5) (undo-tree-id1308 . -5) (undo-tree-id1309 . -5) (undo-tree-id1310 . -5) (undo-tree-id1311 . -6) (undo-tree-id1312 . -6) (undo-tree-id1313 . -6) (undo-tree-id1314 . -6) (undo-tree-id1315 . -6) (undo-tree-id1316 . -6) (undo-tree-id1317 . -6) (undo-tree-id1318 . -7) (undo-tree-id1319 . -7) (undo-tree-id1320 . -7) (undo-tree-id1321 . -7) (undo-tree-id1322 . -7) (undo-tree-id1323 . -7) (undo-tree-id1324 . -7) (undo-tree-id1325 . -7) (undo-tree-id1326 . -7) (undo-tree-id1327 . -8) (undo-tree-id1328 . -8) (undo-tree-id1329 . -8) (undo-tree-id1330 . -8) (undo-tree-id1331 . -8) (undo-tree-id1332 . -9) (undo-tree-id1333 . -9) (undo-tree-id1334 . -9) (undo-tree-id1335 . -9) (undo-tree-id1336 . -9) (undo-tree-id1337 . -9) (undo-tree-id1338 . -9) (undo-tree-id1339 . -9) (undo-tree-id1340 . -9) (undo-tree-id1341 . -9) (undo-tree-id1342 . -9) (undo-tree-id1343 . -9) (undo-tree-id1344 . -9) (undo-tree-id1345 . -9) (undo-tree-id1346 . -9) (undo-tree-id1347 . -9) (undo-tree-id1348 . -9) (undo-tree-id1349 . -9) (undo-tree-id1350 . -9) (undo-tree-id1351 . -9) (undo-tree-id1352 . -9) (undo-tree-id1353 . -9) (undo-tree-id1354 . -9) (undo-tree-id1355 . -9) (undo-tree-id1356 . -9) (undo-tree-id1357 . -9) (undo-tree-id1358 . -9) (undo-tree-id1359 . -9) (undo-tree-id1360 . -9) (undo-tree-id1361 . -9) (undo-tree-id1362 . -9) (undo-tree-id1363 . -9) (undo-tree-id1364 . -9) (undo-tree-id1365 . -9) (undo-tree-id1366 . -9) (undo-tree-id1367 . -9) (undo-tree-id1368 . -9) (undo-tree-id1369 . -9) (undo-tree-id1370 . -9) (undo-tree-id1371 . -9) (undo-tree-id1372 . -9) (undo-tree-id1373 . -9) (undo-tree-id1374 . -9) (undo-tree-id1375 . -9) (undo-tree-id1376 . -9) (undo-tree-id1377 . -9) (undo-tree-id1378 . -9) (undo-tree-id1379 . -9) (undo-tree-id1380 . -9) (undo-tree-id1381 . -9) (undo-tree-id1382 . -9) (undo-tree-id1383 . -9) (undo-tree-id1384 . -9) (undo-tree-id1385 . -9) (undo-tree-id1386 . -9) (undo-tree-id1387 . -9) (undo-tree-id1388 . -9) (undo-tree-id1389 . -9) (undo-tree-id1390 . -9) (undo-tree-id1391 . -9) (undo-tree-id1392 . -9) (undo-tree-id1393 . -9) (undo-tree-id1394 . -9) (undo-tree-id1395 . -9) (undo-tree-id1396 . -9) (undo-tree-id1397 . -9) (undo-tree-id1398 . -9) (undo-tree-id1399 . -9) (undo-tree-id1400 . -9) (undo-tree-id1401 . -9) (undo-tree-id1402 . -9) (undo-tree-id1403 . -9) (undo-tree-id1404 . -9) (undo-tree-id1405 . -9) (undo-tree-id1406 . -9) (undo-tree-id1407 . -9) (undo-tree-id1408 . -9) (undo-tree-id1409 . -9) (undo-tree-id1410 . -9) (undo-tree-id1411 . -9) (undo-tree-id1412 . -9) (undo-tree-id1413 . -9) (undo-tree-id1414 . -9) (undo-tree-id1415 . -9) (undo-tree-id1416 . -9)) nil (24165 60543 240539 0) 0 nil]) ((5 . 10)) nil (24165 60543 240550 0) 0 nil]) ((#("mio::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -5) (undo-tree-id1417 . -5) (undo-tree-id1418 . -2) (undo-tree-id1419 . -5) (undo-tree-id1420 . -5) (undo-tree-id1421 . -5) (undo-tree-id1422 . -5) (undo-tree-id1423 . -5) (undo-tree-id1424 . -5) (undo-tree-id1425 . -5) (undo-tree-id1426 . -5) (undo-tree-id1427 . -5) (undo-tree-id1428 . -5) (undo-tree-id1429 . -5) (undo-tree-id1430 . -5) (undo-tree-id1431 . -5) (undo-tree-id1432 . -5) (undo-tree-id1433 . -5) (undo-tree-id1434 . -5) (undo-tree-id1435 . -5) (undo-tree-id1436 . -5) (undo-tree-id1437 . -5) (undo-tree-id1438 . -5) (undo-tree-id1439 . -5) (undo-tree-id1440 . -5) (undo-tree-id1441 . -5) (undo-tree-id1442 . -5) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1452 . -5) (undo-tree-id1453 . -5) (undo-tree-id1454 . -5) (undo-tree-id1455 . -5) (undo-tree-id1456 . -5) (undo-tree-id1457 . -5) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) (undo-tree-id1465 . -5) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) (undo-tree-id1473 . -5) (undo-tree-id1474 . -5) (undo-tree-id1475 . -5) (undo-tree-id1476 . -5) (undo-tree-id1477 . -5) (undo-tree-id1478 . -5) (undo-tree-id1479 . -5) (undo-tree-id1480 . -5) (undo-tree-id1481 . -5) (undo-tree-id1482 . -5) (undo-tree-id1483 . -5) (undo-tree-id1484 . -5) (undo-tree-id1485 . -5) (undo-tree-id1486 . -5) (undo-tree-id1487 . -5) (undo-tree-id1488 . -5) (undo-tree-id1489 . -5) (undo-tree-id1490 . -5) (undo-tree-id1491 . -5) (undo-tree-id1492 . -5) (undo-tree-id1493 . -5) (undo-tree-id1494 . -5) (undo-tree-id1495 . -5) (undo-tree-id1496 . -5) (undo-tree-id1497 . -5) (undo-tree-id1498 . -5) (undo-tree-id1499 . -5) (undo-tree-id1500 . -5) (undo-tree-id1501 . -5) (undo-tree-id1502 . -5) (undo-tree-id1503 . -5) (undo-tree-id1504 . -5) (undo-tree-id1505 . -5) (undo-tree-id1506 . -5) (undo-tree-id1507 . -5) (undo-tree-id1508 . -5) (undo-tree-id1509 . -5) (undo-tree-id1510 . -5) (undo-tree-id1511 . -5) (undo-tree-id1512 . -5) (undo-tree-id1513 . -5) (undo-tree-id1514 . -5) (undo-tree-id1515 . -5) (undo-tree-id1516 . -5) (undo-tree-id1517 . -5) (undo-tree-id1518 . -5) (undo-tree-id1519 . -5) (undo-tree-id1520 . -5) (undo-tree-id1521 . -5) (undo-tree-id1522 . -5) (undo-tree-id1523 . -5) (undo-tree-id1524 . -5) (undo-tree-id1525 . -5) (undo-tree-id1526 . -5) (undo-tree-id1527 . -5) (undo-tree-id1528 . -5) (undo-tree-id1529 . -5) (undo-tree-id1530 . -5) (undo-tree-id1531 . -5) (undo-tree-id1532 . -5) (undo-tree-id1533 . -5) (undo-tree-id1534 . -5) (undo-tree-id1535 . -5) (undo-tree-id1536 . -5) (undo-tree-id1537 . -5) (undo-tree-id1538 . -5) (undo-tree-id1539 . -5) (undo-tree-id1540 . -5) (undo-tree-id1541 . -5) (undo-tree-id1542 . -5) (undo-tree-id1543 . -5) (undo-tree-id1544 . -5) (undo-tree-id1545 . -5) (undo-tree-id1546 . -5) (undo-tree-id1547 . -5) 10) nil (24165 60543 240693 0) 0 nil]) ((#("net::{" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10) (undo-tree-id1548 . -6) (undo-tree-id1549 . -3) (undo-tree-id1550 . -3) (undo-tree-id1551 . -3) (undo-tree-id1552 . -3) (undo-tree-id1553 . -3) (undo-tree-id1554 . -3) (undo-tree-id1555 . -3) (undo-tree-id1556 . -3) (undo-tree-id1557 . -3) (undo-tree-id1558 . -3) (undo-tree-id1559 . -3) (undo-tree-id1560 . -3) (undo-tree-id1561 . -3) (undo-tree-id1562 . -3) (undo-tree-id1563 . -3) (undo-tree-id1564 . -3) (undo-tree-id1565 . -3) (undo-tree-id1566 . -3) (undo-tree-id1567 . -5) (undo-tree-id1568 . -5) (undo-tree-id1569 . -6) (undo-tree-id1570 . -6) (undo-tree-id1571 . -6) (undo-tree-id1572 . -6) (undo-tree-id1573 . -6) (undo-tree-id1574 . -6) (undo-tree-id1575 . -6) (undo-tree-id1576 . -6) (undo-tree-id1577 . -6) (undo-tree-id1578 . -6) (undo-tree-id1579 . -6) (undo-tree-id1580 . -6) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (undo-tree-id1583 . -6) (undo-tree-id1584 . -6) (undo-tree-id1585 . -6) (undo-tree-id1586 . -6) (undo-tree-id1587 . -6) (undo-tree-id1588 . -6) (undo-tree-id1589 . -6) (undo-tree-id1590 . -6) (undo-tree-id1591 . -6) (undo-tree-id1592 . -6) (undo-tree-id1593 . -6) (undo-tree-id1594 . -6) (undo-tree-id1595 . -6) (undo-tree-id1596 . -6) (undo-tree-id1597 . -6) (undo-tree-id1598 . -6) (undo-tree-id1599 . -6) (undo-tree-id1600 . -6) (undo-tree-id1601 . -6) (undo-tree-id1602 . -6) (undo-tree-id1603 . -6) (undo-tree-id1604 . -6) (undo-tree-id1605 . -6) (undo-tree-id1606 . -6) (undo-tree-id1607 . -6) (undo-tree-id1608 . -6) (undo-tree-id1609 . -6) (undo-tree-id1610 . -6) (undo-tree-id1611 . -6) (undo-tree-id1612 . -6) (undo-tree-id1613 . -6) (undo-tree-id1614 . -6) (undo-tree-id1615 . -6) (undo-tree-id1616 . -6) (undo-tree-id1617 . -6) (undo-tree-id1618 . -6) (undo-tree-id1619 . -6) (undo-tree-id1620 . -6) (undo-tree-id1621 . -6) (undo-tree-id1622 . -6) (undo-tree-id1623 . -6) (undo-tree-id1624 . -6) (undo-tree-id1625 . -6) (undo-tree-id1626 . -6) (undo-tree-id1627 . -6) (undo-tree-id1628 . -6) (undo-tree-id1629 . -6) (undo-tree-id1630 . -6) (undo-tree-id1631 . -6) (undo-tree-id1632 . -6) (undo-tree-id1633 . -6) (undo-tree-id1634 . -6) (undo-tree-id1635 . -6) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -6) (undo-tree-id1646 . -6) (undo-tree-id1647 . -6) (undo-tree-id1648 . -6) (undo-tree-id1649 . -6) (undo-tree-id1650 . -6) (undo-tree-id1651 . -6) (undo-tree-id1652 . -6) (undo-tree-id1653 . -6) (undo-tree-id1654 . -6) (undo-tree-id1655 . -6) (undo-tree-id1656 . -6) (undo-tree-id1657 . -6) (undo-tree-id1658 . -6) (undo-tree-id1659 . -6) (undo-tree-id1660 . -6) (undo-tree-id1661 . -5) (undo-tree-id1662 . -6) (undo-tree-id1663 . -5) (undo-tree-id1664 . -6) (undo-tree-id1665 . -6) (undo-tree-id1666 . -6) (undo-tree-id1667 . -6) 16) nil (24165 60543 240822 0) 0 nil]) ((#("TcpListener};" 0 11 (face font-lock-type-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . -16) (undo-tree-id1668 . -13) (undo-tree-id1669 . -7) (undo-tree-id1670 . -7) (undo-tree-id1671 . -7) (undo-tree-id1672 . -7) (undo-tree-id1673 . -7) (undo-tree-id1674 . -7) (undo-tree-id1675 . -7) (undo-tree-id1676 . -7) (undo-tree-id1677 . -7) (undo-tree-id1678 . -7) (undo-tree-id1679 . -7) (undo-tree-id1680 . -7) (undo-tree-id1681 . -7) (undo-tree-id1682 . -7) (undo-tree-id1683 . -7) (undo-tree-id1684 . -7) (undo-tree-id1685 . -7) (undo-tree-id1686 . -7) (undo-tree-id1687 . -7) (undo-tree-id1688 . -7) (undo-tree-id1689 . -7) (undo-tree-id1690 . -7) (undo-tree-id1691 . -7) (undo-tree-id1692 . -7) (undo-tree-id1693 . -7) (undo-tree-id1694 . -7) (undo-tree-id1695 . -7) (undo-tree-id1696 . -7) (undo-tree-id1697 . -7) (undo-tree-id1698 . -7) (undo-tree-id1699 . -7) (undo-tree-id1700 . -7) (undo-tree-id1701 . -7) (undo-tree-id1702 . -7) (undo-tree-id1703 . -7) (undo-tree-id1704 . -7) (undo-tree-id1705 . -7) (undo-tree-id1706 . -7) (undo-tree-id1707 . -7) (undo-tree-id1708 . -7) (undo-tree-id1709 . -7) (undo-tree-id1710 . -7) (undo-tree-id1711 . -7) (undo-tree-id1712 . -7) (undo-tree-id1713 . -7) (undo-tree-id1714 . -7) (undo-tree-id1715 . -7) (undo-tree-id1716 . -7) (undo-tree-id1717 . -7) (undo-tree-id1718 . -13) (undo-tree-id1719 . -13) (undo-tree-id1720 . -13) (undo-tree-id1721 . -13) (undo-tree-id1722 . -13) (undo-tree-id1723 . -13) (undo-tree-id1724 . -13) (undo-tree-id1725 . -13) (undo-tree-id1726 . -13) (undo-tree-id1727 . -13) (undo-tree-id1728 . -13) (undo-tree-id1729 . -13) (undo-tree-id1730 . -13) (undo-tree-id1731 . -13) (undo-tree-id1732 . -13) (undo-tree-id1733 . -13) (undo-tree-id1734 . -13) (undo-tree-id1735 . -13) 29 (t 24165 60423 326633 16000)) nil (24165 60543 240897 0) 0 nil]) ((23 . 29)) nil (24165 60423 314102 0) 0 nil]) ((#("n" 0 1 (face font-lock-type-face fontified t)) . -23) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -24) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -25) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (#("}" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -26) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . 1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) 27) nil (24165 60423 314282 0) 0 nil]) ((16 . 26) (15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (13 . 16)) nil (24165 60423 314295 0) 0 nil]) ((#(";" 0 1 (fontified t)) . -13) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) 14 (t 24165 60400 967093 269000)) nil (24165 60423 314320 0) 0 nil]) ((12 . 14)) nil (24165 60400 953268 0) 0 nil]) ((#("t" 0 1 (fontified t)) . -12) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (#("p" 0 1 (fontified t)) . -13) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) 14) nil (24165 60400 953328 0) 0 nil]) ((10 . 14)) nil (24165 60400 953332 0) 0 nil]) ((#("net::{" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10) (undo-tree-id903 . -6) (undo-tree-id904 . -5) (undo-tree-id905 . -5) (undo-tree-id906 . -6) (undo-tree-id907 . -6) (undo-tree-id908 . -6) (undo-tree-id909 . -6) (undo-tree-id910 . -6) (undo-tree-id911 . -6) (undo-tree-id912 . -6) (undo-tree-id913 . -6) (undo-tree-id914 . -6) (undo-tree-id915 . -6) (undo-tree-id916 . -6) (undo-tree-id917 . -6) (undo-tree-id918 . -6) (undo-tree-id919 . -6) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (undo-tree-id922 . -6) (undo-tree-id923 . -6) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -6) (undo-tree-id934 . -6) (undo-tree-id935 . -6) (undo-tree-id936 . -6) (undo-tree-id937 . -6) (undo-tree-id938 . -6) (undo-tree-id939 . -6) (undo-tree-id940 . -6) (undo-tree-id941 . -6) (undo-tree-id942 . -6) (undo-tree-id943 . -6) (undo-tree-id944 . -6) (undo-tree-id945 . -6) (undo-tree-id946 . -6) (undo-tree-id947 . -6) (undo-tree-id948 . -6) (undo-tree-id949 . -5) (undo-tree-id950 . -6) (undo-tree-id951 . -5) (undo-tree-id952 . -6) (undo-tree-id953 . -6) (undo-tree-id954 . -6) (undo-tree-id955 . -6) 16) nil (24165 60400 953405 0) 0 nil]) ((#("UdpListener};" 0 11 (face font-lock-type-face fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . -16) (undo-tree-id956 . -13) (undo-tree-id957 . -13) (undo-tree-id958 . -13) (undo-tree-id959 . -13) (undo-tree-id960 . -13) (undo-tree-id961 . -13) (undo-tree-id962 . -13) (undo-tree-id963 . -13) (undo-tree-id964 . -13) (undo-tree-id965 . -13) (undo-tree-id966 . -13) (undo-tree-id967 . -13) (undo-tree-id968 . -13) (undo-tree-id969 . -13) (undo-tree-id970 . -13) (undo-tree-id971 . -13) (undo-tree-id972 . -13) (undo-tree-id973 . -13) (undo-tree-id974 . -13) 29 (t 24165 60389 271609 319000)) nil (24165 60400 953432 0) 0 nil]) ((28 . 29)) nil (24165 60389 259467 0) 0 nil]) ((19 . 27)) nil (24165 60389 259472 0) 0 nil]) ((16 . 19) (15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (1 . 16)) nil (24165 60389 259487 0) 0 nil]) ((1 . 3) (t 24165 60351 499534 318000)) nil (24165 60389 259490 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 2) nil (24165 60351 494758 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -2) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 3) nil (24165 60351 494774 0) 0 nil]) ((#("use mio::n" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 10 (fontified t)) . 1) (undo-tree-id85 . -10) (undo-tree-id86 . -7) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) (undo-tree-id244 . -4) (undo-tree-id245 . -4) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -4) (undo-tree-id256 . -4) (undo-tree-id257 . -4) (undo-tree-id258 . -4) (undo-tree-id259 . -4) (undo-tree-id260 . -4) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) (undo-tree-id265 . -4) (undo-tree-id266 . -4) (undo-tree-id267 . -4) (undo-tree-id268 . -4) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) (undo-tree-id272 . -4) (undo-tree-id273 . -4) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -4) (undo-tree-id284 . -4) (undo-tree-id285 . -4) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) (undo-tree-id296 . -4) (undo-tree-id297 . -4) (undo-tree-id298 . -4) (undo-tree-id299 . -4) (undo-tree-id300 . -4) (undo-tree-id301 . -4) (undo-tree-id302 . -4) (undo-tree-id303 . -4) (undo-tree-id304 . -4) (undo-tree-id305 . -4) (undo-tree-id306 . -4) (undo-tree-id307 . -4) (undo-tree-id308 . -4) (undo-tree-id309 . -4) (undo-tree-id310 . -4) (undo-tree-id311 . -4) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -4) (undo-tree-id317 . -4) (undo-tree-id318 . -4) (undo-tree-id319 . -7) (undo-tree-id320 . -7) (undo-tree-id321 . -7) (undo-tree-id322 . -7) (undo-tree-id323 . -7) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -9) (undo-tree-id332 . -9) (undo-tree-id333 . -9) (undo-tree-id334 . -9) (undo-tree-id335 . -9) (undo-tree-id336 . -9) (undo-tree-id337 . -9) (undo-tree-id338 . -9) (undo-tree-id339 . -10) (undo-tree-id340 . -10) (undo-tree-id341 . -9) (undo-tree-id342 . -10) (undo-tree-id343 . -10) (undo-tree-id344 . -10) (undo-tree-id345 . -10) (undo-tree-id346 . -10) (undo-tree-id347 . -10) (undo-tree-id348 . -10) (undo-tree-id349 . -10) (undo-tree-id350 . -10) (undo-tree-id351 . -10) (undo-tree-id352 . -10)) nil (24165 60351 495122 0) 0 nil]) ((8 . 11)) nil (24165 60351 495134 0) 0 nil]) ((apply yas--snippet-revive 5 8 #29=#s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #29#) (5 . 8) (#("mio" 0 3 (fontified nil)) . 5) (5 . 8) (#("mio" 0 3 (fontified nil)) . -5) (5 . 8) (#("mi" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id353 . -2) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -2) (undo-tree-id422 . -2) (undo-tree-id423 . -2) 7) nil (24165 60351 495225 0) 0 nil]) ((6 . 7)) nil (24165 60351 495230 0) 0 nil]) ((#("i" 0 1 (face font-lock-constant-face fontified t)) . -6) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -7) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) 8) nil (24165 60351 495288 0) 0 nil]) ((7 . 8)) nil (24165 60351 495291 0) 0 nil]) ((#("o" 0 1 (face font-lock-constant-face fontified t)) . -7) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 8) nil (24165 60351 495305 0) 0 nil]) ((7 . 8)) nil (24165 60351 495307 0) 0 nil]) ((5 . 7)) nil (24165 60351 495307 0) 0 nil]) ((#("}" 0 1 (face (rainbow-delimiters-unmatched-face) fontified t)) . -5) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . 1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) 6) nil (24165 60351 495325 0) 0 nil]) ((#("mio::" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t)) . -5) (undo-tree-id502 . -5) (undo-tree-id503 . -3) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -5) (undo-tree-id541 . -5) (undo-tree-id542 . -5) (undo-tree-id543 . -5) (undo-tree-id544 . -5) (undo-tree-id545 . -5) (undo-tree-id546 . -5) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (undo-tree-id550 . -5) (undo-tree-id551 . -5) (undo-tree-id552 . -5) (undo-tree-id553 . -5) (undo-tree-id554 . -5) (undo-tree-id555 . -5) (undo-tree-id556 . -5) (undo-tree-id557 . -5) (undo-tree-id558 . -5) (undo-tree-id559 . -5) (undo-tree-id560 . -5) (undo-tree-id561 . -5) (undo-tree-id562 . -5) (undo-tree-id563 . -5) (undo-tree-id564 . -5) (undo-tree-id565 . -5) (undo-tree-id566 . -5) (undo-tree-id567 . -5) (undo-tree-id568 . -5) (undo-tree-id569 . -5) (undo-tree-id570 . -5) (undo-tree-id571 . -5) (undo-tree-id572 . -5) (undo-tree-id573 . -5) (undo-tree-id574 . -5) (undo-tree-id575 . -5) (undo-tree-id576 . -5) (undo-tree-id577 . -5) (undo-tree-id578 . -5) (undo-tree-id579 . -5) (undo-tree-id580 . -5) (undo-tree-id581 . -5) (undo-tree-id582 . -5) (undo-tree-id583 . -5) (undo-tree-id584 . -5) (undo-tree-id585 . -5) (undo-tree-id586 . -5) (undo-tree-id587 . -5) (undo-tree-id588 . -5) (undo-tree-id589 . -5) (undo-tree-id590 . -5) (undo-tree-id591 . -5) (undo-tree-id592 . -5) (undo-tree-id593 . -5) (undo-tree-id594 . -5) (undo-tree-id595 . -5) 10) nil (24165 60351 495444 0) 0 nil]) ((#("net::{" 0 3 (face font-lock-constant-face fontified t) 3 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t)) . -10) (undo-tree-id596 . -6) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -3) (undo-tree-id608 . -3) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -5) (undo-tree-id625 . -5) (undo-tree-id626 . -5) (undo-tree-id627 . -5) (undo-tree-id628 . -5) (undo-tree-id629 . -6) (undo-tree-id630 . -5) (undo-tree-id631 . -6) (undo-tree-id632 . -6) (undo-tree-id633 . -6) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6) (undo-tree-id637 . -6) 16) nil (24165 60351 495494 0) 0 nil]) ((15 . 17) (#("{" 0 1 (fontified nil)) . -15) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (1 . 16)) nil (24165 60351 495499 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -14) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) 15) nil (24165 60351 495596 0) 0 nil]) ((#("    std::m" 0 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 10 (fontified t)) . 15) (undo-tree-id721 . -10) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -5) (undo-tree-id725 . -5) (undo-tree-id726 . -6) (undo-tree-id727 . -6) (undo-tree-id728 . -7) (undo-tree-id729 . -7) (undo-tree-id730 . -7) (undo-tree-id731 . -7) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -8) (undo-tree-id735 . -8) (undo-tree-id736 . -8) (undo-tree-id737 . -8) (undo-tree-id738 . -8) (undo-tree-id739 . -8) (undo-tree-id740 . -8) (undo-tree-id741 . -8) (undo-tree-id742 . -8) (undo-tree-id743 . -8) (undo-tree-id744 . -8) (undo-tree-id745 . -8) (undo-tree-id746 . -8) (undo-tree-id747 . -8) (undo-tree-id748 . -8) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) (undo-tree-id755 . -9) (undo-tree-id756 . -9) (undo-tree-id757 . -9) (undo-tree-id758 . -9) (undo-tree-id759 . -9) (undo-tree-id760 . -9) (undo-tree-id761 . -9) (undo-tree-id762 . -9) (undo-tree-id763 . -9) (undo-tree-id764 . -9) (undo-tree-id765 . -9) (undo-tree-id766 . -9) (undo-tree-id767 . -9) (undo-tree-id768 . -9) (undo-tree-id769 . -9) (undo-tree-id770 . -9) (undo-tree-id771 . -9) (undo-tree-id772 . -9) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -9) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -10)) nil (24165 60351 495686 0) 0 nil]) ((24 . 25)) nil (24165 60351 495690 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -24) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) 25) nil (24165 60351 495700 0) 0 nil]) ((22 . 25)) nil (24165 60351 495702 0) 0 nil]) ((19 . 22)) nil (24165 60351 495702 0) 0 nil]) ((#("use std::" 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t) 4 7 (face font-lock-constant-face fontified t) 7 9 (fontified t)) . 1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -3) (undo-tree-id812 . -3) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -5) (undo-tree-id816 . -5) (undo-tree-id817 . -6) (undo-tree-id818 . -6) (undo-tree-id819 . -7) (undo-tree-id820 . -7) (undo-tree-id821 . -8) (undo-tree-id822 . -8) (undo-tree-id823 . -9) (undo-tree-id824 . -9) (undo-tree-id825 . -9) (undo-tree-id826 . -9) (undo-tree-id827 . -9) (undo-tree-id828 . -9) (undo-tree-id829 . -9) (undo-tree-id830 . -9)) nil (24165 60351 495744 0) 0 nil]) ((1 . 10)) nil (24165 60351 495746 0) 0 nil]) ((#("use " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1) (undo-tree-id831 . -4) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -2) (undo-tree-id835 . -2) (undo-tree-id836 . -3) (undo-tree-id837 . -3) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) 5) nil (24165 60351 495766 0) 0 nil]) ((#("st" 0 2 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id846 . -2) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -2) (undo-tree-id850 . -2) 7) nil (24165 60351 495773 0) 0 nil]) ((1 . 7)) nil (24165 60351 495775 0) 0 nil]) ((#("use " 0 3 (face font-lock-keyword-face fontified t) 3 4 (fontified t)) . -1) (undo-tree-id851 . -4) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -2) (undo-tree-id855 . -2) (undo-tree-id856 . -3) (undo-tree-id857 . -3) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) 5) nil (24165 60351 495791 0) 0 nil]) ((#("m" 0 1 (face font-lock-constant-face fontified t)) . -5) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) 6) nil (24165 60351 495796 0) 0 nil]) ((1 . 6)) nil (24165 60351 495798 0) 0 nil]) ((#("u" 0 1 (fontified t)) . -1) (undo-tree-id867 . -1) (#("s" 0 1 (fontified t)) . -2) (undo-tree-id868 . -1) 3) nil (24165 60351 495801 0) 0 nil]) ((1 . 3)) nil (24165 60351 495802 0) 0 nil]) ((1 . 3) (t 24165 59447 178341 160000)) nil (24165 60351 495803 0) 0 nil]) ((#("println!(\"" 0 8 (face rust-builtin-formatting-macro-face fontified t) 8 9 (face (rainbow-delimiters-depth-2-face) fontified t) 9 10 (face font-lock-string-face fontified t)) . -17) (undo-tree-id0 . -10) (undo-tree-id1 . -10) (undo-tree-id2 . -10) (undo-tree-id3 . -10) (undo-tree-id4 . -10) (undo-tree-id5 . -10) (undo-tree-id6 . -10) (undo-tree-id7 . -10) (undo-tree-id8 . -10) (undo-tree-id9 . -10) (undo-tree-id10 . -10) (undo-tree-id11 . -10) (undo-tree-id12 . -10) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -10) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . -10) (undo-tree-id19 . -10) (undo-tree-id20 . -9) (undo-tree-id21 . -10) (undo-tree-id22 . 1) (undo-tree-id23 . -10) (undo-tree-id24 . -10) 27) nil (24165 59447 166069 0) 0 nil]) ((#("Hello, " 0 7 (face font-lock-string-face fontified t)) . -27) (undo-tree-id25 . -7) (undo-tree-id26 . -7) (undo-tree-id27 . -7) (undo-tree-id28 . -7) (undo-tree-id29 . -7) (undo-tree-id30 . -7) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) 34) nil (24165 59447 166097 0) 0 nil]) ((#("world!\");" 0 7 (face font-lock-string-face fontified t) 7 8 (face (rainbow-delimiters-depth-2-face) fontified t) 8 9 (fontified t)) . -34) (undo-tree-id44 . -9) (undo-tree-id45 . -9) (undo-tree-id46 . -9) (undo-tree-id47 . -9) (undo-tree-id48 . -9) (undo-tree-id49 . -9) (undo-tree-id50 . -9) (undo-tree-id51 . -9) (undo-tree-id52 . -9) (undo-tree-id53 . -9) 43 (t 24165 59057 390489 95000)) nil (24165 59447 166111 0) 0 nil]) nil nil (24165 59447 166113 0) 0 nil] #30# 99814 458 nil)